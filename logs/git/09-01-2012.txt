[00:00] *** PerlJam joined
[00:00] *** Sir_Rai joined
[00:04] *** legnaleurc left
[00:04] *** legnaleurc joined
[00:05] *** fermianyon joined
[00:07] *** Morphous_ joined
[00:07] *** sattu94__ joined
[00:10] *** sattu94 left
[00:10] *** matsebc joined
[00:11] *** Chib joined
[00:12] *** legnaleurc left
[00:15] *** legnaleurc joined
[00:15] *** eletuchy joined
[00:16] <sitaram> EugeneKay: fixed (I removed the reference to DAG for now instead of adding a definition ;-)  Maybe I'll add it later but right now it seems to work very well even without

[00:16] <sitaram> thenks

[00:17] <sitaram> thanks*

[00:17] *** Rogi left
[00:17] <EugeneKay> That's cheating. :-p

[00:18] * cxreg pimps smartcd some more

[00:18] <cxreg> moar users please!

[00:20] <EugeneKay> smartcd?

[00:20] *** Rhonda joined
[00:21] *** fundies joined
[00:21] *** psoo left
[00:22] <cxreg> https://github.com/cxreg/smartcd

[00:22] <EugeneKay> Ahh.

[00:22] <cxreg> pretty soon it will be integrated with both perlbrew and rvm

[00:23] <EugeneKay> I don't think my _ps1_ functions could handle having that attached.

[00:23] <cxreg> i'm pondering adding git support as auto-versioning for its scripts

[00:23] <Rhonda> is it possible to specify a different format for git blame?  I need the author email instead of the name for some stats (or both), but don't find an entry in man git-blame?

[00:23] <gitinfo> the git-blame manpage is available at http://jk.gs/git-blame.html

[00:24] <cxreg> EugeneKay: it could

[00:24] *** fayimora joined
[00:24] <cxreg> EugeneKay: or put to put differently, if you find a situation that breaks, i will fix it

[00:24] <EugeneKay> Not without me fiddling them

[00:24] <cxreg> i'm looking for bizarro cases right now

[00:24] *** fayimora left
[00:24] <EugeneKay> https://github.com/eugenekay/scripts/blob/master/HOMEDIR/.bashrc

[00:24] *** fundies left
[00:25] <cxreg> oh, PROMPT_COMMAND?

[00:25] <EugeneKay> Yah.

[00:25] <cxreg> thats not a critical part of smartcd

[00:25] *** cheeseboy joined
[00:25] <EugeneKay> _ps1_build actually puts together PS1

[00:26] <cxreg> the main way of functioning is a cd() shell function

[00:26] <EugeneKay> I know for a fact that my _ps1_git function is lacking - it has problems with trying to rev-parse a freshly init'ed repo, for one.

[00:26] *** cccaldas left
[00:26] <cxreg> but that being said, even if you have a PROMPT_COMMAND and you want to smartcd using that, it will run and then run your code afterwards

[00:26] <cxreg> it's quite robust

[00:26] <EugeneKay> Interesting.

[00:27] <cxreg> in zsh its even simpler, since there's an array for hooks

[00:28] *** legnaleurc left
[00:28] <cxreg> i've put a ton of work into this thing, please give it a try if you have any interest.  love to hear some feedback.

[00:28] <EugeneKay> I can't think of much of a use case for myself. My defaults tend to just work for me.

[00:28] *** legnaleurc joined
[00:29] <EugeneKay> I will curl it and see what breaks, tho

[00:29] <cxreg> cd project; autostash alias restart="do something fiddly with my project"; restart; cd .. # restart alias evaporates

[00:29] <cxreg> stuff like that is awfully handy

[00:29] *** Tuller joined
[00:29] <EugeneKay> Does it do git tab-completing on branches at all?

[00:30] <cxreg> not sure how you mean

[00:30] <EugeneKay> Like http://blog.bitfluent.com/post/27983389/git-utilities-you-cant-live-without

[00:31] <cxreg> it comes with its own bash completion library, but that's unrelated to git

[00:31] *** queequeg1 left
[00:31] *** Agos left
[00:32] *** flippo joined
[00:32] <cxreg> the completion will set itself up if you ask it to during `smartcd config`

[00:33] *** queequeg1 joined
[00:34] *** legnaleurc left
[00:36] *** sattu94 joined
[00:36] *** mandric left
[00:38] *** legnaleurc joined
[00:40] *** sattu94__ left
[00:42] <Mikachu> EugeneKay: zsh has git completion distributed with it, and a system for querying vcs systems

[00:42] *** legnaleurc_ joined
[00:42] *** legnaleurc left
[00:44] *** macRover joined
[00:44] *** robotmay left
[00:45] <cxreg> Mikachu: i cant get away from you ;)

[00:46] <cxreg> zsh has been pretty impressive

[00:46] <thiago> it's always been

[00:46] *** Cromulent left
[00:46] <thiago> except when you try to expand a filename with git on it. It takes a long time.

[00:47] *** legnaleurc_ left
[00:47] *** Tuller left
[00:47] *** legnaleurc joined
[00:48] <Mikachu> it's fast now

[00:48] <thiago> it's still slow

[00:48] <thiago> zsh 4.3

[00:48] <Mikachu> saying zsh 4.3 is like saying git 1.x

[00:48] <thiago> 4.3.11

[00:49] <Mikachu> that's way before the speed fixes

[00:50] * thiago tries to install Fedora 16's zsh

[00:51] <Mikachu> cxreg: i hope you're not offended if i don't immediately know who you are ;)

[00:51] <cxreg> Mikachu: i've bugged you a bunch in #zsh

[00:51] <cxreg> dont sweat it

[00:51] <thiago> 4.3.15 enough?

[00:51] <Mikachu> okay, a bunch of people do :)

[00:51] <Mikachu> thiago: yeah

[00:51] <thiago> ok

[00:52] <thiago> it requires updating glibc, so I can't do it now. Will soon.

[00:52] <Mikachu> err

[00:52] *** thebignoise left
[00:52] <Mikachu> that must be some packaging artifact :)

[00:53] *** macRover left
[00:53] *** LeMike joined
[00:54] *** gitinfo sets mode: +v LeMike

[00:54] *** yshh joined
[00:54] *** drev1 left
[00:55] *** carpii joined
[00:55] <LeMike> What happens if the bare-repo of a submodule get's deleted?

[00:55] <Mikachu> cxreg: i get that comment sometimes, "you're everywhere", i can only reply "so are you" ;)

[00:55] <cxreg> Mikachu: i have over 100 irssi windows, so yeah..

[00:55] <Mikachu> that's 10x me

[00:56] <thiago> LeMike: nothing

[00:56] *** drev1 joined
[00:56] <carpii> I'm writing a pre-commit hook to make sure any function calls are utf-safe. But I've noticed my script is looking at the working copy, rather than the file thats been staged. How can i get at a copy of the file with only the staged changes, form bash?

[00:56] <LeMike> thiago : nothin means "my copy stays alive"?

[00:56] <Mikachu> git show :path/to/file | foo

[00:56] <thiago> LeMike: if you delete file A, file B stays

[00:56] <carpii> lovely, thanks :)

[00:56] *** legnaleurc left
[00:57] <Mikachu> empty before colon means index

[00:57] <Mikachu> that is in main git right? i had a patch for it locally a while at least.. :)

[00:57] <LeMike> thiago : thanks. and the only other way around (making subdir a bare-repo) is to init bare, copy the folder and submodule it again?

[00:58] *** dogarrhea2 joined
[00:58] *** legnaleurc joined
[00:58] <thiago> LeMike: way around what?

[00:59] *** aidenhong joined
[00:59] *** canton8 joined
[00:59] <LeMike> thiago : transform a subdirectory into a submodule.

[00:59] <thiago> copy the files to a new dir, git init, git commit

[01:00] <thiago> remove the tree from the original dir, commit, add the submodule link, commit

[01:00] <LeMike> yee. ok, thanks!

[01:00] <carpii> hm, i can pipe git show :file into a PHP syntax checker, but then the syntax checker has no idea what filename it is. Any thoughts on how to work around this?

[01:00] * LeMike fell in love with git

[01:00] <LeMike> makes me jizz every day

[01:01] <thiago> carpii: how can you tell the utility what the file name is?

[01:01] <carpii> i can't :/

[01:01] <thiago> carpii: there we go

[01:01] <thiago> carpii: can't be solved

[01:01] *** canton8 left
[01:01] <Mikachu> heh

[01:01] <Mikachu> you can write it to some temp dir first?

[01:01] <carpii> yeah, thats what I'm thinking

[01:01] <Mikachu> ie, foo=$(mktemp -d); git show > $foo/myfile; ...

[01:01] *** Bmac left
[01:02] *** legnaleurc left
[01:02] <carpii> I'm not sure if it would need to bring in dependencies from the working copy though, in order to syntax check it

[01:02] <carpii> actually, I've a better idea. Ill suppress the output from the syntax checker and have bash pick up the error code :)

[01:02] <carpii> the return code

[01:02] <cbreak> why does the tool need to know the filename?

[01:02] *** ISF joined
[01:02] <carpii> it doesn't really, its just i was letting it provide the output because it shows line numbers and stuff

[01:02] <cbreak> just capture the output and use it yourself

[01:03] <cbreak> augment it with the file name.

[01:03] <carpii> hm yeah, nice idea

[01:03] *** legnaleurc joined
[01:03] *** Chib left
[01:03] <carpii> ok thanks guys

[01:05] *** lonewulf` joined
[01:09] *** schnatta joined
[01:13] *** Zyrkon left
[01:13] *** legnaleurc left
[01:14] *** legnaleurc joined
[01:15] *** Zyrkon joined
[01:16] *** LeMike left
[01:17] *** imaginativeone joined
[01:17] *** forsto joined
[01:23] *** ecocode joined
[01:23] *** ecocode left
[01:25] *** legnaleurc_ joined
[01:25] *** herdingcat joined
[01:26] *** legnaleurc left
[01:26] *** Godslastering joined
[01:26] *** drev1 left
[01:27] *** hyperair joined
[01:27] *** kennethreitz joined
[01:29] *** bandroidx joined
[01:31] *** metcalfc joined
[01:32] *** bandroidx left
[01:33] *** bandroidx joined
[01:33] *** legnaleurc_ left
[01:35] *** legnaleurc joined
[01:35] *** EricInBNE left
[01:36] *** kenperkins joined
[01:37] *** lonewulf` left
[01:37] *** amigojapan joined
[01:38] *** niloc132_ joined
[01:38] *** kennethreitz left
[01:39] *** kerrick joined
[01:39] *** innoying_ joined
[01:40] *** legnaleurc left
[01:43] *** fermianyon left
[01:43] *** Bombe joined
[01:43] *** imaginativeone left
[01:43] *** niloc132_ left
[01:46] *** legnaleurc joined
[01:46] *** drev1 joined
[01:49] *** dogarrhea2 left
[01:49] *** legnaleurc left
[01:51] *** EricInBNE joined
[01:53] *** imaginativeone joined
[01:55] *** monokrome joined
[01:57] *** bandroidx left
[01:58] *** bandroidx joined
[02:03] *** bandroidx left
[02:04] *** kmurph79 left
[02:04] *** linusoleander left
[02:05] *** bandroidx joined
[02:05] *** drev1 left
[02:06] *** jaequery joined
[02:07] *** wbednarski joined
[02:08] *** kmurph79 joined
[02:09] *** macRover joined
[02:10] *** Chib joined
[02:10] *** metcalfc left
[02:11] *** Akufen joined
[02:23] *** sbell joined
[02:24] *** ChaoWang joined
[02:27] *** bandroidx left
[02:29] *** orange33 joined
[02:30] <orange33> Given identical permissions, any idea why I can execute git but git-shell returns "fatal: Interactive git shell is not enabled. hint: ~/git-shell-commands should exist and have read and execute access"?

[02:31] <orange33> It works on my local system, also with same permissions, and I don't appear to have ~/git-shell-commands.

[02:31] <orange33> (Googled but didn't really find an answer, just similar questions)

[02:31] *** mxweas joined
[02:33] *** zdk joined
[02:33] *** sreich_ left
[02:35] *** kennethreitz joined
[02:36] *** marcuy left
[02:38] <orange33> I don't understand the git-shell-commands requirement. Are people creating this just to use git-shell? git lives in the same directory with the same permissions and works.

[02:39] *** Yuuhi`` joined
[02:40] <orange33> On my local system, with an older version of Git, I get the expected "fatal: What do you think I am? A shell?."

[02:41] *** bandroidx joined
[02:41] *** serj joined
[02:41] <sitaram> orange33: what command did you run when you got that?  should not happen (AFAIK) for normal git clone/fetch/push

[02:43] *** thomas_b joined
[02:43] <orange33> sitaram: The "fatal" message? That's the expected output for git-shell, as I'm trying to secure my git user account for ssh.

[02:43] <orange33> (try running 'git-shell')

[02:44] <orange33> http://progit.org/book/ch4-4.html

[02:44] *** dorisabayon joined
[02:44] *** nsussman joined
[02:46] <sitaram> I get the message also

[02:46] <orange33> Yep, working as expected (the link explains).

[02:47] *** neurodrone joined
[02:47] *** Fandekasp left
[02:47] *** orange33 left
[02:49] *** shiba_yu36 joined
[02:52] *** DofLeFou joined
[02:52] *** ramusara joined
[02:53] *** yeryry joined
[02:55] *** diverdude joined
[02:55] <diverdude> is bitbucket as good as github?

[02:55] <EugeneKay> "meh"

[02:56] <diverdude> ?

[02:56] <EugeneKay> I somehow doubt their "free" model is sustainable.

[02:56] *** kermit joined
[02:56] <diverdude> EugeneKay: why?

[02:56] <EugeneKay>  Because that's how economics wor

[02:57] *** Vampire0_ joined
[02:58] *** rmillerx joined
[02:58] <diverdude> EugeneKay: do you even know their pricing model?

[02:58] <diverdude> EugeneKay: its not free

[02:59] <EugeneKay> I do. ANd it includes this big banner on the front page with the word "free" emblazoned upon it.

[02:59] <diverdude> EugeneKay: its not free

[02:59] *** testbot2 joined
[02:59] <EugeneKay> For the higher-tier plans, sure. But most customers won't be using that.

[02:59] <diverdude> EugeneKay: only for up to 5 users

[03:00] <EugeneKay> Historically speaking, service providers providing free services don't last very long. Ad-supported(AOL) or selling you as the service(eg, Facebook) is a different story, but I use neither service, and find both models annoying.

[03:00] *** xiangfu joined
[03:01] *** drev1 joined
[03:01] <EugeneKay> Github's business model is also "free" oriented, but with limits and direct incentive to pay them. And it's worked, apparently. They're also a lot bigger name.

[03:01] <diverdude> is it diffivult to setup a git server

[03:01] <EugeneKay> !gitolite

[03:01] <gitinfo> gitolite allows you to host any number of repositories with extensive access control options for any number of users, using just one system account: http://github.com/sitaramc/gitolite

[03:01] <diverdude> difficult

[03:01] *** fl0w joined
[03:02] <offby1> if you have access to a server, it's pretty easy

[03:02] <offby1> you don't absolutely need to use gitolite, but chances are you'll find it handy

[03:02] <EugeneKay> 4 shell commands if you're on CentOS/SL6

[03:02] <EugeneKay> (5 if you count adding EPEL, but you ought to have that enabled anyway)

[03:03] <diverdude> i have my own ubuntu box unning

[03:03] *** lonewulf` joined
[03:03] <EugeneKay> apt-get install gitolite

[03:04] *** boombatower joined
[03:06] <diverdude> EugeneKay: is there some webinterface also similar to the github one?

[03:06] <EugeneKay> Nope.

[03:07] <EugeneKay> For that you'd want something like Gitorious, which I have never been able to install. Take that factoid with a grain of salt, though - I hate Ruby.

[03:07] *** mandric joined
[03:08] <diverdude> so install both gitorious and gitolite?

[03:09] <EugeneKay> Gitorious has it's own git stack.

[03:09] <EugeneKay> It lacks some(well, all) of the finer-grained ACL functions that gitolite has.

[03:10] <EugeneKay> I can't recommend any plug+play web interfaces because I don't know any. Everybody just seems to pay Github or use Trac for issues, etc.

[03:10] <diverdude> i see..so its not really very good?

[03:10] <diverdude> yeah i have a 7USD account now...but i need more than 1 private repo

[03:10] *** rmillerx left
[03:10] <diverdude> and 12USD gets more expensive and only have 5 repos

[03:11] *** bandroidx left
[03:11] *** testbot2 left
[03:12] *** eletuchy left
[03:13] *** niloc132_ joined
[03:14] *** jdav joined
[03:15] *** niloc132_ left
[03:16] *** schnatta left
[03:17] *** bigkm joined
[03:18] <diverdude> EugeneKay: heh...http://cjohansen.no/en/ruby/setting_up_gitorious_on_your_own_server seems to be somewhat more than 5 lines ;)

[03:19] <EugeneKay> gitorious isn't gitolite.

[03:19] <EugeneKay> Like I said, I've never gotten the former to work.

[03:19] *** bandroidx joined
[03:20] *** kennethreitz left
[03:20] *** herdingcat left
[03:20] *** eletuchy joined
[03:20] *** niloc132_ joined
[03:21] <diverdude> ACL is for group management?

[03:24] *** dys`` joined
[03:25] *** testbot2 joined
[03:25] *** testbot2 left
[03:25] *** niloc132_ left
[03:26] *** testbot2 joined
[03:28] *** hyperair left
[03:28] *** drev1 left
[03:29] <EugeneKay> ACLs are an idea, Controlling Access via Lists.

[03:32] *** hyperair joined
[03:32] *** hyperair left
[03:32] *** hyperair joined
[03:32] *** traviscj joined
[03:33] *** sattu94 left
[03:35] *** satyanash joined
[03:36] *** cgd joined
[03:37] <Sir_Rai> diverdude: gitlab is nice for a private workgroup

[03:37] *** lonewulftp joined
[03:39] *** jeffery joined
[03:40] <diverdude> Sir_Rai: gitlab is like gitbucket?

[03:40] <Sir_Rai> uhm no

[03:40] *** eletuchy left
[03:40] <Sir_Rai> You can host it in your server

[03:40] <diverdude> Sir_Rai: ohh nice

[03:41] <diverdude> Sir_Rai: so basically it can do same things as github but hosted on private server?

[03:41] *** eletuchy joined
[03:42] <Sir_Rai> well, gitlab is not so advanced as github, maybe with time, but im using this with a small team for some projects and we are nice with it

[03:42] <Sir_Rai> http://demo.gitlabhq.com/users/sign_in

[03:42] <Sir_Rai> [email@hidden.address]
[03:42] <diverdude> Sir_Rai: most important thing is that its possible to browse the code via http

[03:43] *** eletuchy left
[03:43] <Sir_Rai> of course, and comment commits

[03:43] *** aidenhong left
[03:43] <diverdude> as well as ofc. being a standard git server

[03:43] <Sir_Rai> manage groups

[03:43] <Sir_Rai> projects, etc

[03:44] <Sir_Rai> i was about to install gitorious, but i discover this and we dont need anymore

[03:45] <diverdude> Sir_Rai: ahhh it looks so good

[03:45] <EugeneKay> Ah, gitlab. I forgot about that one.

[03:45] <EugeneKay> IIRC it even uses gitoltie as a backend

[03:46] <Sir_Rai> Yes

[03:46] <diverdude> Sir_Rai: and it seems to be quite easy to setup as well :)

[03:46] <Sir_Rai> you can choose if use gitolite or gitosis i think

[03:46] <Sir_Rai> im running it with gitolite

[03:46] *** hyperair left
[03:46] <Sir_Rai> passenger support and nginx

[03:46] <Sir_Rai> yeah, sure it is

[03:47] *** aidenhong joined
[03:47] *** lonewulftp left
[03:47] *** hyperair joined
[03:47] <EugeneKay> No (good) reason to use gitosis :-p

[03:47] <Sir_Rai> I never tested gitosis

[03:50] *** watsonian joined
[03:50] *** orafu joined
[03:52] *** carpii left
[03:52] <diverdude> im just using this for personal use...so i think gitlab is more than enough :)

[03:52] <diverdude> it looks really good

[03:52] *** Araxia joined
[03:53] *** disappe__ joined
[03:54] *** ccushing joined
[03:55] *** johnkpaul left
[03:56] *** plusk joined
[03:56] *** boombatower left
[03:58] *** [M]ax joined
[03:58] *** kermit1 joined
[03:59] *** kermit left
[04:00] <chrisf> !gitosis

[04:00] <gitinfo> gitosis is no longer maintained and supported by the author; we usually recommend gitolite instead which has much better documentation and more features: http://github.com/sitaramc/gitolite

[04:00] *** tshauck left
[04:00] *** shiba_yu36 left
[04:02] *** plusk left
[04:04] *** da5id joined
[04:08] *** aidenhong left
[04:10] *** lonewulf` left
[04:12] *** beautifulmind joined
[04:12] *** kanru joined
[04:13] *** hyperair left
[04:13] *** aazgard_ joined
[04:15] *** johnkpaul joined
[04:15] *** blur joined
[04:17] *** serj left
[04:17] *** bronson joined
[04:19] *** fl0w left
[04:19] *** serj joined
[04:19] *** disappe__ left
[04:20] *** johnkpaul left
[04:20] *** dr0id joined
[04:21] *** disappea_ joined
[04:22] *** JordiGH joined
[04:22] *** dorkmafia joined
[04:23] *** disappe__ joined
[04:23] <JordiGH> I would like to have two git clones each with a working directory, because make(1) gets confused and does unnecessary rebuilds if I touch the working directory too much. However, these two clones "can't" push to each other because bare repos, blah blah blah. What should I do instead? Create a third local bare repo and have of them push and pull to it?

[04:25] *** disappea_ left
[04:26] *** aazgard_ left
[04:26] <bronson> JordiGH: you don't want an upstream repo?

[04:26] <Mikachu> JordiGH: git new-workdir

[04:27] <Mikachu> it should be in your contrib dir if it's not already installed

[04:27] <JordiGH> bronson: You mean network access? No, I don't want that.

[04:27] *** blur left
[04:27] <bronson> ok, then new-workdir is the answer.

[04:28] *** kmurph79 left
[04:28] <JordiGH> Okay, a new feature to hate, thanks, will read it and report on why I hate it.

[04:29] *** hyperair joined
[04:30] *** srcerer joined
[04:31] *** kmurph79 joined
[04:31] *** bandroidx left
[04:31] <bronson> JordiGH: Great!  That's exactly what the world needs: more whining.

[04:31] <JordiGH> The world needs less git.

[04:32] <JordiGH> And fewer gits too.

[04:32] <bronson> JordiGH: so use something else.  Or quit your job.

[04:33] <JordiGH> Or stop collaborating with all the git users in the world. It's impossible without abandoning computers and taking up basket weaving. git is unavoidable.

[04:33] *** mandric left
[04:33] <JordiGH> Hm, ok, git new-workdir sounds good in theory.

[04:33] *** NiklasFiekas joined
[04:33] <JordiGH> Let's see how it fucks up in practice.

[04:34] *** bandroidx joined
[04:34] *** wbednarski left
[04:35] <JordiGH> Alright, first challenge... how do you install it and enable it?

[04:35] <shuffle2> use the force

[04:36] *** lonewulftp joined
[04:37] <JordiGH> I suppose I need to clone kernel.org's git repo?

[04:41] <bronson> JordiGH: probably not.  Look in /usr/share/doc/git/contrib/workdir/git-new-workdir if you're on a Unixy machine.

[04:41] *** brainbox1100 joined
[04:41] <JordiGH> Right, I see something there. I just ran locate(1) before you said that.

[04:41] *** dreiss joined
[04:42] <JordiGH> Hokay so... just run this shell script?

[04:42] *** satyanash left
[04:42] <bronson> JordiGH: you put it on your path, then git runs it

[04:43] *** aidenhong joined
[04:43] * JordiGH uses the source.

[04:43] <JordiGH> The force can wait.

[04:43] <JordiGH> This has big warning signs all over the place, might as well heed hem.

[04:43] <JordiGH> them

[04:44] <JordiGH> Interesting, so it seems it just symlinks most of the .git directory.

[04:45] *** aidenhong left
[04:45] *** aidenhong joined
[04:46] *** nsussman left
[04:47] *** amigojapan left
[04:47] <Mikachu> just don't check out the same branch in both workdirs, and don't delete the 'original' repo obviously

[04:47] *** _inc joined
[04:47] <JordiGH> Ah, the warts start to show up.

[04:47] *** secoif joined
[04:48] *** secoif left
[04:48] <JordiGH> Sigh...

[04:48] <JordiGH> Yeah, ok, I see why this is gonna be trouble.

[04:48] <Mikachu> too bad it only does exactly what you wanted :/

[04:48] <JordiGH> No, it doesn't.

[04:48] *** aidenhong_ joined
[04:48] <Mikachu> sorry, exactly what you said you wanted

[04:48] *** secoif joined
[04:48] *** secoif left
[04:48] <JordiGH> Exactly what I wanted would be for git cloning to work properly, but git is too much of a stupid content tracker to do clones correctly.

[04:49] *** secoif joined
[04:49] *** secoif left
[04:49] <JordiGH> It's a good thing I read the source here, so I could understand that it's just symlinking stuff.

[04:49] *** secoif joined
[04:49] *** secoif left
[04:49] *** aidenhong left
[04:49] *** aidenhong_ is now known as aidenhong

[04:49] <JordiGH> And this isn't going to actually solve my problem... sigh...

[04:50] <JordiGH> I have a git subrepo.

[04:50] *** secoif joined
[04:50] *** secoif left
[04:50] <JordiGH> Two hg clones, each has the same git subrepo. I wish the two subrepos could push and pull from each other.

[04:50] *** secoif joined
[04:50] *** herdingcat joined
[04:50] *** secoif left
[04:51] *** kenperkins left
[04:51] *** secoif joined
[04:51] *** secoif left
[04:51] <EugeneKay> They can pull easily. Pushing is more complex, but doable

[04:51] *** cgd left
[04:52] <JordiGH> Pushing should not be more complex, stupid git. >:|

[04:52] *** secoif joined
[04:52] *** secoif left
[04:52] <EugeneKay> Updating a checked-out repo is complex.

[04:52] <Mikachu> as long as you don't want the checked out files to be updated, it's esay

[04:52] <JordiGH> Updating a checked-out repo should not be complex, you stupid git. >:|

[04:52] <EugeneKay> Disalling doing it remotely is a sane default.

[04:52] *** secoif joined
[04:52] *** secoif left
[04:53] <Mikachu> as long as you don't care about overwriting uncommitted changes, updating the checked-out repo is easy

[04:53] *** imaginativeone left
[04:53] *** secoif joined
[04:53] *** secoif left
[04:53] *** secoif joined
[04:55] <JordiGH> Thanks for helping, guys. It's not your fault git sucks. I have to go to sleep. I'll have to figure out another way to work around git's idiocy.

[04:55] <Sir_Rai> lul

[04:55] <EugeneKay> !fortune

[04:55] <gitinfo> I'm sorry that you are stupid, ugly, and not using git.  Still, some misguided souls think that something other than git might be better for them.  Who knows, it might even be true for you.  In any case, we don't care.  Good-bye.

[04:55] <sitaram> aah

[04:55] *** JordiGH left
[04:56] * sitaram looks at the channel log website to see which of his permanently '/ignore' people is it this time, since he didnt see anything negative on irssi

[04:56] <EugeneKay> JordiGH

[04:56] <sitaram> oh that guy.  "I fucking hate git" and starts with complaints, IIRC

[04:56] <Sir_Rai> poor man

[04:56] <sitaram> have fun

[04:57] <EugeneKay> Is he a regular complainer?

[04:57] <Mikachu> why not just ban him then?

[04:57] *** swombat joined
[04:57] <EugeneKay> Something something rude but not outright offensive

[04:57] <sitaram> Mikachu, EugeneKay: I have him on my permanent list but people can change... I'm just too old to bother waiting but I don't speak for everyone

[04:58] <sitaram> I see from the channel log his attitude is still the same (no doubt what prompted the ! fortune from EugeneKay)

[04:58] *** satyanash joined
[04:58] *** kenperkins joined
[04:59] *** gavin_huang joined
[04:59] <EugeneKay> !refund

[04:59] <gitinfo> If you are not satisfied with git for whatever reason, you are entitled to a full refund of the purchase price, and are invited to use another VCS. Elsewhere.

[04:59] <EugeneKay> A bit "kinder" than fortune. :-p

[05:00] *** zivester joined
[05:00] <sitaram> kindness is overrated

[05:00] <EugeneKay> I have my moments.

[05:01] *** testbot2 left
[05:02] *** dorkmafia left
[05:03] <sitaram> EugeneKay: re your bash script (you posted a link some hours ago).  One thing I do in mine, to get a summary status on the PS1, is this: git -c color.ui=always status -s | sed -e 's/\(^.[^ ]*\) .*/\1/' | sort |uniq -c | sed -e 's/^ *//'

[05:03] *** rphillips joined
[05:03] <sitaram> EugeneKay: it even keeps the colors that git status gives you

[05:04] *** bandroidx left
[05:04] *** Prasad joined
[05:05] *** nsussman joined
[05:05] <sitaram> hmm; it seems egrep -o '^[^ ]*' is just as good as that sed, but anyway

[05:05] <EugeneKay> That doesn't count subdirs correctly like mine does.

[05:06] <EugeneKay> I have a dir with 595 untracked files, your script comes back with 145.

[05:06] <sitaram> add -uall

[05:06] <EugeneKay> And it isn't path-aware, either. When I cd into a subdir, it still counts the whole repo, not just the dir I'm in.

[05:06] *** bandroidx joined
[05:07] <sitaram> oh well nvm then (I want PS1 to be for the whole repo anyway but I didn't realise you don't want that)

[05:07] *** rphillips left
[05:07] <EugeneKay> It wasn't by design, but I like the behaviour.

[05:07] <EugeneKay> I added the show-path-relative-to-repo-root feature as a result of it.

[05:07] <EugeneKay> Very nifty.

[05:08] *** hyperair left
[05:08] *** mxweas left
[05:08] *** rphillips joined
[05:09] <EugeneKay> What the hell. Did github recently decide to screw up the CSS on READMEs?

[05:09] *** rphillips left
[05:10] *** kjg joined
[05:10] *** rphillips joined
[05:11] <EugeneKay> The text is suddenly..... huge. Annoyingly so.

[05:13] *** kmurph79 left
[05:13] <sitaram> EugeneKay: seems you can add "-- ." to the git status command to get this-path-only counts

[05:14] <sitaram> just FYI.  I only mention this because parsing porcelain git status can be painful; much easier to parse 'git status -s' or even --porcelain if you want to manage the colors yourself

[05:14] * sitaram is lazy

[05:14] <sitaram> that one line replaced about 20-30 IIRC (including making choices for colors, etc!)

[05:14] <EugeneKay> Eh. It works for me.

[05:14] <EugeneKay> And I put too much work into it :-p

[05:15] *** nsussman left
[05:16] <EugeneKay> git diff --name-status hasn't been mucked with much, so I should be OK

[05:17] *** innoying_ left
[05:18] *** matsebc left
[05:18] *** caseymcg left
[05:19] <sitaram> oh I thought you were parsing 'git status'; sorry I may have misunderstood then

[05:19] <sitaram> (but how does git diff give you untracked files?)

[05:20] *** mxweas joined
[05:20] <EugeneKay> It doesn't. untracked=$(git ls-files --other --exclude-standard | wc -l )

[05:21] <EugeneKay> I use diff for the index(--cached) and work-tree counters.

[05:21] *** bindaasomatic joined
[05:22] *** matsebc joined
[05:22] *** guampa left
[05:25] *** kennethreitz joined
[05:25] *** neurodrone left
[05:25] *** aidenhong left
[05:25] *** aidenhong joined
[05:26] *** Dave^| joined
[05:27] *** hyperair joined
[05:27] *** macRover left
[05:28] *** subbyyy left
[05:31] <sitaram> aah ok

[05:33] *** barcoder joined
[05:33] *** barcoder left
[05:34] *** Goplat left
[05:34] *** kjg left
[05:43] *** maletor joined
[05:43] *** maletor left
[05:44] *** Fandekasp joined
[05:47] *** dorisabayon left
[05:47] *** freimatz joined
[05:56] *** harshpb joined
[05:56] *** unreal left
[05:56] *** bartman joined
[05:57] *** ranjan joined
[05:58] <ranjan> hi all, how to setup a central git server with users from an ldap server?

[06:00] *** LongBeach joined
[06:00] <bob2> well, git has no concept of users

[06:00] <bob2> so that part is easy

[06:02] *** dys`` is now known as dys

[06:02] *** harshpb left
[06:03] *** sreich joined
[06:04] *** savid left
[06:05] *** dr0id left
[06:06] *** stodan joined
[06:07] *** edude03_ joined
[06:08] *** sassyn joined
[06:09] *** ThomasLocke joined
[06:11] *** goutham joined
[06:12] *** pidus joined
[06:14] *** axl_ joined
[06:14] *** axl_ left
[06:15] *** maleknet joined
[06:18] *** harshpb joined
[06:19] <sitaram> ranjan: you can have apache authenticate users by asking LDAP, then pass the authenticated user info on to gitolite.  I know people have done this, but I personally have not

[06:20] <sitaram> http://sitaramc.github.com/gitolite/ldap.html (storing usergroup information outside gitolite (like in LDAP))

[06:20] <sitaram> but you'd have to install gitolite, in 'smart http' mode

[06:21] *** marthinal joined
[06:21] *** watsonian left
[06:23] *** dzonder joined
[06:26] <jlewis> is there an inverse for git commit -p?

[06:26] *** khmarbaise joined
[06:27] *** v0n joined
[06:27] <bob2> do you mean add -p?

[06:27] <jlewis> no, i mean commit -p

[06:27] <jlewis> add -p and reset -p are inverses, sort of

[06:27] <jlewis> i was wondering if there's an analogue for the inverse of commit -p

[06:28] *** AmirBehzad joined
[06:28] <bob2> when's that added? I have no commit -p in 1.7.5.4

[06:28] <jlewis> not sure, i have 1.7.8.2 tho

[06:28] *** hyperair left
[06:30] *** khmarbaise left
[06:30] *** bandroidx left
[06:32] <shachaf> jlewis: Apparently git-commit -p is like git-add -p but for committing?

[06:32] <shachaf> My git also doesn't have it, but that's what http://schacon.github.com/git/git-commit.html says.

[06:33] <shachaf> What do you want the inverse to do?

[06:33] <jlewis> selectively move hunks from the commit to the index

[06:33] <jlewis> also, hi shachaf :)

[06:33] <jlewis> and, i think reset -p actually serves the purpose, now that i think about it

[06:33] *** koo4 joined
[06:35] *** TrineLocke joined
[06:35] <shachaf> And getting rid of the commit while it's at it, or adding an inverse commit, or just changing the index, or what?

[06:35] <shachaf> Also, hi jlewis. :-)

[06:35] <jlewis> editing the commit to remove the hunk; editing the index to add the hunk

[06:35] <shachaf> Oh, editing the commit.

[06:36] <shachaf> That seems like a vaguely weird operation, but I suppose it makes sense.

[06:36] <jlewis> reset -p head~1 works

[06:36] *** bandroidx joined
[06:36] *** the_cybersphinx joined
[06:36] <shachaf> Yep, seems like that would do what you want.

[06:36] *** Nibato` joined
[06:37] <shachaf> (Not that my version of git has reset -p either... I should probably upgrade.)

[06:37] <jlewis> -p is the bomb diggety!!!

[06:37] <shachaf> Almost like the good old darcs days.

[06:37] *** hyperair joined
[06:37] *** dnyy_ joined
[06:37] <jlewis> yep :)

[06:37] *** Heisenmink_ joined
[06:38] *** dr0id joined
[06:40] *** Sonder joined
[06:41] *** crash\\ joined
[06:41] *** mirage33- joined
[06:41] *** john2 joined
[06:42] *** clone1018_ joined
[06:42] *** mishok13 joined
[06:42] *** airborn joined
[06:43] *** caseymcg joined
[06:43] *** matthiasgorgens1 joined
[06:44] *** jwmann1 joined
[06:46] *** shedammit_ joined
[06:46] *** jmcantrell joined
[06:46] *** cybersphinx left
[06:46] *** jmcantrell left
[06:46] *** marthinal left
[06:46] *** harshpb left
[06:46] *** goutham left
[06:46] *** stodan left
[06:46] *** zivester left
[06:46] *** satyanash left
[06:46] *** swombat left
[06:46] *** serj left
[06:46] *** beautifulmind left
[06:46] *** orafu left
[06:46] *** traviscj left
[06:46] *** yshh left
[06:46] *** Morphous_ left
[06:46] *** cheeseboy left
[06:46] *** bkero left
[06:46] *** NickASloan left
[06:46] *** johntramp left
[06:46] *** _rane left
[06:46] *** sven^ left
[06:46] *** Deck` left
[06:46] *** merkosh left
[06:46] *** teuf left
[06:46] *** divVerent left
[06:46] *** markatto left
[06:46] *** marthinal_ joined
[06:46] *** mpenz joined
[06:46] *** Kicer86 joined
[06:46] *** Deck` joined
[06:46] *** serj joined
[06:47] *** alta189 joined
[06:47] *** orafu joined
[06:47] *** dyek_ joined
[06:50] *** telemachus joined
[06:50] *** tehbaut joined
[06:50] *** fermianyon joined
[06:50] *** RobertLaptop joined
[06:50] *** signal-9 joined
[06:50] *** Adys_ joined
[06:50] *** sven^_ joined
[06:50] *** cheeseboy joined
[06:50] *** phryk joined
[06:50] *** jmcantrell joined
[06:50] *** harshpb joined
[06:50] *** goutham joined
[06:50] *** stodan joined
[06:50] *** zivester joined
[06:50] *** satyanash joined
[06:50] *** swombat joined
[06:50] *** beautifulmind joined
[06:50] *** traviscj joined
[06:50] *** yshh joined
[06:50] *** Morphous_ joined
[06:50] *** joeytwiddle joined
[06:50] *** mdel joined
[06:50] *** kloeri joined
[06:50] *** boblet joined
[06:50] *** Vile joined
[06:50] *** flyz joined
[06:50] *** eighty4 joined
[06:50] *** setmeaway joined
[06:50] *** atdiehm_ joined
[06:50] *** selevt joined
[06:50] *** Gitzilla joined
[06:50] *** blueyed joined
[06:50] *** tchan joined
[06:50] *** mythmon joined
[06:50] *** ajt joined
[06:50] *** cyphase joined
[06:50] *** peterz joined
[06:50] *** daethorian joined
[06:50] *** paulweb515_ joined
[06:50] *** kmc joined
[06:50] *** ProperNoun joined
[06:50] *** rns joined
[06:50] *** jailbox joined
[06:50] *** jakob joined
[06:50] *** maknz joined
[06:50] *** JonasF joined
[06:50] *** Swathe joined
[06:50] *** wolfe.freenode.net sets mode: +vv peterz paulweb515_

[06:50] *** mattp_ joined
[06:50] *** _root_ joined
[06:50] *** vmiklos joined
[06:50] *** Zenopus joined
[06:50] *** jcarouth joined
[06:50] *** An_Ony_Moose joined
[06:50] *** esc joined
[06:50] *** FabTG joined
[06:50] *** changerOfSea joined
[06:50] *** stfn joined
[06:50] *** leo joined
[06:50] *** NickASloan joined
[06:50] *** bkero joined
[06:50] *** _rane joined
[06:50] *** merkosh joined
[06:50] *** teuf joined
[06:50] *** markatto joined
[06:50] *** jmcantrell left
[06:50] *** jmcantrell joined
[06:50] *** telemachus left
[06:50] *** telemachus joined
[06:50] *** tehbaut left
[06:50] *** tehbaut joined
[06:50] *** Adys_ is now known as Guest51449

[06:51] *** dfr|mac left
[06:52] *** harshpb left
[06:52] *** dorkmafia joined
[06:53] *** BonQuisha left
[06:54] *** BonQuisha joined
[06:55] *** gerard0 joined
[06:57] *** jeffery left
[06:57] *** Heisenmink_ left
[06:57] *** sreich left
[06:58] *** bburhans joined
[06:59] *** sreich joined
[07:00] *** divVerent joined
[07:00] *** mxweas left
[07:03] *** SeanTAllen joined
[07:04] *** vdv joined
[07:04] *** kermit1 left
[07:05] *** bandroidx left
[07:06] *** j416 joined
[07:08] *** BonQuisha left
[07:09] *** ChaoWang left
[07:11] *** sbell left
[07:12] *** Xizor joined
[07:13] *** kermit joined
[07:13] *** dorkmafia left
[07:14] *** CEnnis91 joined
[07:14] *** CEnnis91 left
[07:14] *** CEnnis91 joined
[07:14] *** CEnnis91 left
[07:14] *** CEnnis91 joined
[07:14] *** AAA_awright joined
[07:15] *** v0n left
[07:15] *** bigkm left
[07:15] *** ChaoWang joined
[07:15] *** toabctl joined
[07:19] *** teweWORK joined
[07:20] *** j0ran joined
[07:22] *** marthinal_ is now known as marthinal

[07:23] *** flijten joined
[07:23] *** dzonder left
[07:25] *** lausi joined
[07:26] *** mishok13 left
[07:26] *** disappe__ left
[07:26] *** idoru joined
[07:26] *** idoru left
[07:27] *** disappea_ joined
[07:29] *** bandroidx joined
[07:31] *** Hallin joined
[07:31] *** Hallin left
[07:31] *** j416 left
[07:32] *** madsy joined
[07:32] *** madsy left
[07:32] *** madsy joined
[07:33] *** edude03_ left
[07:33] *** papegaaij joined
[07:33] *** sreich left
[07:34] *** Vortex34 joined
[07:35] *** toabctl left
[07:35] *** monk12 joined
[07:35] *** fr0stbyte joined
[07:35] *** sreich joined
[07:36] *** PigeonFriend joined
[07:37] <monk12> hello all, i had a quick question based on example i was reading... if you modify a file and add it to the 'staged' area, and then run the unstage commant (git reset HEAD -- theFile.txt), then i see it moves the modified file back to the 'unstaged changes' local repository. but what if the local repos file is also changed... when you unstage a file, will it overwrite the local file completely [even if its modified]?

[07:38] <_ikke_> afaik, not

[07:38] *** john2 left
[07:39] *** Spockz joined
[07:40] *** Xizor left
[07:40] <_ikke_> monk12: git reset by default only updates the index, not the working tree

[07:41] <_ikke_> Only if you provide --hard, (or --keep/--merge) will it change the working tree

[07:42] <sitaram> yup; it just takes it out of the index.  It's not actually writing anything back to the work tree (AFAIK only checkout does that)

[07:42] <sitaram> oh

[07:42] <sitaram> yeah that too

[07:43] *** NiklasFiekas left
[07:43] *** robotmay joined
[07:44] *** Spockz` joined
[07:45] <monk12> wrapping my head around that. Let me reread what you guys wrote for a sec :)

[07:45] <monk12> thanks.

[07:45] *** beautifulmind left
[07:46] *** giallu joined
[07:48] <_ikke_> monk12: read this: http://progit.org/2011/07/11/reset.html

[07:48] <monk12> Maybe for me to understand, theoretically what happens in this case... so lets say its a new file. you added it with 'git add'. Now you modifed it... so the status is 'AM' (working directory is modified (guess git  knows as it compares checksum of what is in both), staging area to commit just knows its a new added file)... what happens when you 'reset HEAD'?

[07:48] *** bandroidx left
[07:48] <monk12> k one sec

[07:49] <monk12> cool I

[07:49] <monk12> I'll take a read. avoid my question

[07:49] <monk12> thanks _ikke_

[07:49] <_ikke_> I find it the best resource explaining git reset

[07:50] *** mishok13 joined
[07:50] <_ikke_> !reset

[07:50] <gitinfo> A good resource explaining git-reset is http://progit.org/2011/07/11/reset.html

[07:50] <_ikke_> :)

[07:51] <monk12> cool thanks _ikke_

[07:51] *** queequeg1 left
[07:52] *** psakrii joined
[07:54] *** airborn left
[07:55] *** bandroidx joined
[07:57] *** edude03 joined
[07:57] *** edude03 left
[07:58] *** batlock666 joined
[07:59] *** stepnem joined
[07:59] *** dorkmafia joined
[08:01] *** ijuma joined
[08:01] *** amgarching joined
[08:05] *** sykop5am joined
[08:05] *** ph^ joined
[08:07] *** cenuij joined
[08:07] *** cenuij left
[08:07] *** cenuij joined
[08:07] *** amgarching left
[08:08] *** Shusshu joined
[08:08] *** Sonder left
[08:09] *** umren joined
[08:11] *** Sitethief joined
[08:13] *** solofight joined
[08:14] <solofight> Hello sitaram - can you spare few minutes for me ?

[08:15] <_ikke_> solofight: Just ask your question

[08:15] <solofight> _ikke_: ive asked earlier a use case for Git. Apart from using it for source code

[08:15] <solofight> sitaram gave me this http://dpaste.org/HmOfX/

[08:16] <solofight> so wanted to talk about that

[08:16] *** flyz left
[08:16] <solofight> here the person is using it as a recycle bin right ?

[08:17] <solofight> a smart recycle bin may be

[08:17] <gitinfo> sitaram: you are not authorised to perform this action (trigger_add).

[08:17] <solofight> ?

[08:17] <_ikke_> sitaram: it's trigger_edit

[08:17] <sitaram> _ikke_: aah! thanks (typo/thinko)

[08:18] <_ikke_> solofight: Well, the file doesn't seem to be deleted

[08:18] <sitaram> _ikke_: weird; I *did* do a trigger_edit but it's a *new* trigger so the *message* says "trigger_add", it seems

[08:18] <solofight> _ikke_: looking at it from the angle of storing unwanted files which at some point of time can be deleted or recovered ?

[08:19] <sitaram> solofight: yes it's for files where I am not sure if I ever want them but am too scared to outright delete

[08:19] *** ngulden joined
[08:19] <sitaram> at least for some time

[08:19] <_ikke_> sitaram: I always use trigger_edit to add new triggers, but I believe jast needs to add you to gitinfo for you to allow it to add new triggers

[08:19] <sitaram> _ikke_: ok

[08:19] *** Sir_Rai left
[08:19] <_ikke_> sitaram: I can add it if you want

[08:20] <sitaram> _ikke_: sure...; let me do it here so you can copy it off

[08:20] *** canton7 joined
[08:20] *** jutaro joined
[08:20] <solofight> sitaram: yes, interesting. Any other use case sitaram ?

[08:20] <sitaram> .trigger_edit anyone Usually, it does not help to ask for someone specific to answer your question.  No one is the sole expert on anything, or even if they may be, there are plenty of others who know enough to help you

[08:20] <gitinfo> sitaram: you are not authorised to perform this action (trigger_add).

[08:20] *** Shusshu left
[08:21] <sitaram> solofight: not right now but have you googled for UGFWIINI?

[08:21] <_ikke_> !trigger_edit anyone Usually, it does not help to ask for someone specific to answer your question.  No one is the sole expert on anything, or even if they may be, there are plenty of others who know enough to help you

[08:21] <_ikke_> .trigger_edit anyone Usually, it does not help to ask for someone specific to answer your question.  No one is the sole expert on anything, or even if they may be, there are plenty of others who know enough to help you

[08:21] <gitinfo> _ikke_: okay.

[08:21] *** jutaro left
[08:21] <_ikke_> sitaram: I guess it says you need permission for trigger_add

[08:22] <sitaram> (although in this specific case, !anyone does not apply -- he really wanted my opinion of something I said I do in my work)

[08:22] <gitinfo> Usually, it does not help to ask for someone specific to answer your question.  No one is the sole expert on anything, or even if they may be, there are plenty of others who know enough to help you

[08:22] <solofight> sitaram: am reading this http://www.simplicidade.org/notes/archives/2009/03/my_own_entry_to.html

[08:22] *** bandroidx left
[08:23] <solofight> http://kerneltrap.org/mailarchive/git/2009/2/17/5170414

[08:23] *** OOPMan joined
[08:25] <_ikke_> haha, git as a windows backup :D

[08:25] <solofight> sitaram: thank you very much - Think i can get some ideas from this http://kerneltrap.org/mailarchive/git/2009/2/17/5170414

[08:25] *** hyperair left
[08:25] <solofight> _ikke_: damn i am 2 years late

[08:26] <sitaram> solofight: I intend to extend that quite a bit and make it a proper tool to allow saving and restoring from named "archive" files (which are actually branches within this one big repo), including date based, (since git is so cool with '1 week ago' etc)

[08:26] <solofight> i tried versioning my counter strike installation which often gets screwed by unwanted files from other computers

[08:26] *** orafu left
[08:26] *** orafu joined
[08:26] <solofight> sitaram: what about the size on disk ?

[08:28] *** eijk joined
[08:29] <sitaram> solofight: that's not a concern.  I'm not putting movies on it, and for most normal stuff, I don't anywhere near fill a hard disk in even 2 years!

[08:29] <solofight> _ikke_: there goes on more - versioning cms with Git. I intended to do drupal and wordpress in specific :|

[08:29] *** yshh left
[08:29] <solofight> sitaram: your hard disk size ?

[08:30] <_ikke_> solofight: Yeah, that's quite common

[08:30] <solofight> is this UGFWIINI still on ?

[08:30] <_ikke_> solofight: No clue

[08:31] <sitaram> solofight: what this solves for me is it acts as a replacement for this (without git): multiple zip files, sometimes the same file saved multiple times (say an XLS my team is working on), with the ability to rsync the updated zip files to another computer (in both directions, without data loss even if both are updated), including free de-duplication for similar data/files or files *actually* duplicated, and the ability to quickly restore whichever file 

[08:31] <sitaram> solofight: at work?  1/2 TB.  At home?  1 TB ;-)

[08:31] *** whitman joined
[08:32] <_ikke_> nice

[08:32] <_ikke_> I only have 320GB

[08:32] *** robotmay left
[08:32] <solofight> i have 40GB :(

[08:32] <_ikke_> Where I use about 60GB for my home

[08:32] <_ikke_> Although I can easily extend it

[08:32] <sitaram> _ikke_: but I have only used 67 GB (as far as /home/sitaram is concerned)

[08:32] <solofight> still thinking about utilizing the 4GB harddisk i have from my olden days

[08:33] <_ikke_> LVM ftw :)

[08:33] *** brokenshakles joined
[08:33] <solofight> big bulky one

[08:33] <sitaram> solofight: at a pinch I could probably get by with 40 GB for my /home though maybe not for the whole system

[08:34] *** tomislater joined
[08:34] <solofight> sitaram: please let me know more about the xls file your team might be working on. How do you manage conflicts ?

[08:35] <solofight> can you give me a little more description ?

[08:35] *** valtih joined
[08:35] <sitaram> solofight: that's not related to this task, but to answer: you can't.  You have to communicate!

[08:36] *** shedammit_ left
[08:36] <sitaram> solofight: my point is that I would like to be able to recover last week's copy of the "foo vs bar comparision chart", for example

[08:36] *** psakrii left
[08:37] <sitaram> solofight: I hope you don't think this tool solves *those* problems.  A few messages above I posted a very long one starting "what this solves for me..." -- that's all it does

[08:37] *** shedammit joined
[08:37] <solofight> understood

[08:38] *** jrtrhe5 joined
[08:38] <solofight> sitaram: i am currently using git for my documents .docx

[08:39] <solofight> sitaram: can i ask what would be the case your all members of your team wants to work on the single xls document and update it ?

[08:39] *** jrtrhe5 left
[08:40] <_ikke_> solofight: The problem with using docx files in git is that they aren't mergable

[08:40] *** schnatta joined
[08:40] <solofight> _ikke_: xls ?

[08:40] <_ikke_> same

[08:40] <_ikke_> they are compressed files

[08:40] <solofight> i dont want to merge. like sitaram said i want to use it for versioning

[08:41] *** swombat left
[08:41] <_ikke_> solofight: You can do something with custom merge drivers, but that wouldn't be easy

[08:41] <solofight> i am single person using it in my case

[08:41] <sitaram> solofight: they're all equally unmergable.  We don't maintain them in git (if at all possible).  Usually people *don't* want to work on these things so it has not yet been an issue that 2 people make changes simultaneously.

[08:42] *** rockfruit joined
[08:42] <sitaram> solofight: so the files stay in some CIFS mount point.  (What I do, as the lead, is manage to save them in case they get deleted somehow.  So it's really "backup + versioning" not "version control" in the source code sense

[08:42] <solofight> not simultaneously sitaram. I am trying to understand the case of multiple people wanting to update a document (even in different timings)

[08:43] *** dorkmafia left
[08:43] <_ikke_> solofight: You don't get collaborating?

[08:43] <sitaram> solofight: I dont know how to answer that without going into specifics of what this XLS or that PPT is.   Or I misunderstood your question

[08:43] <rockfruit> I pulled someone's change to a README this morning, blithely did a cleanup 'rebase -i origin/master' - and my weekend's work is gone. I'm looking through reflog now, but tying myself up in knots.  Is there a way to browse reflog with a gui or such?

[08:43] * sitaram *nods* at what _ikke_ said

[08:44] <solofight> _ikke_: for my purpose - nope. I don't have other managers who are going to work on the project document which i am working on

[08:44] <sitaram> rockfruit: yes

[08:44] *** amigojapan joined
[08:44] <rockfruit> sitaram.. i need one small clue, please! :)  I'm suffering but I think I am ok, in there somewhere is my work...

[08:44] <sitaram> rockfruit: try gitk --date-order $(git log -g --pretty=%H) --not --branches --tags --remotes

[08:44] <_ikke_> rockfruit: !gka

[08:44] <gitinfo> rockfruit: For a better way to view the reflog, try: gka() { gitk --all $(git log -g --format="%h" -50) "$@"; }; gka

[08:44] <rockfruit> wow.

[08:45] <sitaram> rockfruit: wait; use mine :-)

[08:45] <_ikke_> oh?

[08:45] <rockfruit> rite thanks :))

[08:45] <_ikke_> What is the difference?

[08:45] *** dorisabayon joined
[08:45] <sitaram> _ikke_: I wanted to ask SethRobertson about that

[08:45] <_ikke_> ok

[08:45] <sitaram> _ikke_: the "--all" makes things really confusing

[08:45] <_ikke_> ah ok

[08:45] <sitaram> _ikke_: when you're looking for *lost* stuff, you want to exclude --all, IMO

[08:46] <sitaram> opinions welcome, this is mine

[08:46] <_ikke_> right

[08:46] <solofight> sitaram: no you understood that question correctly. I was exactly asking about the case of people wanting to alter the document. Is it some kind of timesheet which everybody needs to fill ? If its not too much to ask can you give me a generic description atleast ?

[08:47] <sitaram> solofight: yes :-)  And even if I did it may not apply to you.  Sorry!

[08:47] <solofight> oh

[08:47] *** aLeSD_ joined
[08:48] <aLeSD_> hi all

[08:48] *** Fandekasp left
[08:48] <solofight> sitaram: i am looking for a use case to quote to people where a document gets updated on a regular basis (which at later point be used for colloboration with other people [not simultaneously though])

[08:48] *** psoo joined
[08:48] <solofight> where git can be applied

[08:49] <aLeSD_> I am in a brach and I pull 3 commits. I'd like to return back ... is it possible ?

[08:49] <rockfruit> sitaram, a boxy pops up and says 'there is no git repository in .'

[08:49] <wereHamster> aLeSD_: for what reason do you want to return back?

[08:49] *** Lujeni joined
[08:49] *** lapistano joined
[08:49] <aLeSD_> wereHamster: I developed in a wrong way

[08:49] <sitaram> rockfruit: check what directory you're in...?

[08:50] *** schnatta left
[08:50] <rockfruit> I did :)  *plays*

[08:50] <aLeSD_> and I had the bad idea to not create a local branch

[08:50] <wereHamster> aLeSD_: so you want to throw those three commits completely away? And also remove those changes from the working tree?

[08:50] <aLeSD_> wereHamster: yes

[08:50] *** dharrigan joined
[08:50] *** dharrigan left
[08:50] *** dharrigan joined
[08:50] <wereHamster> aLeSD_: git reset --hard ORIG_HEAD

[08:50] <rockfruit> sitaram, wait, I'm in a symlink folder!

[08:50] *** Lujeni left
[08:50] *** mishok13 left
[08:51] *** kerrick left
[08:51] *** hyperair joined
[08:51] *** edude03 joined
[08:51] *** mklappstuhl joined
[08:52] <rockfruit> (that was it)

[08:52] *** snearch joined
[08:52] *** Lujeni joined
[08:52] *** canton7 left
[08:52] <aLeSD_> wereHamster: thanks ... Now how to pull the new HEAD ?

[08:53] *** shruggar joined
[08:53] *** mishok13 joined
[08:56] *** amgarching joined
[08:56] <rockfruit> sitaram I'm okay now.  Thanks guys

[08:56] <wereHamster> aLeSD_: what do you want?

[08:57] <aLeSD_> wereHamster: I did it git push --force

[08:57] *** padams joined
[08:57] *** macRover joined
[08:58] <wereHamster> and then?

[08:58] *** delight joined
[08:59] *** Spockz left
[09:00] *** icwiener joined
[09:01] *** bandroidx joined
[09:01] *** Element9_work joined
[09:03] <solofight> people, i create a new repository, add files, commit. Now i delete one file, git status says deleted : filename and asks me to git add/rm file to update what will be commited

[09:04] <solofight> when i git add filename.extension and again do git status - its in the same state

[09:04] <solofight> how to add the deletion to the commit ?

[09:04] <_ikke_> solofight: Another one: Git as a bugtracker (be)

[09:05] <solofight> _ikke_: bug tracker !

[09:05] <solofight> ! !

[09:05] *** aLeSD_ left
[09:05] <_ikke_> bugs everywhere

[09:05] <solofight> _ikke_: what is (be) ? bug tracker name ?

[09:05] <_ikke_> http://bugseverywhere.org/

[09:05] <solofight> _ikke_: oh

[09:07] <solofight> _ikke_: Supported version control backends: Arch, Bazaar, Darcs, Git, Mercurial, Monotone. ! ! !

[09:07] <solofight> how will it maintain bug states ? as seperate file for each bug ! ?

[09:07] <_ikke_> solofight: Can't recall

[09:08] <_ikke_> I believe it creates a seperate .be directory

[09:08] *** harshpb joined
[09:08] *** chrisw_ joined
[09:08] <chrisw_> hey all, anyone know where gitx is being developed nowadays?

[09:08] *** Sigma joined
[09:09] <solofight> sector4

[09:09] * solofight runs away

[09:09] <sitaram> hmm?  I thought it was in area 51

[09:09] *** canton7 joined
[09:10] <chrisw_> not a lot recent on http://groups.google.com/group/gitx other than spam :-S

[09:11] *** ziro` joined
[09:11] *** eijk_ joined
[09:11] *** eijk left
[09:12] <solofight> sitaram: i didn't even want to say that. You can expect a napalm on your head in 5

[09:12] <solofight> 4

[09:13] <solofight> people, i create a new repository, add files, commit. Now i delete one file, git status says deleted : filename and asks me to git add/rm file to update what will be commited

[09:13] <solofight> when i git add filename.extension and again do git status - its in the same state

[09:14] <_ikke_> solofight: Could you pastebin the output of git status?

[09:16] *** koo4 left
[09:16] <solofight> _ikke_: http://pastebin.com/jCJndsGy

[09:16] *** lonewulftp left
[09:16] *** BlindOracle joined
[09:17] *** lonewulftp joined
[09:17] *** lonewulftp left
[09:17] <_ikke_> solofight: because check.bmp does not exist in the work tree, there is nothing for git to add

[09:21] *** valtih left
[09:21] *** Vile left
[09:22] <solofight> _ikke_: yes i deleted it. I dont want the file to be in the directory from commit 2.

[09:22] <solofight> how do i go about it ? first i need to tell git not to track the check.bmp and then delete it ?

[09:22] <solofight> is that the way ?

[09:23] <_ikke_> solofight: You need to do git rm check.bmp and commit that

[09:23] *** fl0w joined
[09:23] <solofight> _ikke_: understood - thank you

[09:25] *** FernandoBasso joined
[09:26] *** macRover left
[09:26] *** jutaro joined
[09:27] *** koo4 joined
[09:28] *** archis joined
[09:29] *** beautifulmind joined
[09:32] *** dr0id left
[09:35] <rockfruit> The reflog appears to be a local construct.  How much of the background noise actually transfers to the remote repo?

[09:35] <_ikke_> nothing

[09:36] <rockfruit> excellent!  yip hippie!

[09:36] <rockfruit> (I used to think my rebases etc were stored for posterity)

[09:37] *** harshpb left
[09:38] *** achadwick joined
[09:39] *** orafu left
[09:39] *** archis left
[09:39] *** orafu joined
[09:40] *** LimeBlast joined
[09:42] *** flyz joined
[09:43] *** joshsmith joined
[09:43] *** chrisw_ left
[09:44] <diverdude> I am trying to install gitlab, and i get an error run the command: bundle, and i get this

[09:44] <diverdude> 	    error: An error occured while installing nokogiri (1.5.0), and

[09:44] <diverdude> 	    Bundler cannot continue. How can i see what this error is so that

[09:44] <diverdude> 	    i can try to solve the issue?

[09:45] <FauxFaux> diverdude: That's Ruby being a complete pile of shit.  Seek help with the ruby people.

[09:47] *** iocor joined
[09:47] <bronson> diverdude: install libxml2-dev and libxslt1-dev

[09:48] <FauxFaux> (I used to be polite about Ruby, but then I tried to use FileUtils.mkdir_p() on a machine that didn't have imagemagick installed, and I took an angry to the knee.)

[09:48] <diverdude> bronson: thank you

[09:48] *** xim1 joined
[09:49] *** delight left
[09:49] *** jameslordhz joined
[09:50] <diverdude> bronson: hmm ok now i get an error running the same command...but now i need some dependency for installing charlock_holmes (0.6.8) it seems. Do you know what that is?

[09:50] <bronson> never heard of it

[09:51] <jameslordhz> hi, all

[09:51] <jameslordhz> every time i push/fetch/pull, i should type my password

[09:51] <jameslordhz> i hate this

[09:51] <_ikke_> jameslordhz: What protocol?

[09:51] <jameslordhz> what can i do , in order to make git easier to use?

[09:51] <jameslordhz> ssh tunnel

[09:52] <bronson> jameslordhz: set up an ssh agent

[09:52] <jameslordhz> i know if i enable RSA Authenticaion, things can be done, but i have no right to modify files in /etc

[09:52] <_ikke_> jameslordhz: You don't need to

[09:52] *** gitinfo sets mode: +v xim1

[09:52] <jameslordhz> bronson how to set up an ssh agent?

[09:52] <xim1> do I need to use git rebase once the origin branch has moved ahead from the local copy of origin or a git pull is sufficient?

[09:53] <_ikke_> xim1: Both work

[09:53] <_ikke_> xim1: pull does a merge

[09:53] <bronson> jameslordhz: depends on your system...  Gnome & KDE set it up for you automatically.

[09:53] *** _Vi joined
[09:54] *** johnathanb joined
[09:54] *** yatiohi joined
[09:54] <xim1> _ikke_: thanks. I am asking this because I seem to have royally screwed my commits in a position where I have conflicts pushed to master :(

[09:54] <jameslordhz> a virtual server, don't know if it use gnome or kde

[09:54] <xim1> Is there any way to roll back a master to a few merges and commits back?

[09:55] <_ikke_> xim1: Yes

[09:55] <xim1> _ikke_: how?

[09:56] <_ikke_> xim1: Could you pastebin git log -15 --graph --oneline --format="%h %d" master HEAD

[09:57] *** nimrod10 joined
[09:57] *** goutham left
[09:58] <xim1> sure gimme a minute.

[09:58] *** nax joined
[09:58] *** nax is now known as Guest27390

[09:59] *** dr_lepper joined
[09:59] *** dr_lepper left
[09:59] *** dr_lepper joined
[10:00] <diverdude> Is it possible to fork a repo from github to a private gitserver?

[10:00] *** _Vi left
[10:00] <wereHamster> diverdude: sure.

[10:01] <wereHamster> diverdude: fetch the code from github, push to your gitserver

[10:01] *** _Vi joined
[10:01] <diverdude> wereHamster: ahh ok...fetch using clone i guess?

[10:01] <xim1> _ikke_: http://www.pastebin.ca/2101494 <-- From one developer's machine. I will get it from another one in a minute.

[10:02] *** dotpot joined
[10:02] *** Vile joined
[10:02] *** gusnan joined
[10:03] <wereHamster> diverdude: fetch using whatever mechanism you want

[10:03] <_ikke_> xim1: Can you identify the bad commits?

[10:05] *** caseymcg left
[10:06] *** koo4 left
[10:07] *** Trae32566 left
[10:08] *** ISF_ joined
[10:08] *** bauruine left
[10:09] *** ISF left
[10:10] *** koo4 joined
[10:10] <xim1> _ikke_: I'd like to revert all changes made after  367f60b

[10:11] <_ikke_> Even those merges?

[10:12] <xim1> _ikke_: yeah..All the merges and commits were pushed today without taking care of the conflicts.

[10:12] <wereHamster> xim1: git read-tree 367f60b; git commit -m 'Undo all changes made after 367f60b'; git checkout -- .

[10:12] *** fl0w left
[10:13] *** dreiss left
[10:13] <wereHamster> though, that's not a proper revert, so take care when merging those branches again

[10:13] *** overbythere joined
[10:13] <_ikke_> xim1: Have you pushed those merges?

[10:13] *** ChrisAnn joined
[10:13] <xim1> _ikke_: yeah

[10:14] <xim1> Let me explain what happened.

[10:14] *** fl0w joined
[10:14] <xim1> We have only started to use git and our developers have no idea about it.

[10:14] *** nzee joined
[10:14] <xim1> The 2 developers were supposed to close their branches and push changes to master today. However, late last night, they exchanged some files with each other and somehow it messed up git.

[10:15] *** forsto left
[10:15] <xim1> Dev1 pushed his code and when Dev2 pushed his', git complained about conflicts.

[10:15] *** ipalaus_ joined
[10:15] *** fl0w left
[10:16] *** fl0w joined
[10:16] <xim1> Some 30 minutes and frantic screwing later, we ended up with a messed up master which has php code with all HEAD and branch tags.

[10:16] *** fl0w left
[10:16] <xim1> thanks wereHamster

[10:17] <solofight> sitaram: quick question regarding your team working on the xls document. After making changes - how do you push it ? Is the remote repository a bare repo ?

[10:21] *** kermit left
[10:21] <_ikke_> solofight: Yes

[10:21] <_ikke_> solofight: If you want to push, you should use a bare repository

[10:21] <_ikke_> !bare

[10:21] <gitinfo> an explanation of bare and non-bare repositories can be found here: http://bare-vs-nonbare.gitrecipes.de/

[10:22] <solofight> _ikke_: yes had this discussion in the very same room - but wont sitaram end up with two repositories in this case ?

[10:23] <_ikke_> solofight: Why?

[10:23] <_ikke_> You just have one central bare repository

[10:24] *** aidenhong left
[10:26] <xim1> Guys, I need advice on how to setup my git DVCS workflows. I have 3 developers working on different components but also some shared components. I'd like all the code to be in a bitbucket repository

[10:26] *** Bricktop joined
[10:26] <_ikke_> !workflow

[10:26] <gitinfo> Finding the right workflow for you is critical for the success of any SCM project.  Git is very flexible with respect to workflow.  See http://progit.org/book/ch3-4.html and http://nvie.com/posts/a-successful-git-branching-model/ (associated tool https://github.com/nvie/gitflow) for branching workflow ideas, http://progit.org/book/ch5-1.html for distributed workflow ideas.

[10:26] <xim1> What I had done was that each developer opened up a branch from master and then merged it later. However, the merge only took place when the master on local was up to date. Apparently this has casued issues.

[10:27] <_ikke_> There are some nice resources in there

[10:27] <diverdude> ok it seems gitlabs webinterface runs on port 3000. What other ports does git require before i can use it?

[10:28] <bremner> gitlabs is not git

[10:28] <xim1> _ikke_: I will review it. Thanks

[10:28] <diverdude> bremner: no but it uses git

[10:28] <_ikke_> diverdude: Depends on what protocol you use

[10:29] <diverdude> _ikke_: hmm i have no idea. The default gitlab one

[10:29] <_ikke_> ssh uses port 22; git daemon uses 9418

[10:29] <_ikke_> I don't know gitlab

[10:29] *** koo4 left
[10:30] *** koo4 joined
[10:30] *** cortana` joined
[10:30] <solofight> _ikke_: one central bare repo for each repositor. that means two repository for each project

[10:30] <solofight> one with working directory and one without (remote bare repo)

[10:31] *** blueyed left
[10:31] <sitaram> 14:11:28  <sitaram         > solofight: they're all equally unmergable.  We don't maintain them in git (if at all possible).

[10:32] *** noisebleed joined
[10:32] *** noisebleed left
[10:32] *** noisebleed joined
[10:32] *** stamina joined
[10:32] <_ikke_> solofight: Why do you need a non-bare repository

[10:32] <_ikke_> ?

[10:32] <sitaram> solofight: the git part is the non-standard, "using it as a fancy, multiple-zip-files in one place with de-duplication etc" that I wrote earlier.  We do *not* keep unmergable docs in git in the *normal* sense of the word

[10:32] *** Codif joined
[10:33] <diverdude> _ikke_: so git uses only port 9418 for everything?

[10:33] <_ikke_> diverdude: git-daemon does

[10:33] <bremner> or http or ssh

[10:33] <sitaram> 14:12:33  <sitaram         > solofight: so the files stay in some CIFS mount point.  (What I do, as the lead, is manage to save them in case they get deleted somehow.

[10:33] <diverdude> _ikke_: are there other git services running also?

[10:33] <_ikke_> diverdude: not directly related to git

[10:33] <bremner> you don't _need_ to run git-daemon

[10:33] <_ikke_> diverdude: Like bremner said, there are other ways

[10:34] <_ikke_> diverdude: git-daemon is read-only by default because of lack of authentication

[10:34] <_ikke_> diverdude: There is (smart)-http and ssh

[10:34] <diverdude> yeah ok...how can i check if gitlab uses git-daemon?

[10:34] <xim1> _ikke_: Is it a good idea that 2 developers work using the same repository but push their code in different subdirectories?

[10:35] <_ikke_> diverdude: Does it show anywhere how you are supposed to clone a repo on git-lab?

[10:35] <_ikke_> xim1: Nope

[10:35] <amitz> i'd like too confirm the best practice of the following scheme. i maintain some branches for eventual production purposes. for each branch, i maintain a branch populated with debugging message and testing set. for every change in the normal branches, i merge them to the debugging branches and add the corresponding debugging.

[10:35] <xim1> So master has folder1 for dev1 and folder1/folder2 for dev2

[10:35] <_ikke_> xim1: That won't solve anything

[10:35] <xim1> hmm..that's what I have done right now since my devs need a common includes and classes

[10:35] <amitz> s/maintain a/maintain another/

[10:36] *** jargon- joined
[10:36] <xim1> _ikke_: so what do you suggest?

[10:37] *** jargon- left
[10:37] *** wbednarski joined
[10:37] *** cenuij left
[10:38] *** jargon- joined
[10:38] <amitz> meanwhile, i want to have a backup copy of that git repository. is there an advantage of git clone over rsync?

[10:38] <FauxFaux> It's slightly safer and may use less bandwidth, but will use infinitely more cpu.

[10:39] <amitz> oh, but i can't run git clone repeatedly...

[10:40] *** cccaldas joined
[10:40] <amitz> to accumulate on a git clone.

[10:40] <FauxFaux> Oh, I didn't read the scrollback atall.

[10:40] *** arnihermann joined
[10:40] <amitz> it's okay

[10:40] <_ikke_> xim1: Well, I didn't really get what the problem was. I'm not sure what the devs this for them to get such conflicts

[10:41] <_ikke_> xim1: But conflicts should only happen if they change the same code

[10:41] *** cenuij joined
[10:41] *** cenuij left
[10:41] *** cenuij joined
[10:42] *** edude03 left
[10:44] *** xiangfu left
[10:46] *** glcrazy joined
[10:46] *** psakrii joined
[10:47] *** Araxia_ joined
[10:48] <diverdude> what is the gitolite command which corresponds to this gitosis command: sudo -H -u git gitosis-init < ~/.ssh/id_rsa.pub ?

[10:49] <cbreak> what does that do?

[10:50] <cbreak> if you want to install gitolite, read http://sitaramc.github.com/gitolite/index.html#qi

[10:50] <sitaram> diverdude: from the pubkey being supplied, probably 'gl-setup Yourname.pub'.  However, that is the strangest and least useful way of asking any question about gitolite.  (hint hint...)

[10:50] *** solofight left
[10:51] *** Araxia left
[10:51] *** Araxia_ is now known as Araxia

[10:53] <bremner> well, asking the equivalent of an svn command would be worse ;)

[10:53] *** sebrock joined
[10:54] <cbreak> svn command equivalents include lots of sleep 5

[10:54] <sitaram> bremner: sorry no.  Svn is still being actively used, developed, and presumably *someone* responds to emails, even if there is no one specific person who is the "author"

[10:55] *** ChaoWang left
[10:56] <cbreak> svn log -> git remote update && sleep 5 && git --no-pager log --all

[10:56] <cbreak> or so

[10:57] <bremner> git --no-pager --pretty=insane log

[10:57] <bremner> oh, well, ynwim

[10:58] *** ipalaus__ joined
[10:58] *** phil-adept joined
[10:58] <phil-adept> hi all :)

[10:59] *** ASIRINeiluj joined
[10:59] *** ipalaus_ left
[11:00] <phil-adept> can anyone offer advice on getting SSH set up on windows?

[11:00] <phil-adept> I'm looking for recomendation

[11:01] <FauxFaux> phil-adept: Server, or client?

[11:01] <phil-adept> Server :)

[11:01] <FauxFaux> I think cygwin has one but it's terrible.  Please use linux. :p

[11:02] <cbreak> step one: get a virtual machine with a unix

[11:02] *** iocor left
[11:02] <cbreak> is vmware still free?

[11:03] <bremner> see on linux there are free virtual machines to host your linux.

[11:03] <FauxFaux> Virtualbox is still free and better, yes. :)

[11:03] *** herdingcat left
[11:03] <phil-adept> ha ha... Everyone uses a shotgun to break a walnut these days

[11:03] <FauxFaux> And packaged for sensible distros. ¬_¬

[11:03] <phil-adept> I want to do it without a vM

[11:03] <FauxFaux> phil-adept: No, seriously, you don't understand how much time you're going to waste on this.

[11:03] <cbreak> http://www.vmware.com/products/player/

[11:03] <diverdude> when i try to run sudo -u git -H /home/git/gitolite/src/gl-system-install i get an error saying: gl-setup is not in your $PATH. So i then run PATH=/home/git/bin:$PATH but i still get the error. What am I missing then?

[11:03] *** iocor joined
[11:04] <FauxFaux> diverdude: sudo -u git -s # then do stuff in the new shell.

[11:04] <cbreak> diverdude: your PATH is not root's PATH

[11:05] <diverdude> ahh yes ofc

[11:05] *** pfsmorigo joined
[11:05] *** aLeSD_ joined
[11:05] <diverdude> hmmm then i get bash: /home/bdi/.bashrc: Permission denied

[11:06] <cbreak> check permissions

[11:06] *** Prasad left
[11:06] *** linusoleander joined
[11:06] <sitaram> diverdude: all those sudo's... is this ubuntu?  wouldn't you rather apt-get install?

[11:06] *** rendar joined
[11:06] <phil-adept> Right so the general feeling is to get a VM, I'm not sure how that will work though

[11:07] <phil-adept> I will still need SSH runnning on the box I'm looking at running Git from (under windows)

[11:07] <diverdude> sitaram: ? im just trying to follow this: https://github.com/gitlabhq/gitlabhq/wiki/Gitolite

[11:07] <cbreak> phil-adept: ssh client is much easier

[11:08] <cbreak> with msysgit it works pretty much out of the box, after you generate a key

[11:08] <cbreak> maybe takes a bit longer to get agent set up, I never did that, but others said it's easy

[11:08] <sitaram> diverdude: sorry; until a couple days ago I had not even *heard* someone else was making software with gitolite inside.  You'll have to ask them I'm afraid...

[11:09] *** Q| joined
[11:09] <diverdude> sitaram: i think my problems are not really specific to gitolite actually...

[11:09] <cbreak> diverdude: http://sitaramc.github.com/gitolite/master-toc.html

[11:10] *** aLeSD_ left
[11:10] *** pfsmorigo left
[11:10] *** aLeSD_ joined
[11:10] *** aLeSD_ left
[11:10] *** aLeSD_ joined
[11:12] <phil-adept> cbreak, thanks for that. I basically have 3x machines. 1x dev workstation, 1x dev laptop and a basic server that I want to use to store the repo. I'm dipping into version control and chose Git over subversion so I installed msysgit on my server and that's as far as I got. I'm going to be using tortoise-git for the time being to handle most of my interactions with Git installed on the server. Am

[11:12] <phil-adept> I right in thinking this requires SSH to communicate?

[11:13] <gebi> phil-adept: git _server_ on windows is a bad idea

[11:13] <cbreak> if you want a proper server, you need an ssh server

[11:14] *** blueyed joined
[11:14] <cbreak> if you want to do it read-only, maybe it works without

[11:14] <phil-adept> It's all that's at my disposal

[11:14] <cbreak> (but unauthenticated)

[11:14] <xim1> _ikke_: is it possible to create a new branch by merging 2 different branches?

[11:14] <phil-adept> I agree... That's my original quesition :)

[11:14] <cbreak> xim1: no. make a new branch before merging

[11:14] <cbreak> git checkout -b newbranch branch1

[11:14] <cbreak> git merge branch2

[11:14] <phil-adept> Some have recommended copssh

[11:15] <phil-adept> https://www.itefix.no/i2/copssh

[11:15] <xim1> thanks cbreak

[11:15] *** Codif left
[11:15] <phil-adept> waiting for an email from their admin team as the download features broken

[11:15] *** aLeSD_ left
[11:15] <cbreak> openssh doesn't work on windows?

[11:16] <phil-adept> copssh does

[11:16] <cbreak> getting gitolite running at work only took 10 minutes after the VM was set up

[11:16] *** cmihai joined
[11:16] *** faber joined
[11:16] *** aidenhong joined
[11:16] <cmihai> How can I recover a "git rm"-ed file?  "git show" tells me it's "diff --git a/keydir/admin_local_host_1325858855.pub b/keydir/admin_local_host_1325858855.pub"

[11:17] <cmihai> but git show 38293c62e50286458535018c4cf81e6268171015:keydir/admin_local_host_1325858855.pub does not work

[11:17] *** aidenhong left
[11:18] *** aidenhong joined
[11:18] *** brian_g joined
[11:19] *** aLeSD_ joined
[11:20] <cbreak> cmihai: just git checkout HEAD -- filename

[11:21] *** ipalaus_ joined
[11:21] <phil-adept> in a nutshell. does wsysgit REQUIRE ssh?....

[11:21] <phil-adept> or wil it run happily without?

[11:21] <cbreak> msysgit?

[11:21] <cbreak> no.

[11:21] <cmn> it only needs ssh to do ssh stuff

[11:21] <cbreak> it comes with an ssh client

[11:21] <cmn> i.e. pushing or fetching over ssh

[11:21] *** canton7 left
[11:21] <cbreak> but you only need it for communicating with ssh remotes

[11:21] <cmihai> Ok, thanks.

[11:22] *** ipalaus__ left
[11:22] *** m1sc joined
[11:23] *** Cromulent joined
[11:23] *** Mavericks joined
[11:23] *** fl0w joined
[11:23] *** nikuyoshi joined
[11:24] *** fl0w left
[11:24] <Mavericks> i've added the .netrc file in my home folder when i start git bash on windows vista

[11:24] *** schlumpi joined
[11:26] *** whyking joined
[11:26] *** valtih joined
[11:26] <Mavericks> i get the following error: i get the following error: http://mibpaste.com/xP1nlH

[11:27] <Mavericks> upon doing git push <origin> master  - when i do https in <origin> it doesn't ask password, but upon http it does ask, when enter it , I get - http://mibpaste.com/p7H2Ds

[11:28] *** fl0w joined
[11:28] <phil-adept> right, I've had advice from about 4 different people anbd all are telling me completely different things. Has anyone got 5 minutes they can spare to talk to me about some queries I have with my setup and how to achieve what I want?

[11:28] <phil-adept> I think I've had too much conflicting info so far and it's confusing me

[11:28] *** _7nb joined
[11:28] <sitaram> phil-adept: why don't you try gerrit?  comes with its own git, and its own ssh stack but should work on windows too

[11:28] *** Guest27390 left
[11:28] *** fl0w left
[11:28] <sitaram> phil-adept: however, all the normal git command line tools etc may or may not work (I have no idea)

[11:29] <_7nb> Is there any way one can specify, even just temporarily, additional exclude patterns, but not using any files (e.g. .gitignore) in the process? That is to say, are there any git command options that would take an exclude pattern?

[11:30] *** robde joined
[11:31] *** vereteran joined
[11:31] *** OOPMan left
[11:32] *** aLeSD_ left
[11:32] <nzee> I am getting merge the remote changes before pushing again. Why is it?

[11:32] *** aLeSD_ joined
[11:34] <cmn> history has diverged, presumably, it should say so just before that part you're refering to

[11:34] <phil-adept> anyone?

[11:35] *** Mavericks left
[11:35] *** thiago joined
[11:35] <nzee> I am getting merge the remote changes before pushing again. Why is it? any1?

[11:35] <cmn> history has diverged, presumably, it should say so just before that part you're refering to

[11:35] *** genjix joined
[11:35] *** harshpb joined
[11:36] <nzee> what should I do cmn ?

[11:36] <cmn> either merge or rebase

[11:36] <cmn> so that the history converges again

[11:37] <nzee> how do I merge?

[11:37] <cmn> with the merge command

[11:37] <nzee> I am actually trying to push it to github repo.

[11:37] <cmn> if the upstream is set up, a pull would also do the trick

[11:38] <cmn> right, but the branch has modifications you don't have

[11:38] <cmn> so git isn't letting you overwrite them

[11:39] <nzee> will 'git pull' resolve conflicts?

[11:39] *** ilius joined
[11:39] <ilius> hi

[11:40] <cbreak> phil-adept: what's the problem?

[11:40] *** jaequery left
[11:40] <ilius> do you think its a good idea to define javascript minified file (*.min.js) as binary files? (in .gitattributes)

[11:40] <cbreak> From what I saw here, we all gave about the same advice

[11:41] *** Cromulent left
[11:41] <cmn> nzee: git pull will merge both histories, yes

[11:41] <cmn> if there are conflict in the code, you'll have to resolve them yourself

[11:42] <phil-adept> can I pvt you cbreak?

[11:43] <cbreak> just use this channel

[11:43] *** martinjlowm joined
[11:44] <phil-adept> no worries. As it stands I have 2x machines I dev on. A workstation and a laptop. I want to set up git to work on both. I also have a spare PC that I wanted to use as a central repo that both dev machines sync with. This spare pc will also be my staging server

[11:44] <phil-adept> All run windows

[11:44] <phil-adept> I wanted ideally to use a gui with explorer context options, so tortoise-git is my choice

[11:45] *** aLeSD_ left
[11:45] *** Fandekasp joined
[11:45] *** aLeSD_ joined
[11:45] *** verm__ joined
[11:45] <phil-adept> Now do I need to install wsysgit on each machine or just on the box I want the repo so reside on?

[11:46] <cmn> tortoisegit depends on msysgit, I think

[11:46] <cbreak> you want the repo to be on all

[11:46] *** vpopov joined
[11:46] <phil-adept> and do I 'have' to use SSH to communicate through tortioise-git > wsysgit

[11:46] <cbreak> so install msysgit on each of them

[11:46] *** linusoleander left
[11:46] *** linusoleander joined
[11:46] <cbreak> on the server you also need an ssh server

[11:46] *** vdv left
[11:46] *** verm__ left
[11:46] <phil-adept> right, which is why I've obtained copssh

[11:46] <cbreak> also, I recommend against tortoise git, it's garbage

[11:47] <phil-adept> so Git can work standalone on a single machine yes?

[11:47] <cbreak> yes

[11:47] <phil-adept> for simple versioning?

[11:47] <phil-adept> getcha

[11:47] <cbreak> yes

[11:47] <genjix> how can i apply a 'git diff' patch?

[11:47] <cbreak> genjix: you should make git format-patch patches

[11:47] <phil-adept> (I'm using tortoise-git for a quick win here, I intend to use git-bash once I have time to learn another CLI lingo

[11:47] <cbreak> genjix: git diff is just for looking at stuff

[11:47] <genjix> annoying. ok

[11:47] <_ikke_> genjix: git apply

[11:47] <genjix> _ikke_: doesnt work

[11:47] <cbreak> genjix: git am uses git apply to apply those then

[11:48] *** marthinal left
[11:48] <cbreak> genjix: it works.

[11:48] *** h0bbit joined
[11:48] *** dorisabayon left
[11:48] <genjix> cbreak: if i do git diff > foo.diff and then git apply, it doesn't work for me

[11:48] <cbreak> as I said, git diff output is for humans

[11:49] <cbreak> it might or might not apply

[11:49] <genjix> yeah

[11:49] *** canton7 joined
[11:49] <genjix> ok

[11:50] <pasky> huh

[11:51] <pasky> since when was git diff declared "just for humans"?

[11:51] <cbreak> have you read the man page?

[11:51] <cbreak> half the options there are for making the output look different

[11:51] <_ikke_> pasky: It's a porcelain command, not a plumbing command

[11:52] <pasky> didn't people here say few days ago that porcelain/plumbing distinction is somewhat obsolete now? :)

[11:52] <_ikke_> pasky: somewhat

[11:52] <_ikke_> pasky: Not totally though

[11:52] <cbreak> and make the output completely unusable by any machine

[11:52] <cbreak> just look at things like git diff --word-diff or --color-words

[11:52] <cmn> there are some commands that remain plumbing

[11:53] *** akosikeno joined
[11:53] *** zdk left
[11:53] <pasky> cbreak: so what that there are such options? I don't think genjix has been passing any of these to git diff

[11:53] <cbreak> who knows

[11:53] <cbreak> my git diff always prints colors due to config

[11:53] <pasky> and the manpage itself reads that by default git diff produces a patch file

[11:54] <cbreak> why bother even check ifyou can just as well use format-patch

[11:54] <pasky> genjix: what error do you get if you try to git apply?

[11:54] *** linusoleander left
[11:55] *** linusoleander joined
[11:55] *** linusoleander left
[11:55] <pasky> cbreak: how do i produce tree-index patch using format-patch?

[11:55] <wereHamster> pasky: you can't.

[11:56] <pasky> i think so too

[11:56] <wereHamster> format-patch can only format what is committed.

[11:56] <cbreak> pasky: tree-index?

[11:56] <pasky> so I could use git diff-files -p

[11:56] <genjix> pasky: just a general failed to apply patch

[11:56] <pasky> but why wouldn't I just use git diff?

[11:56] *** oriba joined
[11:56] <wereHamster> pasky: you tell me :)

[11:56] <pasky> genjix: that's curious... I use git diff regularly and I never really had problems

[11:57] <cbreak> pasky: in general, just commit it

[11:57] <pasky> genjix: what if you just use patch -p1 to apply it? does it fail?

[11:57] <cbreak> pasky: or you can just pass all command line flags required to git diff yourself, and overwrite any configuration that makes the patch incompatible and/or unapplyable

[11:57] *** aro joined
[11:57] <pasky> (warning: this can mess up your working tree so have everything committed)

[11:57] <cbreak> if you find out which ones they are

[11:58] *** aLeSD_ left
[11:58] <genjix> pasky: yes

[11:58] <genjix> patch fails too

[11:58] <cbreak> git format-patch

[11:58] <cbreak> try it

[11:59] <pasky> genjix: what's your git config color.diff value?

[11:59] <cbreak> does it work?

[11:59] *** Dave^|| joined
[11:59] <pasky> setting this to always is the only thing i can think about now that could break it

[11:59] <pasky> genjix: (are you sure the diff actually _is_ supposed to apply?)

[11:59] <cbreak> diff has other options that can cause trouble

[11:59] *** Chib left
[11:59] <_7nb> git-export-patch ftw

[11:59] <cbreak> like ignoring space changes and similar

[12:02] *** mxweas joined
[12:02] *** Dave^| left
[12:02] <pasky> cbreak: but i don't think you can reconfigure diff's default behavior, you again have to pass options explicitly (or use an alias)

[12:02] <pasky> and I assume genjix is doing neither

[12:03] <genjix> yep i have colours but i doubt that is the reason because i copy and pasted the patch across 2 terminals :)

[12:03] <pasky> ouch!

[12:03] <genjix> also my diff is unchanged (no aliases or options passed)

[12:03] <pasky> then that's likely the cause

[12:03] <genjix> 2 ssh terminals

[12:03] <pasky> your whitespaces will be rather devastated

[12:03] <_ikke_> try -p --raw

[12:03] <pasky> you could try git apply --ignore-whitespace

[12:04] <pasky> but if you still have an option to transfer the diff properly, do that

[12:04] *** otakutomo left
[12:04] <genjix> here is an example of git diff not following the unix principle

[12:04] <pasky> _ikke_: that will just add the :-lines to the output, won't it?

[12:04] <_ikke_> probably

[12:05] <pasky> genjix: what do you mean?

[12:05] <genjix> well git diff should work with git apply and patch logically :)

[12:05] *** Q| left
[12:05] <pasky> the point of my argument with cbreak is that I still insist it does, except a special case where you go out of your way to configure it differently

[12:06] <cmn> git diff | git apply might work, but copy-and-pase across terminals can cause all sorts of trouble

[12:06] <pasky> however, cut'n'paste does not preserve whitespaces... complain to the generations of terminal emulator authors about that :)

[12:06] <pasky> bbl, bye :)

[12:07] <cbreak> git format-patch works acros terminals. :)

[12:07] <cbreak> (because it creates a file)

[12:07] <wereHamster> it even works across sneakernet

[12:07] <cbreak> wonder if you can print it out and OCR it.

[12:07] <cbreak> probably not

[12:08] <wereHamster> not with 30% recognition rate in ocr :)

[12:09] <cbreak> OCR is much better these days I think

[12:09] <cbreak> ... well... maybe not with code

[12:10] *** ISF_ left
[12:11] *** kermit joined
[12:12] *** legnaleurc joined
[12:12] <wereHamster> maybe on a printout with a large monospace font. But if you want to detect *any* text (like on buildings, clothes etc) then the recognition rate is pretty poor

[12:13] *** ISF joined
[12:13] *** otakutomo joined
[12:14] *** Hapz joined
[12:15] *** Q| joined
[12:17] *** psakrii left
[12:19] *** jameslordhz left
[12:19] *** dougsland joined
[12:19] *** dougsland left
[12:19] *** dougsland joined
[12:19] *** ISF left
[12:21] <cbreak> wereHamster: I don't think you'd print a diff onto a building

[12:22] *** bauruine joined
[12:22] <genjix> fuck you! i can if i want

[12:22] *** fayimora joined
[12:22] <lericson> How do I get to the commit at which ancestry of commits A and B diverge?

[12:22] <lericson> i.e. git merge-base A B

[12:22] *** joshsmith left
[12:22] <_ikke_> git checkout?

[12:23] <lericson> Typing out git rebase -i $(git merge-base master other) is a little tedious.

[12:23] <genjix> not sure that is possible

[12:23] <_ikke_> lericson: What do you want exactly?

[12:23] <genjix> ah ok ignore me then

[12:23] <cbreak> lericson: type git merge-base A B

[12:23] <lericson> I guess this usecase might be a little too specific to warrant shorthand notation

[12:23] <thiago> lericson: git checkout $(git merge-base master other)

[12:24] <lericson> I want to edit history of the current branch as of the divergence to another branch

[12:24] <lericson> Another topic branch to be specific

[12:24] <thiago> then what you had typed before

[12:24] <cbreak> git checkout A

[12:25] <cbreak> and then rebase

[12:25] <_ikke_> I guess he want's a shorthand, something like @{m}

[12:25] <lericson> Right thanks

[12:25] <lericson> Yes _ikke_

[12:25] <cbreak> you can git rebase -i B

[12:25] <_ikke_> lericson: That was made up

[12:25] *** jutaro left
[12:26] <lericson> cbreak: That is very useful, thanks

[12:26] *** jutaro joined
[12:26] <cbreak> lericson: note that this will change your base

[12:26] *** ThePeach joined
[12:27] <cbreak> it will rebase onto B as well

[12:27] *** fermianyon left
[12:28] *** gavin_huang left
[12:29] *** ThePeach left
[12:32] *** ISF joined
[12:32] *** dv310p3r joined
[12:33] <lericson> cbreak: Slightly less useful then, and I should've known.

[12:35] *** crisp joined
[12:36] *** crisp left
[12:39] *** flaguy48 joined
[12:39] *** timonia joined
[12:39] *** innoying joined
[12:40] *** faber left
[12:41] *** martinjlowm left
[12:41] *** faber joined
[12:42] *** legnaleurc left
[12:43] *** OOPMan joined
[12:43] *** legnaleurc joined
[12:44] *** fisted_ joined
[12:44] *** klemenes joined
[12:46] <phil-adept> is back...

[12:46] *** fisted left
[12:49] *** acl_ joined
[12:49] *** bauruine left
[12:51] <_ikke_> old

[12:51] <_ikke_> hmm

[12:51] <_ikke_> That was totally random

[12:52] *** johnkpaul joined
[12:52] *** gerard0 left
[12:53] *** dv310p3r left
[12:53] *** nsussman joined
[12:55] *** danielpunt joined
[12:55] *** aidenhong left
[12:55] *** aidenhong joined
[12:59] *** matsebc left
[13:01] *** robde left
[13:02] *** cannonball joined
[13:03] *** sassyn left
[13:03] *** tomislater left
[13:03] *** cakehero joined
[13:03] *** beiter joined
[13:04] <amgarching> hi, how do I unstage changes?

[13:04] <FauxFaux> amgarching: git status tells you.

[13:06] <amgarching> ok, now I have one "unmerged" file. Conflicts have been resolved. How do I downgrade it to "Changed but not updated (modifiled)"?

[13:07] <_ikke_> amgarching: What have you executed?

[13:07] <amgarching> "git reset some files". I got this state after git stash/git merge/git stash pop

[13:08] <thiago> amgarching: git add

[13:08] <amgarching> no, I dont want to add these changes yet.

[13:08] <FauxFaux> Eeeevil merge!

[13:08] <_ikke_> !evil_merge

[13:08] <_ikke_> lol

[13:08] <thiago> amgarching: add them. Then un-add them.

[13:08] *** kenperkins left
[13:09] <thiago> amgarching: are you popping/applying a stashed change?

[13:09] *** neurodrone joined
[13:10] *** TomyLobo2 joined
[13:11] *** TomyLobo2 is now known as TomyLobo

[13:11] <diverdude> when i try to run this: sh -c "PATH=/home/git/bin:$PATH; gl-setup ~/rails.pub" i get this error: http://bin.cakephp.org/view/466190247   what am I missing?

[13:11] *** genjix left
[13:12] *** digitalfiz joined
[13:13] *** legnaleurc_ joined
[13:13] *** legnaleurc left
[13:13] *** johnkpaul left
[13:13] <FauxFaux> digitalfiz: I suspect line 8 is important.

[13:13] *** sh4rm4 joined
[13:14] <digitalfiz> line 8 is always important

[13:15] <diverdude> ENV GL_BINDIR not set ?

[13:15] *** t4nkd joined
[13:16] *** brijithmac joined
[13:16] *** [M]ax left
[13:16] *** brijithmac left
[13:17] <diverdude> FauxFaux: ?

[13:17] *** kmurph79 joined
[13:18] *** kmurph79 left
[13:18] *** [M]ax joined
[13:19] <jast> sitaram: you can add new triggers now

[13:19] <sitaram> jast: thanks :)

[13:20] <_ikke_> jast: Feature-request, see recently changed rules

[13:20] <xim1> When i do a git read-tree <revision>; git checkout -- and git commit --, does it mean that my branch now sits at the revision?

[13:20] *** berserkr joined
[13:20] *** subbyyy joined
[13:21] <jast> _ikke_: see what? :)

[13:22] <_ikke_> on the website

[13:23] *** Aktom joined
[13:23] <jast> _ikke_: sorry, I have no idea what you're talking about

[13:23] *** mxweas left
[13:23] *** legnaleurc_ left
[13:23] *** legnaleurc joined
[13:23] <_ikke_> jast: Sorry, should be a bit more clear. A page where you can see the most recent edits for the triggers for gitinfo

[13:24] <jast> oh

[13:24] <jast> right

[13:25] *** psoo left
[13:25] *** converge joined
[13:25] *** erichynds joined
[13:25] <phil-adept> one question guys....

[13:25] *** nzee left
[13:26] *** erichynds left
[13:26] *** erichynds joined
[13:26] <_ikke_> !ask

[13:26] <gitinfo> yes, it's okay to ask questions here... in fact, you just asked one! ;) Pretty much any question is fine. We're not terribly picky.

[13:27] *** flavius joined
[13:27] <phil-adept> I've just got msysgit and tortoise running. Just set my global config in git-bash and I've just created my first repo. I simply selected the working folder in my webroot and made that into a repo. Now htats the folder I dev from, was I right in doing this? or was I supposed to create a repo somewhere else and commit my working directory to that?...

[13:28] <jast> phil-adept: most people do use their development directory as the working tree for the repository, just like you are doing. as long as you're careful to not add temporary files, there isn't really any problem with that, anyway.

[13:28] *** Aktom left
[13:31] *** kmurph79 joined
[13:31] <diverdude> what is this command supposed to do? sudo -u git -H sh -c "PATH=/home/git/bin:$PATH; gl-setup ~/rails.pub"    will it make gitolite or do i have to do that before?

[13:32] *** tcurdt joined
[13:32] <_ikke_> diverdude: It executes as the user git

[13:32] *** legnaleurc left
[13:32] <_ikke_> diverdude: So that user should already exist afaik

[13:32] <diverdude> _ikke_: yeah it exists ok

[13:32] <diverdude> _ikke_: but i get this error when i run it: http://bin.cakephp.org/view/466190247

[13:33] *** jsick3 joined
[13:33] <_ikke_> Yeah, I read it

[13:34] <diverdude> _ikke_: it says i need to set GL_BINDIR...i suppose that means the gitolite bin dir...but there is no such dir

[13:34] <_ikke_> Not sure though

[13:34] *** Carmivore left
[13:34] <_ikke_> I've used this http://sitaramc.github.com/gitolite/index.html#qi

[13:34] *** t4nkd left
[13:34] *** Carmivore joined
[13:35] <phil-adept> Thanks jast! Now I've got a local repo set up and I seem to be able to use tortoise with it well. Now I want to setup a git on laptop as well so that I can work on my workstation and laptop. I pressume I run the same procedures in getting it working on there, but what do I do when I come to get the 2x machines to work together?

[13:35] *** legnaleurc joined
[13:35] *** converge left
[13:35] *** converge joined
[13:36] <EugeneKay> diverdude - what's your OS?

[13:36] <diverdude> _ikke_: yeah but i get the error when i run the gitolite/src/gl-system-install command

[13:36] <diverdude> EugeneKay: ubuntu 1010 serverED

[13:36] <jast> phil-adept: there are basically two ways. either you get a central repository hosted there and push/fetch to/from there from both local repositories, or you add the local repositories as remotes to each other (git remote add) and use something like git pull to merge changes from the other side

[13:36] *** ziro` left
[13:37] *** delight joined
[13:39] <diverdude> EugeneKay: any ideas?

[13:40] *** nicoulaj joined
[13:40] *** mxweas joined
[13:40] <EugeneKay> I did, but nope.

[13:41] <EugeneKay> I was gonna say that you should use the packaged version of gitolite, but it's 1.5.4 for 10.10.

[13:42] <FauxFaux> The newer package installs fine; and it's in debian-backports if you're using a serious distro.

[13:43] *** Spockz joined
[13:43] <diverdude> FauxFaux: serious distro?

[13:44] *** d0k joined
[13:44] *** Cromulent joined
[13:44] <diverdude> FauxFaux: i think you should try and go to the ubuntu channel and say ubuntu is not serious :=)

[13:45] *** matsebc joined
[13:45] <FauxFaux> I think you should try running a server for more than a few years. :)

[13:45] <EugeneKay> I think you girls should grow up.

[13:46] *** bartek_ joined
[13:46] *** omenar joined
[13:47] *** subbyyy left
[13:47] <phil-adept> jast: thanks for that fella! Will I need to use SSH between the remote local's?

[13:47] *** bartek_ left
[13:47] *** bartek joined
[13:47] <EugeneKay> phil-adept - only if they're on different systems

[13:47] <jast> phil-adept: it's usually the easiest way, though for anonymous fetch/pull you can also use git-daemon

[13:48] *** Cromulent left
[13:48] *** alberto56 joined
[13:48] *** matsebc left
[13:49] <phil-adept> eugene: different platforms / machines?. I want to keep my laptop and dev machine in sync

[13:49] <EugeneKay> Then definitely, SSH.

[13:49] <phil-adept> jast: can't that be done through tortoise then?

[13:50] <phil-adept> eugene: even though they're on the same private network? Configuring SSH seems like another pain in the arse!

[13:50] *** jameslordhz joined
[13:51] <jameslordhz> hi, all

[13:51] <EugeneKay> If you're trying to make a Windows box into a SSH server, yup. Every other platform is easy enough.

[13:51] <jameslordhz> i use git to  clone svn

[13:51] <phil-adept> ha ha... yeah I am... Always making things hard for myself

[13:51] <jameslordhz> now i want to get specific version of svn code, how to make it done

[13:52] <bremner> jameslordhz: you of course started by consulting man git-svn ?

[13:52] <gitinfo> jameslordhz: the git-svn manpage is available at http://jk.gs/git-svn.html

[13:53] *** dzonder joined
[13:53] *** solofight joined
[13:54] *** Jackneill joined
[13:54] *** Jackneill left
[13:54] *** Jackneill joined
[13:54] *** converge left
[13:54] *** andrewebdev joined
[13:55] *** t4nkd joined
[13:56] *** unreal joined
[13:56] <solofight> people cant i perform a checkout with anything other than commit id ?

[13:56] <solofight> i mean in the same branch

[13:56] *** jameslordhz left
[13:56] *** mxweas left
[13:56] * solofight wonders what other is unique

[13:57] <andrewebdev> conundrum (for me) ... on my latest 3 commits. I want to revert to the earliest commit, _but_ I want to keep changes made by the Last commit (skipping the one inbetween). Is this possible? What git command should I be googling?

[13:57] <charon> solofight: you have the wrong mental image of a branch. a branch is just a pointer (literally!) to its tip commit. a commit does *not* "know" which branch(es) it belongs to (though you can compute this information ad-hoc using git-branch).

[13:58] <charon> solofight: anyway, a more helpful answer might be: you can say X~N to get the N-th first-parent ancestor of the commit X, e.g., master~5 to get the commit 5 back from master's tip. see man gitrevisions for more ways to spell commits

[13:58] <gitinfo> solofight: the gitrevisions manpage is available at http://jk.gs/gitrevisions.html

[13:59] <solofight> charon: thank you

[14:00] *** tommyvyo_ joined
[14:00] *** legnaleurc left
[14:01] <charon> andrewebdev: can you clarify? you seem to have commits A,B,C and IIUC you want the net result to be A,C?

[14:01] <andrewebdev> charon, yes :)

[14:02] <charon> andrewebdev: use 'git rebase -i A^' and delete the line for B in the editor that pops up. note !rewriting_public_history

[14:02] <gitinfo> andrewebdev: Rewriting public history is a very bad idea.  Anyone else who may have pulled the old history will have to `git pull --rebase` and even worse things if they have tagged or branched, so you must publish your humiliation so they know what to do.  You will need to `git push -f` to force the push.  The server may not allow this.  See receive.denyNonFastForwards (git-config)

[14:02] *** dr_lepper left
[14:02] <EugeneKay> Have you pused ABC anywhere that somebody else might have seen it?

[14:02] <EugeneKay> pushed*

[14:02] *** matsebc joined
[14:03] *** legnaleurc joined
[14:03] *** glennpratt joined
[14:03] <andrewebdev> thanks, charon will keep that in mind

[14:04] *** AaronMT joined
[14:05] *** flavius left
[14:07] *** claudiu__ joined
[14:07] *** legnaleurc_ joined
[14:07] *** legnaleurc left
[14:10] *** Textmode joined
[14:11] *** empity joined
[14:12] *** robde joined
[14:13] *** Noxville joined
[14:13] *** legnaleurc_ left
[14:14] *** tommyvyo_ is now known as t0mmyvyo

[14:15] *** segher joined
[14:15] *** heptadecagram joined
[14:16] *** matthiaskrgr joined
[14:16] *** robde left
[14:17] *** legnaleurc joined
[14:17] *** neurodrone left
[14:18] *** solofight left
[14:19] *** fayimora left
[14:20] *** dv310p3r joined
[14:21] *** k299 joined
[14:21] *** boblet left
[14:21] *** k299 left
[14:22] *** boblet joined
[14:22] *** k299 joined
[14:23] *** legnaleurc left
[14:23] *** ilius left
[14:23] *** Prasad joined
[14:24] *** legnaleurc joined
[14:24] *** nvictor joined
[14:25] <nvictor> hey all

[14:25] <nvictor> what is an unmerge?

[14:25] <nvictor> and how can a git commit create one?

[14:25] <thiago> a commit should not

[14:26] <thiago> it was probably already in unmerged state before you committed

[14:26] *** Bass10 joined
[14:26] *** ASIRINeiluj left
[14:26] *** bauruine joined
[14:27] <nvictor> that is weird thiago

[14:27] <nvictor> i haven't seen that error before with what i was doing

[14:27] <nvictor> the only thing i changed was removing a git reset HEAD^ as suggested here yesterday

[14:27] <nvictor> tell me

[14:27] <nvictor> a git reset, does it undo a commit

[14:28] <nvictor> or unstage staged files? i'm really confused with what it does

[14:28] <thiago> no

[14:28] <FauxFaux> git reset does all kinds of things, please don't use it. :(

[14:28] <thiago> it moves the HEAD pointer to another commit

[14:28] *** aidenhong left
[14:28] *** aidenhong joined
[14:28] *** Targen joined
[14:28] <nvictor> ok

[14:29] <SethRobertson> usually

[14:29] <nvictor> and a cherry pick. does it change that pointer?

[14:29] <SethRobertson> In the sense that it creates a new commit which will be the new head, yes

[14:29] <SethRobertson> A completely different sense than git-reset does

[14:30] <nvictor> SethRobertson: i was told that

[14:30] *** Jackneill left
[14:30] <nvictor> because i was using the -n option, i should not bother with the git reset

[14:30] <nvictor> now those unmerge errors have started to appear

[14:30] <EugeneKay> Most commands move you forward. reset picks you up and drops you someplace else. rebase moves you diagonally.

[14:30] <cmn> cherry-pick -n doesn't create a commit, so it doesn't change HEAD

[14:30] <nvictor> oh hai cmn :)

[14:31] <nvictor> yep we discussed that yesterday

[14:31] <nvictor> but the thing is, i have not seen those unmerge errors till now

[14:31] <cmn> the unmerged entries error you get probably comes from the patch not applying cleanly

[14:31] <thiago> and cherry-pick -n might create unmerged files

[14:31] *** legnaleurc left
[14:31] *** maleknet left
[14:31] <nvictor> thiago: ah i see. how so?

[14:32] <nvictor> and how do i deal with it?

[14:32] <thiago> 12:31 < cmn> the unmerged entries error you get probably comes from the patch not applying cleanly

[14:32] *** codebeaker_ joined
[14:32] <SethRobertson> git status says?

[14:33] <nvictor> well, i guess what i need to so is find a commit (or merge) that yields to that error

[14:33] <nvictor> and manually get the status

[14:33] *** pidus left
[14:33] <SethRobertson> And read !book

[14:33] <gitinfo> 'Pro Git' is a complete book about git that is available online for free (there's a print version, too): http://progit.org/book/

[14:33] <cmn> what you need to do is solve the conflicts

[14:33] *** dougmencken joined
[14:33] <nvictor> so cherry pick creates patches?

[14:33] <cmn> in a way

[14:33] <dougmencken> guys, hello; I can't build the latest git: /root/build-farm/git-v1.7.9-rc0.builddir/gettext.c:115: undefined reference to `locale_charset'

[14:33] <dougmencken> http://pastebin.com/SfU3Gatg

[14:34] <SethRobertson> dougmencken: I recommend you build a release instead of the tip of the git branch, if you don'

[14:34] <SethRobertson> t know how to fix those sorts of problems

[14:35] <cmn> nvictor: what's your idea of a cherry-pick?

[14:35] <cmn> you seem surprised that it behaves like a patch

[14:36] <nvictor> cmn, i have no clear idea of a patch. but i thought cherry pick will take a commit ref and apply the changes

[14:36] *** fermianyon joined
[14:36] *** legnaleurc_ joined
[14:36] <thiago> that's what it does

[14:36] *** bauruine left
[14:36] <thiago> it takes the patch that was created with that commit and applies it to your current HEAD

[14:37] <nvictor> i see

[14:37] <nvictor> :)

[14:37] <cmn> yes, the differences between two commits is a patch

[14:37] <EugeneKay> It's akin to rebase, but from the opposite perspective.

[14:38] *** freimatz left
[14:40] *** amigojapan left
[14:40] <dougmencken> SethRobertson: I know how - by making a bug report, right? or by fixing it manually

[14:40] *** alan_w joined
[14:40] <dougmencken> from git blame gettext.c -- 5e9637c6 (Ævar Arnfjörð Bjarmason 2011-11-18 00:14:42 +0100 115)        charset = locale_charset();

[14:40] *** legnaleurc_ left
[14:42] <SethRobertson> Try a vetted release.  If that works, use it and file a bug report.  If the vetted release does not work, then your system needs some help (99% of the time)

[14:43] *** nsussman left
[14:43] <dougmencken> SethRobertson: I do have git-v1.7.7-431-g8963314 currently

[14:43] <FauxFaux> The first google result for your error is from bash(1), and it's "OS X is poopy; you need to work around their broken iconv".

[14:43] <SethRobertson> dougmencken: Yes, why don't you try 1.7.8.3

[14:43] <FauxFaux> i.e. it's a bug, get it fixed.

[14:43] *** legnaleurc joined
[14:43] <aro> how do i move a branch to my master?

[14:43] <dougmencken> FauxFaux: I'm on GNU/Linux, not OS X

[14:43] <FauxFaux> Zing!

[14:43] *** Phylock joined
[14:43] <SethRobertson> aro: Depends.  Do you want to merge your branch in?

[14:43] <aro> yes

[14:43] <cmn> dougmencken: your gettext might be too old

[14:43] <aro> there isnt anything in my master branch

[14:43] <SethRobertson> aro: Then `git checkout master; git merge mybranch` and read !book

[14:43] <gitinfo> aro: 'Pro Git' is a complete book about git that is available online for free (there's a print version, too): http://progit.org/book/

[14:43] *** astrostl joined
[14:43] <aro> i kept geting errors when i tried to commit to my master branch

[14:43] *** akamike joined
[14:43] <dougmencken> cmn: gettext-v0.18.1.1

[14:44] <SethRobertson> aro: Please define these errors

[14:44] <SethRobertson> aro: !repro

[14:44] <gitinfo> aro: please paste (e.g. using http://git.pastebin.com/) a transcript of your terminal session in which the problem occurred so that we can troubleshoot more easily.

[14:44] <dougmencken> I can of course try current git fro gettext git://git.savannah.gnu.org/gettext.git

[14:44] <SethRobertson> dougmencken: That is fine, or you can check out the correct tag

[14:45] <aro> http://pastebin.com/TVnh2dNc

[14:45] *** joshsmith joined
[14:48] *** mastro joined
[14:48] <cmn> my installation reports the same version, and it works here

[14:48] *** dorisabayon joined
[14:49] *** sebrock left
[14:49] <EricInBNE> anyone using gitblit?

[14:49] *** kanru left
[14:49] <cmn> are you trying to compile what's pointed to by the v1.7.9-rc0 tag?

[14:49] <SethRobertson> aro: That isn't an error when you commit to the master branch, that is an error when you try to push from the master branch

[14:50] <aro> what do you mean?

[14:50] *** OOPMan left
[14:50] *** spaceonline joined
[14:50] <SethRobertson> aro: I mean, the command you ran was `git push`, not `git commit`  Those are two different operations.

[14:50] *** nicoulaj left
[14:50] <dougmencken> okay, I'll try to build "released tarball" first (but I'm sure if it doesn't include commit  5e9637c6, it would work)

[14:51] *** district joined
[14:51] *** beautifulmind left
[14:51] <aro> dont you have to commit before you push?

[14:51] *** kermit left
[14:51] <aro> i thought push was move files to repository

[14:51] <SethRobertson> aro: So now we are talking about three different things:  merging branch to master, committing to master, and pushing from master.  Pick a problem and we can help you solve it.

[14:51] *** ziro` joined
[14:51] <SethRobertson> aro: push takes the commits you have made locally and moves them upstream (to github).  If you need to push, you have made local commits.

[14:54] *** Fandekasp left
[14:54] <SethRobertson> aro: Here is the process (in an abstract format, without arguments or discussions of what else you do at each stage):  `edit files; git add; git commit; git push`

[14:54] <dougmencken> by the way, maybe I must don't specify "--without-iconv"? (-DNO_ICONV)

[14:55] *** legnaleurc left
[14:55] <aro> why are commit and push two separate things

[14:55] <diverdude> arrg how can it be so hard to install gitolite

[14:55] *** mjessome joined
[14:55] <cmn> diverdude: it's usually done in 5 minutes

[14:55] <cmn> aro: because git is distributed

[14:56] <diverdude> cmn: i cant get the samn thing installed

[14:56] <bremner> diverdude: it depends if you are used to unix sysadmin or not.,

[14:56] *** legnaleurc joined
[14:56] <SethRobertson> aro: Are you quite sure you have read !book?  Please do.

[14:56] <gitinfo> aro: 'Pro Git' is a complete book about git that is available online for free (there's a print version, too): http://progit.org/book/

[14:56] *** dobby156 joined
[14:56] <wereHamster> and non-sysadmins shouldn't install server software anyway

[14:56] <dobby156> hi

[14:56] <SethRobertson> !hi

[14:56] <gitinfo> [!welcome] Welcome to this channel. Go ahead and ask your question. Very few people are responding to greetings, but will respond if a question is asked.

[14:56] *** jason237 joined
[14:56] <diverdude> bremner: i get this error: http://bin.cakephp.org/view/307746575

[14:56] <dobby156> quick question, I have made some changes to a branch, but rather than commiting them back to the branch I would like to put it in a new branch. thanks

[14:56] <m1sc> dobby156: !float

[14:56] <gitinfo> dobby156: If you have made a change in your working directory and have NOT YET COMMITTED, you may "float" that change over to another/new branch and commit it there.  If the files you changed differ between the current and target branches, the checkout will fail.  In that case, `git stash` then checkout, and `git stash apply` and go through normal conflict resolution.

[14:56] *** matsebc left
[14:56] *** mr_schlauch joined
[14:56] *** martinjlowm joined
[14:56] <cmn> and for the record, unless you've committed, your change isn't on any branch

[14:56] <dobby156> cmn: ok thanks

[14:56] <aro> why does git think my local instance is a master branch?

[14:56] <bremner> diverdude: looks like a syntax error in .gitolite.rc

[14:56] <dobby156> so how do I actually commit it to a new branch

[14:56] <EugeneKay> aro - because that's what the default branch name is

[14:56] <SethRobertson> aro: git does not.  You may have checked out the master branch, but that is different.

[14:56] <dougmencken> 1.7.8.3 builds without problems

[14:56] <cmn> aro: do mean "why do I have a branch named master in my repo"?

[14:56] <dougmencken>     AR xdiff/lib.a    LINK git-daemon    CC fast-import.o    LINK git-fast-import    CC imap-send.o ...

[14:56] <diverdude> bremner: hmmm where do i get a new .gitolite.rc?

[14:56] <aro> i jus twant to push files to github so other devs can sync from it

[14:56] <bremner> diverdude: did you edit the current one?

[14:56] <cmn> aro: other devs have also done the same thing, so now your changes have diverged from theirs

[14:56] <aro> what?

[14:56] <SethRobertson> aro: Sounds great.  That is a very different problem than what you said originally.  You probably need to `git pull`

[14:56] <diverdude> bremner: hmmm i might have accidently changed something when i opened it in vim (not on purpose)

[14:56] *** legnaleurc left
[14:56] <EugeneKay> dobby156 - 'git checkout -b newbranchname HEAD' will start newbranchname from where you are

[14:56] *** matsebc joined
[14:57] <diverdude> bremner: could i ask you to pastebin the content of your .gitolite.rc?

[14:57] <SethRobertson> aro: As the help message that git produced when you attempted to `git push` pointed you at a document told you

[14:57] <dobby156> EugeneKay: ah i see thank you.

[14:57] <aro> when i try to do a git pull, it tells me to specify a branch

[14:57] <EugeneKay> dobby156 - see also man git-branch

[14:57] <gitinfo> the git-branch manpage is available at http://jk.gs/git-branch.html

[14:58] <bremner> diverdude: just get one from the source.

[14:58] <EricInBNE> can i make git ignore a self signed server certificate?

[14:58] *** imaginativeone joined
[14:58] <SethRobertson> aro: What does `git branch -vv` say?  Please pastebin the command and output.  Also pastebin the command and output of `git pull`

[14:58] <EugeneKay> EricInBNE - er, you doing HTTPS fetching?

[14:59] *** legnaleurc joined
[14:59] *** johchri joined
[14:59] <EricInBNE> EugeneKay, and pushing

[15:00] *** DofLeFou left
[15:00] <EricInBNE> or so i hope

[15:00] <SethRobertson> EriclnBNE: man git-config.  Look for http.sslVerify and GIT_SSL_NO_VERIFY

[15:00] <gitinfo> EriclnBNE: the git-config manpage is available at http://jk.gs/git-config.html

[15:00] <avar> dougmencken: I wrote that i18n patch you're choking on, would you like some help with it?

[15:00] <dougmencken> avar: of course

[15:00] *** akamike left
[15:00] <EugeneKay> I'm more interested in where git does its CA checking

[15:01] <EugeneKay> Because that is.... interesting.

[15:01] *** IcePic joined
[15:01] <EricInBNE> I can get the cert easily enough from the URL but if I try to import it into my keychain (using DER export in chrome) it fails...any ideas?

[15:01] <FauxFaux> "It's libcurl's problem" is the standard answer to that kind of thing? :)

[15:01] <dougmencken> avar: it should at least not fail in the middle of make stage, but on configure, I suppose

[15:01] <SethRobertson> Really?  It is pretty boring actually.  It does it in libcurl

[15:01] <avar> dougmencken: So that error to me suggests that your libcharset.h may be broken. You're compiling it with HAVE_LIBCHARSET_H

[15:01] <avar> dougmencken: what platform/os is it?

[15:01] *** meego joined
[15:01] <dougmencken> avar: GNU/Linux@PowerPC

[15:02] <SethRobertson> EricInBNE: Try in PEM format.  That is what works for me.

[15:02] *** teweWORK left
[15:02] <avar> dougmencken: so what does this return; find /usr/include -name 'libcharset.h'

[15:02] <dougmencken> avar: libcharset.h just includes localcharset.h

[15:03] <SethRobertson> EricInBNE: And likewise set http.sslCAInfo and/or GIT_SSL_CAINFO

[15:03] <dougmencken> avar: /usr/include/libcharset.h of course :)

[15:03] *** meego left
[15:03] <dougmencken> avar: and localcharset.h just declares one thing: extern const char * locale_charset (void);

[15:04] <EugeneKay> Ah, so just the usual curl location, wherever that ends up being.

[15:04] *** ronan22 joined
[15:04] *** Gitzilla left
[15:04] <aro> http://pastebin.com/yTXsxNqX

[15:05] *** edude03 joined
[15:05] *** BryanWB joined
[15:05] *** marthinal joined
[15:05] <avar> dougmencken: that's bizarre

[15:06] <SethRobertson> aro: You have not set up a tracking relationship with your upstream.  `git branch master --set-upstream origin/master` is the typical one.

[15:06] <avar> dougmencken: hrm no, actually it's when you do the linking.

[15:06] <dougmencken> avar: bingo :)

[15:06] *** NAANET7 joined
[15:07] <avar> what distro / version is this?

[15:07] <dougmencken> self-built :/

[15:07] <SethRobertson> aro: I must say that is a bit peculiar.  Are other people using this repository?

[15:07] <dougmencken> readelf -s /usr/lib/libgettextlib.so | grep locale_charset -->    719: 0002e974  1020 FUNC    GLOBAL DEFAULT    9 locale_charset   2142: 0002e974  1020 FUNC    GLOBAL DEFAULT    9 locale_charset

[15:07] <aro> so on github, we have a dev branch with a ton of stuff in it, and an empty master branch - how do we move everything to master?

[15:07] <BryanWB> is there a way to merge in only a specific path from branch A into branch B?  I want to do something like   $ git merge HEAD..my_branch -- some_directory/with_multiple_subdirs/

[15:07] <aro> yes one other person

[15:07] <aro> we came from svn

[15:08] <avar> dougmencken: So I don't have libcharset, but from what I can see the assumption is that if you do the locale_charset() function will be in the C library.

[15:08] *** ph^ left
[15:08] <dougmencken> avar: it is inside /usr/lib/libgettextlib.so, see above

[15:08] <PerlJam> aro: I'd just delete the master branch (since it's empty anyway) and then rename the dev branch master.

[15:08] *** edude03 left
[15:08] <aro> ok

[15:09] <aro> how do i do that

[15:09] <cbreak> git branch -M foo master

[15:09] *** ramusara left
[15:09] <diverdude> bremner: when i then run the gl-setup command it writes: cp: cannot stat `/usr/share/gitolite/../src': No such file or directory and then it just hangs...i have no idea if its doing something or not

[15:09] <cbreak> diverdude: did you install gitolite?

[15:09] *** jameslord joined
[15:10] <diverdude> cbreak: thats what im trying to do

[15:10] <avar> dougmencken: do you know why your self-built thingy is different from other linuxen in 1) having libcharset.h 2) not having it in the C library

[15:11] <avar> Well, maybe 2) only applies for mingw

[15:11] <cbreak> did you follow http://sitaramc.github.com/gitolite/pictures.html#1000_words_installation_and_setup_?

[15:11] <dougmencken> avar: I'm using uClibc as a standard C library

[15:11] <dougmencken> avar: so the solution is just -lgettextlib ???

[15:11] *** shruggar left
[15:12] <avar> I think that depends, are you trying to build it with gettext support?

[15:12] *** v0n joined
[15:12] <dougmencken> avar: it is by default, I suppose :)

[15:12] <avar> I think this might work:

[15:12] <SethRobertson> avar: Sounds like you should probably autoconf that support

[15:12] *** kanru joined
[15:13] <avar> make HAVE_LIBCHARSET_H= LIBC_CONTAINS_LIBINTL=

[15:13] <avar> the latter will be true by default on linux, but git' by-and-large means "linux with glibc"

[15:13] *** rpg joined
[15:13] <dougmencken> avar: okay, trying it now

[15:13] <avar> SethRobertson: right, this could all be done with more probes.

[15:13] *** ytre4k0 joined
[15:14] <dougmencken> nano BUILDCMDS/buildcmds-git

[15:14] *** ytre4k0 left
[15:14] <dougmencken> oops :)

[15:14] *** valtih_ joined
[15:14] <cbreak> diverdude: -> http://sitaramc.github.com/gitolite/root.html

[15:14] <cbreak> or similar

[15:14] *** Raging_Hog joined
[15:14] *** wbednarski left
[15:16] <aro> how do i delete a branch

[15:17] *** shruggar joined
[15:17] <Hapz> git branch -D

[15:17] *** mandric joined
[15:17] <cbreak> surprise!

[15:17] *** fermianyon left
[15:17] <Hapz> (-D will remove it even if its not merged yet)

[15:17] <aro> how do i remove it from github too

[15:17] *** valtih left
[15:17] <cbreak> git push --delete

[15:17] <cmn> push --delete

[15:18] <cbreak> or git push :branchname

[15:18] <aro> it says --delete doesnt make sense without any refs

[15:18] <cbreak> it doesn't

[15:18] <Hapz> well put the branch name there lol

[15:18] *** TeckniX joined
[15:18] <cmn> right

[15:18] <cbreak> is it parrot day? :)

[15:18] *** Gitzilla joined
[15:18] <cbreak> just copying the commands we propose won't work usually :)

[15:18] *** inad922 joined
[15:19] <inad922> hello

[15:19] *** axl_ joined
[15:19] *** Cromulent joined
[15:19] <inad922> Anyone knows how can I chnage the status of a merged file to unmerged if I used the mergetool command for merging?

[15:19] *** airborn joined
[15:19] <cbreak> inad922: man git-checkout

[15:19] <gitinfo> inad922: the git-checkout manpage is available at http://jk.gs/git-checkout.html

[15:20] *** converge joined
[15:20] <cbreak> look for --merge

[15:20] <inad922> ok. Thanks cbreak

[15:20] <jast> that doesn't actually re-merge the file

[15:20] <cbreak> no, it re-conflicts them

[15:20] <jast> not really

[15:21] *** converge left
[15:21] <Mikachu> doesn't he want --conflict?

[15:21] <jast> it doesn't look at MERGE_HEAD or anything

[15:21] *** beaufour joined
[15:21] *** neurodrone joined
[15:21] <cbreak> jast: man page says "When checking out paths from the index, this option lets you recreate the conflicted merge in the specified paths."

[15:21] <jast> it switches branches and performs a merge between current branch and target branch

[15:21] <Mikachu> ah, those are the same

[15:21] *** gerard0 joined
[15:21] <inad922> Mikachu: If I issue --conflict and rerun mergetool does it think the file still needs a merge?

[15:21] *** dorisabayon left
[15:21] <jast> hmm

[15:21] *** asakura joined
[15:21] <cbreak> jast: so if your git doesn't do that

[15:21] *** phishy joined
[15:21] <Mikachu> oh i didn't read enough

[15:21] <cbreak> then it's broken :)

[15:21] <avar> dougmencken: Anyway could you poke me in #git-devel

[15:22] <avar> not very active here, and I'm supposedly at work.

[15:22] <Mikachu> inad922: do you mean conflicted to unconflicted?

[15:22] <jast> cbreak: my understanding was that it re-combines the existing stages in the index... but if you have already marked the file as merged, the stages don't exist anymore

[15:22] *** matsebc left
[15:22] <dougmencken> avar: nope, with these vars for make it doesn't work

[15:22] <dougmencken> ah okay

[15:22] <diverdude> cbreak: yes, and this happens in step #4

[15:22] <cbreak> jast: no idea. My merges don't conflict. I've never tried it :)

[15:22] *** matsebc joined
[15:23] *** savid joined
[15:23] <inad922> Mikachu: I merged 2 branches and there were some conflicting files. Which  I resolved with  a mergetool. But one of the files is resolved in a wrong way and I would like to make git think it still needs merging.

[15:23] <cbreak> diverdude: you've used the root method?

[15:23] <cbreak> to the default install paths?

[15:23] <inad922> I know there is a way to do that I just don't know what the name of the command s

[15:23] <inad922> or the exact expression

[15:23] <Mikachu> git merge-file

[15:24] <cbreak> inad922: try git checkout --merge -- filename

[15:24] <cbreak> inad922: if that doesn't work, tell us :)

[15:24] <Mikachu> or maybe not

[15:24] <jast> inad922: git update-index --unresolve

[15:24] <inad922> jast

[15:24] <cbreak> jast: will that actually change the files?

[15:24] <Mikachu> doesn't he need to know the hash of the entries that were in the index?

[15:24] <inad922> you're the winner

[15:25] <jast> I doubt it re-creates the stages with the original contents, though

[15:25] <jast> cbreak: just the index entry

[15:25] <cbreak> yeah, so you're better off using --merge

[15:25] <diverdude> cbreak: yeah and then i get this output: http://bin.cakephp.org/view/137438095

[15:25] <jast> cbreak: I don't think he asked for getting the files changed

[15:25] *** timonia left
[15:26] <cbreak> it will "recreate the conflicted merge in the specified paths."

[15:26] *** koo4 left
[15:26] <cbreak> he said he's not sure if he resolved correctly

[15:26] <cbreak> so I thought he wants to try again

[15:26] <cbreak> with the original conflict state

[15:26] <jast> no, he said he knew it wasn't resolved correctly :)

[15:27] *** beatak joined
[15:27] <cbreak> diverdude: what did you type exactly?

[15:27] <cbreak> diverdude: from the part where you git cloned gitolite

[15:27] *** koo4 joined
[15:27] <inad922> cbreak: Yeah I guess you're right but actually I didn't phrase the situation well. All I wanted is to be able to rerun the mergetool so I could see the version of the file from the other commit

[15:27] *** tomislater joined
[15:27] <cbreak> oh, that's easy, you don't need mergetool for that

[15:28] *** jjasinski joined
[15:29] *** niloc132_ joined
[15:29] *** _AlbireoX joined
[15:29] <cbreak> diverdude: I suspect you installed something wrong, and then typed the wrong command. Because gitolite won't talk about gitosis.

[15:30] *** dfr|mac joined
[15:30] <diverdude> cbreak: logged on as git i did touch .bashrc, added export=/home/git/bin:$PATH to it, gitolite/src/gl-system-install, su -git, gl-setup rails.pub

[15:30] <aro> so to delete repos on githib, i have to do it locally?

[15:30] *** niloc132_ left
[15:31] <cmn> no

[15:31] <jast> aro: if you want to delete the whole repository on github, you can do that via their web interface

[15:31] <sitaram> cbreak: that message comes from a "lint" program that has recently been put into gl-setup itself (in order to catch some kinds of errors early).  It looks like there were gitosis keys or at least a gitosis line sitting around in the authkeys file

[15:31] <cmn> to delete a repo on github you go to github and delete the repo

[15:31] *** jaequery joined
[15:31] <aro> what about merging?

[15:31] <jast> aro: what does merging have to do with deleting a repository?

[15:31] *** kukks joined
[15:31] <aro> nothing, i am just asking

[15:31] *** t4nkd left
[15:31] <cmn> git operates locally

[15:32] <jast> so what about merging, then? :) I have no idea what you're asking

[15:32] <aro> read up

[15:32] <cbreak> diverdude: that looks wrong

[15:32] <cbreak> you need to be root for the root install

[15:32] *** Internet13 joined
[15:32] *** z0n3d joined
[15:32] <cbreak> also, you don't need to export anything

[15:33] *** jceb joined
[15:33] *** AmirBehzad left
[15:33] <diverdude> cbreak: so i should clone as root ?

[15:33] <diverdude> meaning i do sudo -i as the first thing

[15:33] <sitaram> diverdude: 'export=/home/git/bin:$PATH' ??

[15:33] <jast> that makes no sense

[15:33] <sitaram> shouldn't that be 'export PATH=...'?

[15:33] *** savid left
[15:34] <jast> and you need to be root to run the gl-system-install script, I'm pretty sure

[15:34] <sitaram> jast: not really, the most common install mode (other than RPM/DEB) is pure-user install

[15:34] <cbreak> you can do a non-rot install too

[15:34] <cbreak> but diver said above he was using the root method when I asked

[15:34] <cbreak> but it looks like he didn't after all

[15:35] <diverdude> cbreak: but to become root i do sudo -i right?

[15:35] <sitaram> cbreak: do you realise he's following instructions from something called gitlab?

[15:35] <cbreak> sitaram: he's not, I asked him if he follows your instructions

[15:35] <cbreak> and he said he is

[15:35] <sitaram> oh ok

[15:35] <sitaram> I prolly missed that, cbreak

[15:35] <cbreak> diverdude: sudo -s

[15:35] *** dotpot` joined
[15:36] <cbreak> but if I was you, I'd remove all the debries you probably installed in random locations already first :)

[15:36] *** kermit joined
[15:36] *** inad922 left
[15:37] <sitaram> including the ssh keys in ~/.ssh/authorized_keys

[15:37] <sitaram> the gitosis keys I mean, and the gitosis lines

[15:37] <jast> gah! wireless networking is the spawn of the devil

[15:37] * cbreak would rm -rf the whole git user folder and recreate the user

[15:38] * sitaram nods

[15:38] *** pidus joined
[15:38] <cbreak> jast: how so? You can have an air-gapped SCADA high security nuclear power plant management system and still read slashdot on the net

[15:38] <jast> I'm sure there's a perfectly reasonable explanation why my wireless connection keeps dropping randomly

[15:38] *** centipedefarmer joined
[15:38] <cbreak> WLan?

[15:38] <jast> in fact this explanation is in the logfiles: reason=4

[15:38] <jast> thank you for the verbosity, wpasupplicant and friends

[15:38] <cbreak> maybe the frequency spectrum is occupied by other things. Or the distance is too big.

[15:38] <aro> how do i reset a local git working copy?

[15:39] <jast> the distance is roughly 10 meters

[15:39] *** dotpot left
[15:39] <cbreak> aro: reset to what?

[15:39] <cmn> aro: reset in what way and from what to what?

[15:39] <aro> im going to delete all my repos on github and reimport since i cant figure out how to move dev to master

[15:39] <aro> like remove any kind of git association with it

[15:39] <jast> signal level -51 dBm sounds okay to me, anyway

[15:39] <aro> so its not thinking its a branch

[15:39] <cbreak> aro: what are you talking about?

[15:40] *** cenuij left
[15:40] <cbreak> what should not think that what is a branch?

[15:40] <aro> my local instance

[15:40] <aro> it thinks its master

[15:40] <cbreak> no

[15:40] <aro> but will only commit to my dev branch

[15:40] <cbreak> it thinks it has master

[15:40] <cbreak> which is normal

[15:40] <cbreak> master is the default branch in git repositories

[15:41] <cbreak> you want to remove the master branch?

[15:41] <aro> yes

[15:41] <cbreak> just git branch -D master

[15:41] <cbreak> and it's gone

[15:41] <aro> error: Cannot delete the branch 'master' which you are currently on.

[15:41] <cbreak> so, you are on it.

[15:41] <cmn> so go to another branch

[15:41] <cbreak> switch to a different branch...

[15:41] <aro> how?

[15:42] <cbreak> git checkout

[15:42] <lb> git checkout -b branchname

[15:42] <cbreak> nah

[15:42] <cbreak> no -b

[15:42] <aro> what will that do?

[15:42] <lb> git checkout (-b) branchname

[15:42] <cbreak> it will check out a different branch.

[15:42] <lb> create a new branch with that name

[15:42] <cbreak> with -b it will create a new branch that is like your master

[15:42] <cbreak> but since you want to delete it, that's kind of dumb

[15:43] <cbreak> without -b, it'll switch to the branch you tell it to

[15:43] <lb> point taken

[15:43] *** Targen left
[15:43] <cbreak> you said you only worked on the dev branch

[15:43] <cbreak> how the hell do you work on the dev branch without having it checked out?

[15:43] <aro> i have no idea

[15:43] *** axl_ left
[15:43] <aro> ive done something wrong

[15:44] <cbreak> you know what I think?

[15:44] <cbreak> I think you worked on the master branch :)

[15:44] *** axl_ joined
[15:44] <cbreak> and not on the dev branch.

[15:44] <aro> so how do i fix things?

[15:45] <cbreak> find out what you did.

[15:45] *** robde joined
[15:45] <cbreak> you can't fix anything without knowing what's wrong.

[15:45] *** kenperkins joined
[15:45] <aro> i have my local source code, cant i just delete the repos and start over?

[15:46] <cmn> if you don't know how you got to where you are, you'll probably just get to the same state

[15:46] *** canton7 left
[15:46] <cbreak> the source code isn't important

[15:46] <cbreak> git has that for ever

[15:46] *** klemenes left
[15:47] <cbreak> the history is what you will lose

[15:47] <aro> this is only the very first commit

[15:47] <cbreak> well.

[15:47] <aro> so there is no history

[15:47] <cbreak> if you want to make a completely new repository

[15:47] <aro> so its ok

[15:47] <cbreak> just rm -rf .git

[15:47] <cbreak> then you can git init again

[15:48] <aro> k its working

[15:48] <aro> i mean

[15:48] <aro> thinking

[15:49] *** TD joined
[15:49] *** jaequery left
[15:49] *** h0bbit left
[15:49] <aro> what format do the entries in .gitignore have to be to ignore directories recursively?

[15:49] *** robde left
[15:49] *** cilly joined
[15:50] <cbreak> aro: just the name

[15:50] *** jameslord1 joined
[15:50] <TD> hi, i have got myself into a pickle. i have a branch on which a commit has "gone missing". i can see it in the log, i can use "git log --follow -p -- ..." on a file that was added in that commit and I see it being added twice (in two different commits somehow) ... but at head, it's gone. i can't figure out where it disappeared.

[15:50] *** robde joined
[15:50] *** jameslord left
[15:50] *** flijten left
[15:51] <TD> i thought that i'd be able to see it being deleted in a "git log", but no such luck

[15:51] <talexb> TD That might be a detached commit .. can you use gitk to mavigate to that commit?

[15:51] <cbreak> TD: what is gone?

[15:51] <TD> better

[15:51] <TD> http://code.google.com/r/hearn-bitcoinj/source/list

[15:51] <TD> it's public

[15:51] <TD> if you look for the commits "support parsing and signature checking of alert messages" and "set length field to fix a unit test", they are somehow identical (the second is not supposed to be)

[15:52] <TD> they both add a file called AlertMessage.java

[15:52] <cbreak> sha please

[15:52] <TD> at head, it's vanished. note that i just merged from the 'master' branch, and it's still there

[15:52] <TD> 10c936c6019c

[15:52] <talexb> I think if you go to that commit, then create a branch there, the commit should then be reachable.

[15:52] <cbreak> the commit is already reachable

[15:52] <TD> well, i can see the diffs, so i can just re-create it with diff and patch. but i don't understand how it happened that this file vanished

[15:52] <TD> yet i cannot find any commit that removed it

[15:53] <cmn> git log --filter-diff=D -- file ?

[15:53] <TD> it must have gone during a merge, but i just merged with master and the change isn't there

[15:53] <aro> cbreak: does it need to be directory/ or directory

[15:53] <cbreak> the latter will do

[15:53] <TD> cmn: i have version 1.7.4.1 and it seems it doesn't know about that switch

[15:53] <aro> ok cool

[15:54] <TD> cmn: but if i don't use --follow, it prints nothing. if i do, it shows the file being added twice

[15:54] <TD> cmn: and nothing else

[15:54] <cbreak> TD: up for some experimenting? :)

[15:54] *** spiette joined
[15:54] <TD> hrmm :/

[15:54] <TD> i guess so

[15:55] <cmn> it looks like it might be --diff-filter

[15:55] *** robde left
[15:55] <cbreak> TD: take a look at 31d22fc0e76e

[15:55] *** aspotashev joined
[15:55] *** kmurph79 left
[15:55] *** aneesh joined
[15:55] <TD> cmn: that works but prints nothing

[15:55] <cbreak> git checkout it if you want

[15:55] <cbreak> do you see the file? No?

[15:55] *** Kromack joined
[15:55] <cbreak> in this case, the merge conflict was resolved by removing the file.

[15:56] <TD> ok, i see the file

[15:56] <TD> at that commit

[15:56] <TD> i don't think the file was just deleted by itself. the entire commit is gone at head, including the code that used that file

[15:56] *** mdel left
[15:56] <cbreak> no

[15:56] *** cenuij joined
[15:56] *** cenuij left
[15:56] *** cenuij joined
[15:56] <cbreak> the commit is obviously there

[15:57] *** mdel_ joined
[15:57] <TD> well, it's there at that point

[15:57] *** swombat joined
[15:57] <TD> it got rolled back at some point. i'm just not sure where.

[15:57] <TD> must be some other merge

[15:58] <cbreak> TD: I can see http://code.google.com/r/hearn-bitcoinj/source/browse/#git%2Fsrc%2Fcom%2Fgoogle%2Fbitcoin%2Fcore

[15:58] <cbreak> AlertMessage is there

[15:58] <TD> that's master

[15:58] <cbreak> of course it is

[15:58] *** queequeg1 joined
[15:58] <TD> the issue is on the pending-tx branch

[15:58] <TD> if you use the picker to switch branches, it's gone

[15:58] *** aidenhong left
[15:58] *** nzee joined
[15:58] <TD> (annoyingly, switching to "changes" view resets you back to master, gotta select from the dropdown again)

[15:59] <Kromack> Hi, I have a linux server with Git installed for my office and I want to create a git repository on this local server in order to work with all our developpers. Actually I want a git based SVN-like repository. I've tested many ways to create the repository but none of them fully works. Anybody could telle me with wich command I have to create the repository ?

[15:59] <cmn> svn-like?

[15:59] <cbreak> TD: pending-tx doesn't have that commit

[15:59] *** _7nb left
[15:59] <cbreak> seems it was not merged

[15:59] <cmn> Kromack: you probably want to take a look at !gitorious

[15:59] <cmn> sorry, !gitolite

[15:59] <gitinfo> sorry: gitolite allows you to host any number of repositories with extensive access control options for any number of users, using just one system account: http://github.com/sitaramc/gitolite

[15:59] <TD> cbreak: http://code.google.com/r/hearn-bitcoinj/source/list?name=pending-tx&r=3023f2a4c5dac77875fdbda6cf1f6bcaea158a77&r=464b528175dc421422f91b3c60a6b3cc06a60c93&r=10c936c6019c7c05e4cc30f9c8d0597899b9fc7f&r=075602aafd383229eb364ee7d0a4c93ccaea4066&r=57d26107ded28b8d4ddea010c87683a8e1e1b674

[16:00] *** luxurymode joined
[16:00] <TD> cbreak: i see it as commit 10c936c6019c

[16:00] <TD> i'm not sure how they ended up with different hashes

[16:00] *** harshpb left
[16:00] <TD> oh wait never mind

[16:01] <TD> they are the same commit. i just checked out the merge

[16:01] <cbreak> TD: I am looking at the pending-tx branch

[16:01] <TD> not the change itself

[16:01] *** robde joined
[16:01] <cbreak> and it it looks different from the one in your link

[16:01] <cbreak> TD: http://code.google.com/r/hearn-bitcoinj/source/list?name=pending-tx

[16:01] <TD> yeah. i'm looking at that one. if you click "older" it's there

[16:02] *** johnanderson joined
[16:02] <cbreak> oh... multi page ui

[16:02] <cbreak> so it is there

[16:02] <cbreak> and you say it's missing?

[16:02] <Kromack> Sorry, but it's not possible to make a collaborative repository with Git ?

[16:03] <Kromack> Ok I'm going to try gitolite

[16:03] <Kromack> thanks

[16:03] <TD> Kromack: it is. the git book has instructions on how to do this: http://git.or.cz/course/svn.html

[16:03] <dobby156> grrr, I am trying to access a remote repo, so i do "git fetch origin merged"

[16:03] <dobby156> then I do "get checkout merged"

[16:03] <dobby156> but thta doesn't work

[16:03] <TD> cbreak: well, i see the commit in the "changes" view and not at head. one thing i don't know how to interpret that is probably important

[16:03] *** jzellman joined
[16:03] <dobby156> i get error: pathspec 'merged' did not match any file(s) known to git.

[16:03] *** ehsan joined
[16:03] <TD> cbreak: the line that has that commit ends. it never merges leftwards

[16:03] <cbreak> TD: do you have a clone?

[16:03] *** tblamer joined
[16:04] <cmn> dobby156: checkout -b merged FETCH_HEAD

[16:04] <TD> cbreak: yeah i have a local clone of this code.google.com repo

[16:04] <cbreak> dobby156: git fetch origin

[16:04] <TD> http://code.google.com/r/hearn-bitcoinj/source/list?name=pending-tx&r=3023f2a4c5dac77875fdbda6cf1f6bcaea158a77&r=464b528175dc421422f91b3c60a6b3cc06a60c93&r=10c936c6019c7c05e4cc30f9c8d0597899b9fc7f&r=075602aafd383229eb364ee7d0a4c93ccaea4066&r=57d26107ded28b8d4ddea010c87683a8e1e1b674

[16:04] <TD> on that page, you can see it ends on "Rework how event listeners are called"

[16:04] <TD> i don't know why

[16:04] <cmn> dobby156: 'git fetch origin merged' tells git to grab the merged branch on origin and store it as FETCH_HEAD

[16:04] <cbreak> dobby156: followed by git checkout -t origin/merged

[16:04] <cbreak> that'll give you tracking info

[16:05] <cbreak> TD: can you look at it in the clone?

[16:05] <TD> bummer. it seems all the commits on that "line" have vanished

[16:05] <cbreak> TD: git branch --contains 10c936c6019c

[16:05] <TD> i must have messed something up at some point

[16:05] <TD> cbreak: should i check myself back to the pending-tx branch or stay on the detached head before doing that ?

[16:05] *** ScottE joined
[16:05] <cbreak> doesn't matter for this command

[16:06] <cbreak> if you type git branch, you get pending-tx and master, right?

[16:06] *** dfr|mac left
[16:06] <TD> yeah

[16:06] <TD> and also "no branch"

[16:06] <TD> because of the detached head

[16:06] *** xim1 left
[16:06] <TD> if i run the --contains command, i see the same thing as if i run just "git branch" by itself (a printout of my branches)

[16:07] <TD> with a * by (no branch)

[16:07] <cbreak> well, it only prints the branches that contain that commit

[16:07] <TD> so i guess every branch contains it

[16:07] <TD> it must have become unreachable from head somehow

[16:07] <TD> i guess that's what the terminating line means :(

[16:07] <cbreak> git checkout pending-tx should get  you onto that pending branch

[16:07] <cbreak> TD: no

[16:08] <cbreak> --contains implies reachability

[16:08] <TD> hmm

[16:08] <cbreak> anyway, when you're back on the branch, git log pending-tx --oneline --decorate --graph

[16:08] <cbreak> then you should see a scrollable list of commits

[16:09] <TD> yup

[16:09] <cbreak> all are on the pending-tx branch

[16:09] <TD> shall i pastebin it ?

[16:09] <cbreak> scroll down until you find the one you miss

[16:09] <TD> ok, i see it.

[16:09] <TD> damn, this diagram is a mess

[16:09] *** aro left
[16:09] *** Sitethief left
[16:09] *** sykop5am left
[16:09] *** Destos joined
[16:09] *** brian_g left
[16:10] *** Cromulent left
[16:10] *** kenperkins left
[16:10] *** Silowyi joined
[16:10] *** alvaro_o joined
[16:11] *** nzee left
[16:11] <TD> http://pastebin.com/Nq6VDcZm

[16:11] *** alvaro_o left
[16:12] <TD> so it was merged from (i think) a topic branch just for that commit to master, then from master to pending-tx.

[16:13] <TD> it looks like somehow a merge commit got combined with a regular non-merge commit

[16:13] *** Spockz` left
[16:13] <cbreak> they were merged in 56489f9

[16:14] *** brian_g joined
[16:15] <cbreak> and then again on caefea1

[16:15] *** jryans joined
[16:16] <TD> i don't see any "end of line" branch lines in this diagram

[16:16] <cbreak> and the file is still there in the newest commit

[16:16] <cbreak> so?

[16:16] <TD> it's different to the one on google code

[16:17] <TD> http://code.google.com/r/hearn-bitcoinj/source/list?name=pending-tx&r=3023f2a4c5dac77875fdbda6cf1f6bcaea158a77&r=464b528175dc421422f91b3c60a6b3cc06a60c93&r=10c936c6019c7c05e4cc30f9c8d0597899b9fc7f&r=075602aafd383229eb364ee7d0a4c93ccaea4066&r=57d26107ded28b8d4ddea010c87683a8e1e1b674

[16:17] <TD> at commit 3023f2a4c5da the line stops

[16:17] <TD> the commits that only appear on that line, aren't there in my head. it's not just that file that's missing. 471c25ae is gone too

[16:17] *** cccaldas left
[16:18] <cbreak> maybe google's UI is terrible

[16:18] *** stringoO joined
[16:18] <TD> could be

[16:18] <offby1> heck, github's UI is confusing

[16:18] <cbreak> 3ec0120 is the followup commit for that 3ec0120

[16:18] *** batlock666 left
[16:19] <cbreak> and why do you think it's gone?

[16:19] <cbreak> if --contains says it's there

[16:19] <cbreak> then it is there

[16:19] *** dougmencken left
[16:19] <cbreak> git log A only shows commits reachable from A

[16:20] *** Destos left
[16:20] *** steveoliver joined
[16:20] *** Destos joined
[16:20] *** t4nkd joined
[16:20] *** Cromulent joined
[16:20] <TD> because the code clearly isn't at head. the changes the commit contains, aren't there

[16:21] <cbreak> doesn't matter

[16:21] <cbreak> the commits are there

[16:21] *** aidenhong joined
[16:21] <cbreak> so if the code is not as you expect, then look at the history to see why

[16:21] <cbreak> probably someone reverted the changes

[16:21] *** petisnnake joined
[16:21] <TD> i'm the only one working on this branch, and if it'd been reverted, i should be able to find the commit that did it

[16:21] <TD> that i cannot do

[16:21] <petisnnake> Hi, how can I see a list of remote branches that I added to git?

[16:22] <TD> "git log --follow -- ..../alertmessage.java" shows it being added twice

[16:22] <TD> no deletes. no renames.

[16:22] <TD> yet the file is not there at head

[16:22] <cbreak> it is there

[16:22] *** nvictor left
[16:22] <cbreak> I looked at ca0047900099

[16:22] <cbreak> it's there

[16:23] *** tblamer left
[16:23] *** nzee joined
[16:23] <cbreak> hmm.

[16:23] <cbreak> maybe google is broken

[16:24] *** umren left
[16:24] *** umren joined
[16:24] <TD> how do i make git print the commit i'm currently at

[16:24] <thiago> git rev-parse HEAD

[16:25] *** tblamer joined
[16:25] <TD> ok, this is what i see

[16:25] <TD> hearn-macbookpro:bitcoinj hearn$ git rev-parse HEAD

[16:25] <TD> ca0047900099c27e44774847636bf74aa94f2841

[16:25] <TD> hearn-macbookpro:bitcoinj hearn$ ls src/com/google/bitcoin/core/AlertMessage.java

[16:25] <TD> ls: src/com/google/bitcoin/core/AlertMessage.java: No such file or directory

[16:25] <TD> git may claim the commit is there. but the end result of that commit clearly is not

[16:25] *** kevwil joined
[16:25] <cbreak> I clicked on the ca00 commit

[16:25] <cbreak> then I clicked browse

[16:26] <cbreak> then I browsed to the directory

[16:26] <cbreak> and it showed the file

[16:26] <thiago> TD: I think git is right and your expectation is wrong

[16:26] <thiago> TD: git status. Does it say anything about that particular file?

[16:26] <TD> nope

[16:26] *** ChrisAnn left
[16:26] <thiago> TD: git whatchanged -- src/com/google/bitcoin/core/AlertMessage.java

[16:26] <thiago> TD: does the last commit shown indicate the file was deleted?

[16:26] <TD> no

[16:27] *** aidenhong left
[16:27] *** aidenhong joined
[16:27] <thiago> TD: git show HEAD:src/com/google/bitcoin/core/AlertMessage.java

[16:27] <TD> http://pastebin.com/JXZQ32LE

[16:27] <TD> $ git show HEAD:src/com/google/bitcoin/core/AlertMessage.java

[16:27] <TD> fatal: Path 'src/com/google/bitcoin/core/AlertMessage.java' does not exist in 'HEAD'

[16:27] <thiago> hmm... interesting

[16:28] <cbreak> so, this google page is a pain

[16:28] <cbreak> I found what happened

[16:28] *** aspotashev left
[16:28] *** danols_work joined
[16:28] <danols_work> hi there

[16:28] <thiago> TD: git log --name-status and scan for the file

[16:29] <TD> cbreak: what happened?

[16:29] <danols_work> i need someone to help me keep my sanity --- I unfortunatly don't get it and spent an entire friday trying to resolve it

[16:29] <danols_work> I need to 'cherry' pick from a branch that is 'after' my branch

[16:29] <danols_work> https://github.com/shaunsephton/django-ckeditor/network

[16:29] <danols_work> i'm danols, and need to pick from sepow branch

[16:29] <TD> thiago: the last message is 31d22fc0e76ec7d8eccc0ff4c5d5249d8b90f136: Merge remote-tracking branch 'origin/master'. Conflicts: src/com/google/bitcoin/core/AlertMessage.java

[16:29] <cbreak> TD: seems it was removed in 56489f9fc60c

[16:29] <TD> or rather first message

[16:29] <thiago> TD: does it say what happened to the file?

[16:30] <TD> cbreak: hmm

[16:30] <cbreak> some guy named Mike merged two branches

[16:30] <TD> cbreak: doing a "git show" on that commit shows a double diff

[16:30] <cbreak> and made the merge commit with a custome error message

[16:30] <cbreak> TD: it's a merge commit

[16:30] <cbreak> it has two parents

[16:30] <cbreak> so it has two diffs

[16:30] <TD> ok

[16:31] *** nrichards joined
[16:31] <TD> i don't see where the file was deleted in that diff though. the string "AlertMessage" doesn't appear in the output of "git show 56489f9fc60c"

[16:31] *** steveoliver left
[16:31] <cbreak> well

[16:31] <thiago> TD: add --cc to the show and log

[16:31] <cbreak> 56489f9fc60c doesn't have the file

[16:31] <cbreak> its parent does

[16:31] *** aidenhong left
[16:31] <thiago> danols_work: we're waiting for you to tell us where things didn't work

[16:31] <cbreak> parent being 234090e5a6aa

[16:31] <wereHamster> cbreak: was that an evil merge?

[16:32] <cbreak> TD: so git diff 234090e5a6aa 56489f9fc60c should show it

[16:32] <cbreak> wereHamster: I think it was

[16:32] <cbreak> this google web UI is terrible

[16:32] <TD> cbreak: yes, it shows the file being removed. so how comes i don't see the removal when i do a show of 56489f9fc60c

[16:33] <cbreak> it's a merge commit

[16:33] <cbreak> they don't have useful diffs by default

[16:33] *** danols_work left
[16:34] *** danols_work joined
[16:34] <cbreak> you can look at git diff 56489f9fc60c^1 56489f9fc60c and git diff 56489f9fc60c^2 56489f9fc60c to see both diffs

[16:34] <danols_work> shoot sorry lost internet connection

[16:34] *** jryans_ joined
[16:34] *** nzee left
[16:34] *** kermit left
[16:35] *** johchri left
[16:35] <TD> the diff on the second is huge. sigh. what is an "evil merge"?

[16:35] <TD> one that doesn't leave the commit message alone?

[16:35] <cbreak> no

[16:35] *** dotpot` left
[16:36] <cbreak> an evil merge is a merge commit that changes more than just resolving conflicts

[16:36] <danols_work> I am willing to become a pupil - here is my desktop shared: https://go.teamviewer.com/v7/flash.aspx?tid=m58373220&lng=en

[16:36] <cbreak> TD: in general, diffs of merge commits are not useful

[16:36] <TD> ok. i honestly don't remember what i did to create this commit

[16:36] <cbreak> it will show you the whole changeset the other side brought in

[16:36] <TD> it was a while ago

[16:37] <cbreak> do you use reset?

[16:37] <cbreak> commit --amend?

[16:37] <cbreak> maybe you amended a merge commit :)

[16:37] <TD> hmm

[16:37] <TD> i wonder if i did that

[16:37] <wereHamster> TD: commit diffs show only conflict resolution. They don't show if you removed/added something unrelated.

[16:37] <TD> that sounds possible. amended a merge commit

[16:37] <TD> bummer

[16:37] <TD> is there a way to recover from this situation? i'm not sure what changes might have got rolled back by accident

[16:37] <danols_work> https://github.com/shaunsephton/django-ckeditor/network --- my branch is danols --- how do I cherry pick only a few of sepow commit which is a created branch after my branch

[16:38] *** jryans left
[16:38] *** jryans_ is now known as jryans

[16:38] <cbreak> TD: you can retry the merge

[16:38] *** kmurph79 joined
[16:38] <wereHamster> danols_work: with git cherry-pick <commit you want to cherry pick>

[16:38] <danols_work> wereHamster: but that branch is 'after' my branch

[16:38] *** alester joined
[16:38] <danols_work> I got something about non forward error message

[16:38] <wereHamster> danols_work: so?

[16:38] <thiago> danols_work: with git-cherry-pick?

[16:38] <cbreak> TD: git checkout -b tmp 56489f9fc60c^1

[16:38] <danols_work> no merge

[16:39] <cbreak> git merge 56489f9fc60c^2

[16:39] <thiago> danols_work: then try git-cherry-pick

[16:39] <wereHamster> danols_work: so you want to merge or cherry-pick? Decide

[16:39] <danols_work> i'm a total newb and yes I've been reading

[16:39] *** kermit joined
[16:39] <thiago> danols_work: merge = take all the commits, unconditionally

[16:39] <danols_work> just a couple of the 'commits' by that guy

[16:39] <thiago> danols_work: you cannot choose which ones you want. You want them all.

[16:39] <danols_work> ?

[16:39] <thiago> danols_work: cherry-pick: you choose which ones and in which order

[16:39] <danols_work> ok

[16:39] <thiago> which operation do you want?

[16:40] *** danielpunt left
[16:40] <danols_work> cherry pick

[16:40] <danols_work> commits let's say A B C F

[16:40] <thiago> then git cherry-pick the comits

[16:40] <danols_work> i added his barnch as a remote already

[16:40] *** arvind_khadri joined
[16:40] *** arvind_khadri left
[16:40] *** arvind_khadri joined
[16:40] <danols_work> do I check out into his branch ?

[16:40] *** cschneid_ joined
[16:40] <TD> cbreak: is there a way to back up my tree before doing that? just cp -rv on the entire directory will work ?

[16:40] <thiago> danols_work: do you want to check out that branch?

[16:41] <danols_work> thiago: omg i'm sorry I don't know / understand

[16:41] <cbreak> TD: how about just committing the changes? :)

[16:41] *** mirage33- left
[16:41] <TD> cbreak: yeah, that's what i'm thinking .... just find out what's missing and patch them back in by hand

[16:41] <thiago> danols_work: you asked how to check out that branch. I'm not sure you want to.

[16:41] *** papegaaij left
[16:41] <thiago> danols_work: why do you want to check it out?

[16:41] <TD> cbreak: it can only have been changes that occurred before the merge commit that accidentally got rolled back

[16:41] <danols_work> let me re-ask the question

[16:41] <cbreak> TD: no, you said you want to back up your tree

[16:42] <cbreak> so just commit your changes

[16:42] *** singingwolfboy1 joined
[16:42] <TD> cbreak: oh, no

[16:42] <cbreak> and then do what I wrote above

[16:42] <TD> cbreak: i have no changes

[16:42] <TD> cbreak: i mean, if i mess up the fixing process

[16:42] <cbreak> even better

[16:42] <TD> cbreak: i just want to be able to get back to where i started

[16:42] <cbreak> git checkout -b tmp

[16:42] <cbreak> -> tmp branch

[16:42] <cbreak> won't touch any other branch

[16:42] <danols_work> https://github.com/shaunsephton/django-ckeditor/network is the overview of the current freaken mayhem ( as you can see github teaches people to fork but not how to merge, the wheel get's re invited soo many times)

[16:43] <danols_work> my branch is name danols in that graph

[16:43] <TD> ok, switched

[16:43] <danols_work> I would like to 'pick' some commits by sepow

[16:43] <cbreak> TD: you should now be on 56489f9fc60c^1

[16:43] <danols_work> let's call them commit B,C,D,Z

[16:43] <cbreak> the first parent of the evil merge

[16:43] <danols_work> how do I do that ?

[16:43] *** friskd joined
[16:43] *** codebeaker_ is now known as codebeaker|runni

[16:43] *** jutaro left
[16:43] <EugeneKay> danols_work - add sepow's repo as a remote, fetch his stuff, cherry-pick.

[16:44] *** codebeaker|runni is now known as codebeaker|run

[16:44] <danols_work> no need to 'check-out' into his?

[16:44] <thiago> danols_work: no

[16:44] <EugeneKay> Nope.

[16:44] <thiago> danols_work: just fetch and cherry-pick

[16:44] *** VladGh joined
[16:44] <EugeneKay> man git-cherry-pick

[16:44] <gitinfo> the git-cherry-pick manpage is available at http://jk.gs/git-cherry-pick.html

[16:44] <danols_work> so I am in my branch the git cherry-pick?

[16:44] <danols_work> ok

[16:44] <EugeneKay> Yup.

[16:44] <danols_work> ok anyone know how to do this in egit --- eclipse plugin

[16:44] <EugeneKay> Not a clue.

[16:44] <thiago> danols_work: note that you'll still be diverged. Unless you merge.

[16:45] *** friskd left
[16:45] <danols_work> thiago: is that good / bad ?

[16:45] <EugeneKay> I forget the exact syntax, but there is a way to cherry-pick directly from a remote+refspec, without adding it as a remote first.

[16:45] *** fir31ight joined
[16:45] <TD> cbreak: oh, whoops, i did just "git checkout -b tmp". i didn't add the last parameter

[16:45] <TD> so i guess i branched it at head

[16:45] <thiago> danols_work: neither. It just is.

[16:45] *** kenperkins joined
[16:45] <TD> i guess i can use "tmp2" or something

[16:45] <thiago> danols_work: depends on whether you want to remain diverged or whether you want to contain all changes.

[16:45] *** jaequery joined
[16:46] *** friskd joined
[16:46] <danols_work> can I still try to merge after cherry pikcing ?

[16:46] <wereHamster> TD: or git reset --hard <that sha>

[16:46] <thiago> danols_work: yes

[16:46] *** nzee joined
[16:46] *** Sir_Rai joined
[16:47] *** mikewintermute joined
[16:47] *** traviscj left
[16:47] *** singingwolfboy1 left
[16:47] <TD> wereHamster: ok, done. now i can try the merge again

[16:47] *** brian_g left
[16:48] <TD> with git merge 56489f9fc60c^2

[16:48] *** andrewebdev left
[16:48] <TD> i'm not clear how this helps me though

[16:48] <TD> if i "get it right" on the tmp branch, i still have lots of commits on the main branch i'll need to bring across

[16:48] *** wbednarski joined
[16:49] <wereHamster> TD: is the history linear after the merge?

[16:49] <TD> no

[16:49] <TD> cbreak: git merge 56489f9fc60c^2 resulted in a bunch of merge conflicts

[16:49] *** BryanWB left
[16:49] <wereHamster> oh well. It might be easier to just live with the bad history

[16:49] *** johnathanb left
[16:49] <TD> i think it's going to be easier to just live with it, and try and fix what got broken by hand

[16:49] <TD> the trick is to identify what broke. i can review the entire diff

[16:49] <TD> (well, commit delta)

[16:50] *** mirage335 joined
[16:50] *** nzee left
[16:50] *** johnathanb joined
[16:50] *** jryans_ joined
[16:51] <cbreak> TD: once you've resolved the merge commit

[16:51] <cbreak> just commit

[16:52] <cbreak> (maybe you forgot that the last time, and then later you thought you'd just commit normally)

[16:52] <cbreak> anyway, when you have the proper merge commit, you can diff the original and the proper, and try to apply that as patch to your current branch tip

[16:52] *** jryans left
[16:52] *** jryans_ is now known as jryans

[16:52] <TD> git commit -a ?

[16:52] <cbreak> no

[16:52] <cbreak> don't

[16:52] <cbreak> resolve

[16:52] <cbreak> resolve it properly

[16:53] <TD> ok, i edited the files to resolve the merge conflicts

[16:53] *** tewecske joined
[16:53] <TD> now i need to commit the resolved merge

[16:53] <cbreak> yep.

[16:53] *** brian_g joined
[16:53] <cbreak> for that git commit -a will do

[16:53] <TD> ok, that's what i thought

[16:53] *** Cromulent left
[16:53] <TD> alright done

[16:54] <cbreak> and now you can do git diff 56489f9fc60c HEAD

[16:54] <cbreak> now you have several options

[16:54] *** johnathanb left
[16:54] <TD> ah, thanks

[16:54] <TD> that diff shows AlertMessage coming back. let me check the other changes

[16:54] <TD> to see if they are indeed gone from HEAD as the diff shows

[16:55] <cbreak> it shows everything you have to do to make the bad mergeinto the one you just made

[16:55] <TD> yup, i understand

[16:55] <TD> indeed

[16:55] <TD> ok, let me apply this patch. thanks!

[16:55] <cbreak> you could now git merge -s ours 56489f9fc60c and then format-patch or so

[16:56] <TD> hrm

[16:56] <TD> don't fully understand that command. i can do it just with regular patch

[16:56] <TD> after checking out the original branch

[16:56] *** aro joined
[16:56] <cbreak> well. if it applies I supose

[16:56] <cbreak> your decision.

[16:56] <cbreak> I can think of at least 4 ways to solve the problem

[16:56] <TD> it nearly applied. two hunks failed. let me see.

[16:57] <cbreak> I should stop thinking or I'll come to more

[16:57] *** joshteam joined
[16:57] <danols_work> how do I merge from a specific commit

[16:57] <danols_work> syntax wise?

[16:57] *** jceb_ joined
[16:57] <wereHamster> danols_work: git merge <a specific commit> ?

[16:57] *** jceb left
[16:57] <danols_work> k

[16:58] <TD> ah there we go. the failed change turns out to not be important, i removed that code for other reasons. all unit tests pass

[16:58] *** Jonno_FTW joined
[16:58] <TD> yay, thanks cbreak !

[16:59] <Jonno_FTW> hello

[16:59] *** macRover joined
[16:59] <TD> if you want some bitcoins for your trouble let me know ;)

[16:59] <Jonno_FTW> when I do git checkout, it lists a heap of files with D in front of them, and they are files caught by .gitignore

[16:59] <cbreak> I... have to admit I deleted bitcoin a few days ago... :)

[16:59] <Jonno_FTW> what do I do?

[16:59] <cbreak> but glad it worked :)

[16:59] <wereHamster> TD: how much you have?

[16:59] <danols_work> yeah use fltr guys

[16:59] <danols_work> or real hard cash

[16:59] <danols_work> :P

[17:00] <wereHamster> TD: and do you run the miner on the google infrastructure? Is that why searches haven been so slow lately? :P

[17:00] *** dreiss joined
[17:00] <TD> heh

[17:00] <TD> there's no mining going on at google

[17:00] <cbreak> danols_work: git merge can only merge whole histories. just git merge <insertsomethinghere>

[17:00] <cbreak> I am sure google could dominate the mining

[17:00] <cbreak> and introduce fake history

[17:00] *** hxts joined
[17:01] <danols_work> cbreak: git merge can only merge a WHOLE branch, not upto some 'commit' ?

[17:01] <cbreak> up to some commit is no problem

[17:01] *** axl_ left
[17:01] <danols_work> ok

[17:01] <danols_work> that's what I am looking for

[17:01] *** maartenv joined
[17:01] <cbreak> just git merge shaofcommithere

[17:01] *** theRoUS joined
[17:01] <wereHamster> cbreak: I doubt it. There are people using ASICs for mining. Much faster than a computer.

[17:01] <cmn> under the hood it's exactly the same, as specifying a branch is only specifying a commit

[17:01] *** axl_ joined
[17:01] <danols_work> (reading http://wiki.eclipse.org/EGit/User_Guide#Merging_a_Branch_or_a_Tag seeing if I can do it through the plugin)

[17:01] <cbreak> danols_work: you do use gitk or so to look at your history?

[17:01] <danols_work> the egit history plugin

[17:02] <cbreak> I am not sure if ... oh my god

[17:02] <cbreak> egit

[17:02] <danols_work> ?

[17:02] *** swombat left
[17:02] <cbreak> good luck.

[17:02] <cbreak> I've only heard bad things about it.

[17:02] *** whitman left
[17:03] <cbreak> (the best I've heard about it so far was "It's not THAT bad...")

[17:03] *** Element9_work left
[17:03] <cbreak> on the topic of Bit Coin: There were two talks about it at the 28c3

[17:03] *** oriba left
[17:03] *** traviscj joined
[17:04] <danols_work> haha ok

[17:04] <danols_work> shit

[17:04] * danols_work cries

[17:04] *** klemenes joined
[17:04] <wereHamster> cbreak: did you attend?

[17:04] <cbreak> no, but I downloaded most the videos :)

[17:05] *** overbythere left
[17:05] <Jonno_FTW> well?

[17:05] <cbreak> apparently Dan Kaminski was upset because he couldn't find security holes in bitcoin

[17:05] *** mklappstuhl left
[17:05] *** nzee joined
[17:05] <cbreak> but he decided to instead put ascii art into the transaction history :)

[17:05] <theRoUS> mrmph.  trying to migrate from gitosis to gitolite and running into two issues..

[17:06] <cbreak> not watched the other talk

[17:06] <cbreak> yet :)

[17:06] <TD> they aren't very good

[17:06] <TD> i was disappointed

[17:07] *** ipalaus_ left
[17:07] <cbreak> I found it amusing... :)

[17:07] <theRoUS> is this the rigth place to ask about gitolite?

[17:07] *** vpopov left
[17:07] <cbreak> yeah

[17:07] *** brian_g left
[17:08] <wereHamster> cbreak: have a link to the videos?

[17:08] <cbreak> http://ftp.ccc.de/congress/28C3/mp4-h264-HQ/

[17:08] *** jryans_ joined
[17:08] <cbreak> 4746 was the bitcoin talk I've not watched

[17:08] <cbreak> 4930 was dan kaminski's rambling, among other things about bit coin

[17:09] <theRoUS> cbreak: were you replying 'yeah' to me?

[17:09] <cbreak> theRoUS: yeah, I was

[17:09] <sitaram> theRoUS: is one of the issues a message saying "gitosis, what's that?"

[17:10] <theRoUS> cbreak: ah, cool.  i have all my git repos somewhere *else* than under the gitolite home dir.  when i set it up, the gitolite-admin repo got put in the right place, but it's a bare repo.

[17:10] *** Jonno_FTW left
[17:10] *** jryans left
[17:10] *** jryans_ is now known as jryans

[17:11] <sitaram> as it should be

[17:11] <cbreak> that's normal

[17:11] <cbreak> you're supposed to clone it (via ssh)

[17:11] <cbreak> and then configure it, and then push (via ssh)

[17:11] <sitaram> theRoUS: what's the actual question?  I'm waiting with bated (or is that baited; I always get confused) breath

[17:11] *** Prasad left
[17:12] <theRoUS> cbreak: i'm encountering confusion in the usage and in the .gitolite.rc file about where things should go; when i make changes to the conf and push them, they're going into the bare repo -- but gitolite isn't updating its ~/.gitolite one

[17:12] <theRoUS> sitaram: 'bated' if you're holding it, 'baited' if you're trying to catch me out :-)

[17:12] <cbreak> theRoUS: the gitolite admin repo is for user/repo administration

[17:12] <theRoUS> sitaram: the basic question, i guess, is where $GL_ADMINDIR should point

[17:13] <cbreak> the rc file is for more fundamental settings

[17:13] <cbreak> my tip: Don't change anything in the rc file unless you're sure you have to :)

[17:13] *** imaginativeone left
[17:13] *** robotmay joined
[17:13] <theRoUS> probably best for me to start over; this was before christmas.

[17:14] *** _inc left
[17:14] *** traviscj left
[17:14] <cbreak> tip 2: listen to what sitaram says, he's the master of gitolite

[17:15] <theRoUS> okey, next question -- hopefuly simpler.  i installed gitolite from an rpm on fedora/rhel.  is there a canonical way to make it use user 'git' rather than 'gitolite' ?

[17:15] <theRoUS> or is that a hack through the normal sysadmin tools?

[17:15] * theRoUS bows to sitaram 

[17:16] <sitaram> theRoUS: the basic question is, why did you change GL_ADMINDIR?  :-)  The install sets it up correctly.  It's not impossible to change it but not advised

[17:16] *** Vile1 joined
[17:16] *** satyanash left
[17:16] *** OOPMan joined
[17:16] *** robotmay left
[17:16] <sitaram> theRoUS: in fact it's in a section marked "DO NOT TOUCH THIS SECTION"

[17:16] <theRoUS> sitaram: as i said, at this point i'm not sure, so i'm going to back it all out and start over.

[17:17] <theRoUS> sitaram: i'm pretty sure i frobbed it because of the not-using-pushed-changes thing.

[17:17] <theRoUS> like, it was using the original key for everything and ignored changes thereto.

[17:18] *** LeMike joined
[17:18] <sitaram> theRoUS: to your git versus gitolite question: easy as pie.  Gitolite was always designed to be run by as many real (unix) users as you wish -- just run 'gl-setup Yourname.pub' from a new user called 'git'

[17:18] *** Vile left
[17:18] *** cybersphinx joined
[17:18] *** fr0stbyte left
[17:18] <theRoUS> so, never mind about the gl-admin question until i can phrase it cogently.

[17:18] <cbreak> this won't take over any of your old settings

[17:18] <cbreak> that's probably an advantage in your case though :)

[17:19] *** satyanash joined
[17:19] *** baburdick joined
[17:19] *** nikuyoshi left
[17:19] <theRoUS> well, don't i need it for the uri paths?  as in 'git@host:repo' ?

[17:19] *** nikuyoshi joined
[17:20] *** Vile1 left
[17:20] <cbreak> ?

[17:20] *** Vile joined
[17:20] *** unreal left
[17:21] *** disappea_ left
[17:21] *** LeMike left
[17:21] *** gusnan left
[17:21] <theRoUS> cbreak: when i set up my repos with gitosis, the uri for remotes was 'git@<repohost>:<reponame>.git' so it would go in through the git user and all the ssh config magic would work

[17:21] *** kevwil left
[17:22] *** dobby156 left
[17:22] *** dreiss left
[17:22] <cbreak> gitolite will support the same style of URL

[17:22] <sitaram> theRoUS: gitolite was designed to be compatible enough that your users won't see the difference unless you tell them (or they try to violate some access rule, then the message is different)

[17:22] *** brian_g joined
[17:22] *** the_cybersphinx left
[17:22] <diverdude> cbreak: but if i directly follow the instructions from http://sitaramc.github.com/gitolite/root.html i get an error when running gitolite/src/gl-system-install

[17:23] *** [M]ax left
[17:23] <diverdude> cbreak: and thats why i did the export

[17:23] <cbreak> what error?

[17:23] <sitaram> diverdude: what error?

[17:23] <sitaram> jinx

[17:23] *** kevwil joined
[17:23] <sitaram> diverdude: don't just paste the error; paste the command also

[17:23] <theRoUS> cbreak, sitaram: so it would seem to me that the gitolite user needs to be 'git' for 'git@host:repo' to work, n'est-ce pas?

[17:23] <cbreak> theRoUS: yeah.

[17:24] <theRoUS> bonne

[17:24] <diverdude> cbreak: here it is: http://bin.cakephp.org/view/254705903

[17:24] <diverdude> sitaram: the command is also there

[17:24] *** unreal joined
[17:24] * theRoUS swears trenchantly at something off screen

[17:24] <sitaram> theRoUS: yes.  And you can have yourself be another "gitolite hosting user" and those repos will be accessed as "thRoUS@server:repo" etc

[17:25] *** nikuyoshi left
[17:25] *** berserkr left
[17:25] <cbreak> diverdude: seems you have screwed up your PATH

[17:25] <sitaram> diverdude: what part of that output is confusing you?  It's pretty clear...

[17:26] <cbreak> someone put /home/git/bin in there

[17:26] *** herdingcat joined
[17:26] <theRoUS> sitaram: excellent.  next question (unless you'd like me to go away now): i'm having trouble figuring out how to set up a tree of repos for which the parent dirs are *not* themselves repos.

[17:26] <cbreak> if you use root install, that should not be needed (and is probably not useful)

[17:26] <diverdude> sitaram: yes. it says i need to modify my path which i did....and then ppl said nono export is not necessary

[17:26] *** [M]ax joined
[17:27] *** Goplat joined
[17:27] <diverdude> cbreak: i AM using root install

[17:27] <cbreak> you seem to have put gitolite stuff into the git user dir

[17:27] <cbreak> and gitolite complains about that

[17:27] *** imaginativeone joined
[17:27] <theRoUS> for example, i'd like to have something like: git@host:mod1.git, git@host:puppet/mod2.git, git@host:puppet/mod3.git -- mod2 and mod3 are repos, but 'puppet' is just a directory in the path to them

[17:27] <sitaram> diverdude: sorry, I don't think I can help with shell issues right now; it's almost 11pm and I'm falling off my chair... ('export is not necessary' is a shell knowledge issue; there are plenty of people here who know that, probably better than I)

[17:27] <diverdude> cbreak: this is the result of echo $PATH    /home/git/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/X11R6/bin

[17:27] <theRoUS> (this was the main reason for my migrating to gitolite)

[17:28] <theRoUS> sitaram: thank you for the help, if you're about to depart!

[17:28] <cbreak> diverdude: well, remove /home/git/bin from it

[17:28] *** fayimora joined
[17:28] <sitaram> theRoUS: what makes you think having repos in dir/repo is not allowed?

[17:28] <cbreak> diverdude: and really, home/git shouldn't even have a bin imho

[17:28] <FauxFaux> theRoUS: That "just works", doesn't it?  I have "repo foo/bar" and it works fine.

[17:28] <sitaram> theRoUS: I'm here for a bit, as long as the question is not too deep I'll manage :)

[17:28] <sitaram> FauxFaux: yup

[17:29] <danols_work> ok so after merging I need to commit ?

[17:29] <theRoUS> sitaram: i get an error; maybe i'm not configuring it properly in gitolite.conf.  let me see if i can reproduce it

[17:29] *** Guest51449 left
[17:29] *** cheeseboy left
[17:29] <cbreak> danols_work: git merge will commit unless there's a conflict

[17:29] <danols_work> fuck

[17:29] <danols_work> this is ridinculus

[17:29] <danols_work> ok feck egit

[17:29] <danols_work> console mode

[17:30] *** larva joined
[17:30] <danols_work> (HG so easier to use fyi)

[17:30] <cbreak> haha :D

[17:30] <cbreak> good joke

[17:30] *** LimeBlast left
[17:30] <bremner> !isgitbetter

[17:30] <gitinfo> we think so, but if you don't, please go away and use $YOURFAVOURITESYSTEM. See http://whygitisbetterthanx.com/ among many many other places.

[17:30] <danols_work> if there is EGIT developers here --- simplicity of use wins

[17:31] <danols_work> cbreak: no joke newb experience

[17:31] *** baburdick left
[17:31] <sitaram> danols_work: will you be forever a newb?

[17:31] <bremner> I guess there are no egit developers here.

[17:31] <danols_work> will you grow if it's hard for newbs

[17:31] <bremner> haha, yeah git will fade away...

[17:31] <cbreak> if there were, they'd probably not tell us. We've made fun of them often.

[17:31] <danols_work> think about what you asking --- i will preserve but some won't and go somewhere else

[17:31] <sitaram> good

[17:31] <danols_work> this is not the discussion though

[17:32] <diverdude> cbreak: then i add the user as described, and do su - git

[17:32] *** John2496 joined
[17:32] <danols_work> your attitude is self defeating

[17:32] *** LeMike joined
[17:32] <theRoUS> sitaram: http://pastie.org/3155335

[17:32] <sitaram> !fortune <-- not aimed at you, but for them

[17:32] <danols_work> anywho --- RESET

[17:32] <gitinfo> I'm sorry that you are stupid, ugly, and not using git.  Still, some misguided souls think that something other than git might be better for them.  Who knows, it might even be true for you.  In any case, we don't care.  Good-bye.

[17:32] *** baburdick joined
[17:32] <bremner> danols_work: do you have a question about git? sorry, we're not much help with egit here.

[17:32] <diverdude> cbreak: and run the next command as shown...and this error: http://bin.cakephp.org/pastes/edit/71778

[17:32] <danols_work> I guess when you popular you get lots of dim wits here

[17:32] <danols_work> yes I will stop using egit right now

[17:32] *** ph^ joined
[17:33] *** brainbox1100 left
[17:33] <danols_work> console only baby

[17:33] <sitaram> theRoUS: take out the 'coar/' is my guess

[17:33] <danols_work> let me repeat the repo setup using console and take it from there

[17:33] *** berserkr joined
[17:33] <PerlJam> I know the bot it just echoing Linus, but that text isn't very helpful (for the community)

[17:33] *** wbednars_ joined
[17:33] <cbreak> diverdude: what's that?

[17:33] <theRoUS> sitaram: with the conf file containing: repo coar/puppet/ssh    RW+ = coar

[17:33] <sitaram> oh

[17:33] <sitaram> theRoUS: ok bad guess then; that should have worked

[17:34] <sitaram> theRoUS: what does "ssh git@server info" return?

[17:34] *** kevwil left
[17:34] <theRoUS> sitaram: but the actual path in the repo tree is <repoparent>/coar/puppet/ssh.git

[17:34] <theRoUS> ssh git@ or ssh gitolite@ ?

[17:34] <diverdude> cbreak: thas is a direct copy of the output

[17:34] <diverdude> its says so in the console

[17:34] <cbreak> theRoUS: all repos will be in a subdirectory of the home directory of the git user by default

[17:34] <cbreak> diverdude: there's no text

[17:35] <theRoUS> cbreak: i know -- but that's not where i have them.

[17:35] <diverdude> cbreak: sorry try again: http://bin.cakephp.org/view/729458776

[17:35] <theRoUS> sitaram: the gitolite config gives you the following access:el5.1

[17:35] <theRoUS>      R   W 	gitolite-admin

[17:35] <theRoUS>     @R_ @W_	testing

[17:35] <cbreak> theRoUS: the user which you installed gitolite for

[17:35] *** Heisenmink_ joined
[17:35] <sitaram> theRoUS: (1) whether it's git@ or gitolite@ only you can tell.  Whichever userid you ran the 'gl-setup' command

[17:35] *** wbednarski left
[17:36] <theRoUS> sitaram: see, this is where what i pushed and what gitolite is using are out of sync.. :-(

[17:36] <cbreak> diverdude: what's /home/git/bin?

[17:36] <cbreak> diverdude: that makes no sense

[17:36] <cbreak> type which gl-setup

[17:36] <sitaram> theRoUS: perhaps you forgot to push?  or you got a syntax error and didn't notice the "**ERROR**" type message?

[17:36] <theRoUS> so let's just ignore me entirely until i clean up and re-install from scratch.  my repos live in /repository/gitrepo, *not* ~<gitolite-user>/

[17:37] <diverdude> cbreak: it says: /home/git/bin/gl-setup

[17:37] <cmihai> Anyone using gitlabhq? It's driving me insane..

[17:37] <cbreak> theRoUS: just move them over before you push then I guess

[17:37] *** stringoO left
[17:37] <theRoUS> sitaram: 'everything up to date'

[17:37] <sitaram> theRoUS: repository?  should be 'repositories/' by default, within $HOME of whatever user you ran gl-setup in

[17:37] <cbreak> theRoUS: there's a manual on migrating

[17:37] <sitaram> theRoUS: can you pastebin your entire conf/gitolite.conf file (if not confidential)

[17:37] <cbreak> diverdude: that's wrong

[17:37] *** kevwil joined
[17:38] <theRoUS> sitaram: i *know*.  but they aren't; they already exist in a different tree, and i don't want them under the gitolite user's homedir

[17:38] <cbreak> diverdude: I told you to remove /home/git/bin from PATH and even the folder or so

[17:38] <cbreak> diverdude: I think you screwed up a ton of things when you followed some bad tutorial or something...

[17:38] <cbreak> theRoUS: you can move them :)

[17:39] <cbreak> maybe with a symlink?

[17:39] *** Araxia_ joined
[17:39] <theRoUS> cbreak: yggh.  no symlinks, please.

[17:39] <cbreak> directory hardlink

[17:39] <cbreak> ... :D

[17:39] <diverdude> cbreak: hmmm proably you are right...i did remove it from the roots PATH..i guess i also have to remove it from git users path

[17:39] <theRoUS> let me just back this out entirely and start over.

[17:39] <theRoUS> cbreak: different filesystems.

[17:39] <cbreak> theRoUS: :/

[17:40] <danols_work> ok

[17:40] <danols_work> back to square one

[17:40] <theRoUS> cbreak: what's the normative migration document link?

[17:40] <cbreak> probably somewhere on here: http://sitaramc.github.com/gitolite/master-toc.html

[17:40] *** EricInBNE left
[17:40] <theRoUS> k, ta

[17:41] * theRoUS goes to back out the gitolite stuff and start over

[17:41] <danols_work> I am at your mercy --- https://github.com/shaunsephton/django-ckeditor/network --- I need to merge up to eb804f44aacdfc73b015f86bc7755fcc3603e12b

[17:41] *** jesteracer joined
[17:41] <diverdude> cbreak: now i get the same error, except the path has changed to /usr/local/bin/../ now

[17:41] *** ziro` left
[17:41] <diverdude> cbreak: like cp: cannot stat `/usr/local/bin/../doc': No such file or directory

[17:41] *** kenichi joined
[17:41] <danols_work> can I do it without setting up a remote ?

[17:41] *** steveoliver joined
[17:41] <danols_work> this commit https://github.com/sepow/django-ckeditor/commit/eb804f44aacdfc73b015f86bc7755fcc3603e12b

[17:41] <cbreak> diverdude: hmm. no idea.

[17:41] <thiago> danols_work: yes, just fetch the URL of the repository

[17:42] *** stodan left
[17:42] <diverdude> cbreak: which gl-setup shows /usr/local/bin/gl-setup

[17:42] *** flavius joined
[17:42] *** Rogi joined
[17:42] <diverdude> cbreak: and echo $PATH shows: /usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games

[17:42] <danols_work> thiago: but fetch requires a remote setup --- this is one time thing --- can I somehow fetch without setting up a remote ?

[17:43] <thiago> danols_work: just fetch the URL

[17:43] <danols_work> k

[17:43] <danols_work> one moment

[17:43] <thiago> danols_work: git fetch URL_here

[17:43] <cbreak> diverdude: yeah, that's ok I think

[17:43] <thiago> if the branch you want to fetch is not the default, name it after the URL

[17:43] *** Kromack left
[17:43] <cbreak> it's almost as if your gl-system-install somehow failed

[17:43] *** achadwick left
[17:44] <danols_work> git fetch git://github.com/sepow/django-ckeditor.git:master ?

[17:45] <cbreak> space

[17:45] <cbreak> not a :

[17:45] <danols_work> k

[17:45] *** codeshah joined
[17:45] *** codeshah left
[17:45] *** Targen joined
[17:45] * cbreak thinks adding a remote is a better idea

[17:45] *** codeshah joined
[17:45] <danols_work> cbreak: how come ?

[17:45] <danols_work> it's a one time thing

[17:46] <diverdude> what does "cp: cannot stat" mean?

[17:46] <cbreak> cp can't find that location

[17:46] *** Chillance joined
[17:46] *** sebrock joined
[17:46] <danols_work> (it's a cluster frak with the forking of that app --- trying to combine a few solutions)

[17:46] <theRoUS> cbreak, sitaram: since gitolite seems happy to search its tree for keys, and i have different keys for different systems but the same username, is this an appropriate way to set things up?  http://pastie.org/3155409

[17:47] *** kevwil left
[17:47] <diverdude> cbreak: well its also not there

[17:47] <cbreak> theRoUS: add all keys to the key dir

[17:47] *** gusnan joined
[17:47] <cbreak> [email@hidden.address]
[17:47] <cbreak> for example

[17:47] *** ngulden left
[17:47] <cbreak> diverdude: yeah, I don't know why it even tries

[17:47] *** ipalaus_ joined
[17:48] *** BlaDe^ joined
[17:48] <danols_work> thiago: so I have it fetched now that I am still checked out under 'my branch'  i do git merge eb804f44aacdfc73b015f86bc7755fcc3603e12b ?

[17:48] <sitaram> theRoUS: search for 'many keys' in the gitolite master TOC at http://sitaramc.github.com/gitolite/master-toc.html

[17:48] <sitaram> theRoUS: curiously, its saying the same thing you did

[17:48] *** ISF_ joined
[17:48] <theRoUS> cool

[17:49] *** jdav is now known as jdav_gone

[17:49] <danols_work> just to be sure as I have not done it in console before it's git merge eb804f44aacdfc73b015f86bc7755fcc3603e12b ? now yes?

[17:49] <diverdude> cbreak where should i clone the gitolite repo to?

[17:49] <cbreak> to your own computer

[17:50] <cbreak> well

[17:50] <cbreak> the one you want to use to install?

[17:50] <cbreak> somewhere onto your server

[17:50] <diverdude> cbreak: yes to the computer who should run the service rifght? but which dir?

[17:50] *** ISF left
[17:50] *** kevwil joined
[17:50] <cbreak> doesn't matter I think

[17:50] <thiago> danols_work: merge takes all the commits from your current branch up to and including that one

[17:51] <thiago> danols_work: do you want merge or cherry-pick?

[17:51] <diverdude> cbreak: can it matter that i have already installed gitosis?

[17:51] <cbreak> maybe.

[17:51] *** fr0stbyte joined
[17:51] <cbreak> I'd remove that any case...

[17:51] <diverdude> cbreak: how do i remove that again?

[17:51] <cbreak> no idea.

[17:51] <danols_work> I want to take all the commits up to and including eb804f44aacdfc73b015f86bc7755fcc3603e12b FROM sepow-django-ckeditor and merge into MY branch

[17:52] *** MANCHUCK joined
[17:52] *** spearce joined
[17:52] *** ipalaus_ left
[17:52] <wereHamster> danols_work: git merge eb804f44aacdfc73b015f86bc7755fcc3603e12b

[17:52] <danols_work> :)

[17:52] <danols_work> did that got conflicts

[17:52] <thiago> danols_work: then merge

[17:52] <danols_work> k getting somewhere

[17:52] <danols_work> thanks

[17:52] <thiago> danols_work: fix the conflicts, git add the files, git commit

[17:53] <danols_work> thiago: ok

[17:54] *** DofLeFou joined
[17:55] *** jceb_ left
[17:55] *** Targen left
[17:55] *** hxts left
[17:56] *** fr0stbyte left
[17:56] *** gitinfo sets mode: +v LeMike

[17:56] <LeMike> hi there. how do I add a helper for svn+ssh uri ?

[17:57] *** rpg left
[17:58] *** apok joined
[17:58] *** nzee left
[17:58] *** lonewulftp joined
[17:59] *** j416 joined
[17:59] *** _Vi left
[18:00] *** unreal left
[18:01] *** ipalaus_ joined
[18:01] *** brian_g left
[18:01] *** baburdick left
[18:01] <cbreak> LeMike: what's that for?

[18:01] <cbreak> git-svn?

[18:02] <LeMike> oh. damn. what do I do here?

[18:02] *** baburdick joined
[18:02] *** mhi^ joined
[18:03] *** mishok13 left
[18:03] <cbreak> maybe you want us to link http://whygitisbetterthanx.com/#svn? :)

[18:03] *** theresajayne joined
[18:03] <theresajayne> can anyone help me

[18:04] *** TD left
[18:04] *** binjured joined
[18:04] <bremner> theresajayne: can you be more specific?

[18:04] <theresajayne> i have a server running and a local repository i need to push to the remote but i cant work out what to do , the tutorials dont seem to be helping much

[18:04] *** mikewintermute left
[18:04] *** LeMike left
[18:04] <cbreak> !website?

[18:04] <gitinfo> Git is not a website deployment tool, but can sometimes play one in sufficiently simple/lax environments with a little help.  One example of help is: http://toroid.org/ams/git-website-howto

[18:05] <theresajayne> a) how do i push as i am getting the error fatal: unable to connect to 10.0.0.221: 10.0.0.221[0: 10.0.0.221]: errno=No error

[18:05] <cbreak> what's the problem?

[18:05] *** ipalaus_ left
[18:05] <cbreak> you have an invalid url

[18:05] <theresajayne> i did git remote add and git push name

[18:05] <cbreak> what's the url you use?

[18:06] <theresajayne> git://10.0.0.221/repository.git

[18:06] <cbreak> git ls-remote git://10.0.0.221/repository.git

[18:06] <cbreak> what does that show?

[18:07] <theresajayne> also i cant pull any repository from the server i get the error  Cloning into 'gitosis-admin'... [email@hidden.address] password: fatal: 'gitosis-admin.git' does not appear to be a git repository fatal: The remote end hung up unexpectedly

[18:07] *** tblamer left
[18:07] <cbreak> well

[18:07] <cbreak> git:// is read-only

[18:07] <theresajayne> i can type commands on the server as well - its confusing me

[18:07] <cbreak> unless you configured it for pushing

[18:07] <cbreak> did you do that?

[18:07] <bremner> !gitosis

[18:07] <gitinfo> gitosis is no longer maintained and supported by the author; we usually recommend gitolite instead which has much better documentation and more features: http://github.com/sitaramc/gitolite

[18:07] <theresajayne> i installed my key

[18:08] *** LeMike joined
[18:08] <theresajayne> i am just moving to git from subversion

[18:08] *** CKr_ joined
[18:08] *** tblamer joined
[18:08] <cbreak> you should switch to gitolite :)

[18:08] *** gitinfo sets mode: +v LeMike

[18:08] <theresajayne> i get the local repository

[18:08] <cbreak> and don't use git://

[18:08] *** empity left
[18:09] *** brian_g joined
[18:09] <theresajayne> i think gitosis has messed everything up

[18:09] *** t4nkd left
[18:10] <cbreak> possible. It's ancient.

[18:10] <theresajayne> i have the source locally

[18:10] <theresajayne> so on the server i need to set up the repository

[18:10] <cbreak> switch to gitolite. use ssh:// and not git://

[18:10] *** snearch left
[18:10] <theresajayne> ie the same as i did locally but then add the remote one as a remote to my local

[18:10] <cbreak> no

[18:11] <cbreak> gitolite will do that for you

[18:11] <cbreak> the creating of the remote repository

[18:11] *** phil-adept left
[18:11] *** Vile left
[18:12] *** t4nkd joined
[18:12] *** koo4 left
[18:13] *** tblamer left
[18:13] *** LeMike left
[18:15] *** kevwil left
[18:16] <theRoUS> cbreak, sitaram: on re-install, it appears that all my woes went away.  thanks!

[18:16] <theRoUS> cbreak: one last question: is there a 'line continuation' mechanism for gitolite.conf?  à la \ for shell ?

[18:17] *** benares_98 joined
[18:17] *** watsonian joined
[18:19] *** mugwump joined
[18:20] *** PigeonFriend left
[18:20] *** lonewulftp left
[18:21] <theresajayne> ok i just tried to apt-get gitolite and had the followeing error

[18:21] *** spearce left
[18:21] *** lonewulftp joined
[18:21] *** wilmoore joined
[18:21] *** nzee joined
[18:21] <theresajayne> No adminkey given - not setting up gitolite

[18:22] <sitaram> theRoUS: no there isn't a line continuation mechanism.  But @group definitions accumulate so you probably don't need them

[18:22] *** dreiss joined
[18:23] *** agile joined
[18:23] *** luxurymode left
[18:25] *** TML joined
[18:25] *** mishok13 joined
[18:26] *** bgerber joined
[18:26] *** nzee left
[18:27] *** CKr_ left
[18:27] *** ramsey joined
[18:28] *** macRover left
[18:28] *** spearce joined
[18:28] *** Q| left
[18:29] *** gusnan left
[18:29] *** phishy left
[18:30] *** brian_g left
[18:30] *** shruggar left
[18:30] *** hxts joined
[18:30] <theresajayne> i hate this, apt-get installs software in strange places and is missing all the stuff the tutorials include

[18:31] *** Biopandemic joined
[18:31] *** cakehero left
[18:32] *** baburdick left
[18:33] *** FernandoBasso left
[18:33] *** baburdick joined
[18:34] *** aspotashev joined
[18:34] *** koo4 joined
[18:34] *** dcarper1 joined
[18:35] *** ccushing left
[18:35] *** tblamer joined
[18:35] <theRoUS> sitaram: thanks; it was the long groups i was concerned about

[18:36] *** padams left
[18:36] *** herdingcat left
[18:37] *** Jay_Levitt joined
[18:37] *** FernandoBasso joined
[18:37] *** cyphase left
[18:38] *** ColKurtz joined
[18:38] <Jay_Levitt> How can I programmatically see if a "git pull" just changed anything?

[18:39] <thiago> Jay_Levitt: what exactly is the use-case?

[18:39] <Jay_Levitt> I am running a provisioning script that is stored in git.. first thing it needs to do is see if there's a newer version of itself

[18:39] <Jay_Levitt> So a simple "did the sha1 change after this git pull" would work

[18:42] *** btanaka joined
[18:42] <Jay_Levitt> I just found git rev-parse head, looks like what I want - yes?

[18:42] <thiago> HEAD, not head

[18:42] <Jay_Levitt> er, ya

[18:42] <thiago> and you don't want to run git pull programmatically

[18:43] <Jay_Levitt> thiago: ah, ok - what's the right plumbing-way to simulate it?

[18:43] <Mikachu> why do you want to know if it updated?

[18:43] <Jay_Levitt> (though this is a script that already runs arbitrary human-like commands and parses them, so git pull isn't any worse than other things it does)

[18:43] <Mikachu> don't you want to just continue running in either case?

[18:44] <Jay_Levitt> Mikachu: No, I want to exec myself so I pick up the new script

[18:44] <Mikachu> exec $myself --alreadypulled

[18:44] <Jay_Levitt> But I don't want to do that exec if I don't need to.. though I guess these days it's not like it's particularly expensive to do so

[18:44] *** brian_g joined
[18:44] <Mikachu> heh

[18:44] <Jay_Levitt> If nothing else, I want to print a log message that I'm doing it

[18:44] <Mikachu> running exec is much much much less expensive than running git pull twice

[18:45] <Mikachu> since that involves a bunch of forks and execs

[18:45] <Jay_Levitt> thaaat's a really good point.  Is there a cheaper way to know if there are upstream changes, or is the upstream check the expensive part?

[18:45] *** codebeaker|run is now known as codebeaker

[18:45] <Mikachu> hitting the network is trivially the slowest part ;)

[18:45] *** ericm_ joined
[18:45] *** dorkmafia joined
[18:46] <Jay_Levitt> sigh.. yeah. I'll make sure I only do that in one place, since this script restarts itself a bunch anyway

[18:46] *** kevwil joined
[18:46] <Mikachu> ie, your proposed solution is: pull, it was updated so exec, pull again, no update so continue running

[18:47] <kevlarman> Mikachu: why would you pull again?

[18:47] <Jay_Levitt> Mikachu: yep

[18:47] <Mikachu> because he execed his script, so it has to start over and realize it didn't update teh second time

[18:47] <Jay_Levitt> Actually, that's a good idea to add the --already-pulled

[18:47] *** angelsl left
[18:47] <Jay_Levitt> so I don't do that.

[18:48] <thiago> Jay_Levitt: git pull is an operation that requires human attention

[18:48] *** Zizzy joined
[18:48] <thiago> it may create conflicts, so the human must fix them and git commit

[18:48] <Jay_Levitt> thiago: in theory, yes, and I should make it more robust than that.. in practice, I can make sure it doesn't, because I'm only using git as a one-way distribution mechanism

[18:49] *** theRoUS left
[18:49] <Jay_Levitt> thiago: So maybe I should check for local changes, and if there are any, abort because then it'd require human attention

[18:49] <theresajayne> i am having problems with keys, putty keys cannot be used by git and git rsa keys cannot be used by putty,

[18:49] *** shurane joined
[18:49] *** RaceCondition_ joined
[18:50] *** tystr joined
[18:50] *** Zizzy left
[18:50] <RaceCondition_> I have an empty dir in my repo and git thinks it's a submodule even though I removed it from .git/config and there is no .gitmodules

[18:50] *** cyphase joined
[18:50] <thiago> Jay_Levitt: then you don't need pull

[18:50] <RaceCondition_> and when I delete the empty dir (really empty), `git status` says I deleted it, even though git shouldn't track empty folders

[18:51] <kevlarman> RaceCondition_: you can't just remove a submodule by removing it from .git/config

[18:51] <RaceCondition_> hmm, I see

[18:52] <kevlarman> RaceCondition_: you need to actually git rm it

[18:52] *** arvind_khadri left
[18:52] <RaceCondition_> ok, I get it

[18:52] <Jay_Levitt> thiago: what would you suggest?

[18:52] *** jast joined
[18:52] *** giallu left
[18:52] <kevlarman> Jay_Levitt: git fetch;git reset --hard @{u} or similar

[18:52] <thiago> Jay_Levitt: what kevlarman said

[18:53] <RaceCondition_> kevlarman: trying to git rm the dir gives me fatal: git rm: 'dirname': Operation not permitted

[18:54] <kevlarman> RaceCondition_: because it doesn't exist on the filesystem

[18:54] <RaceCondition_> it does

[18:54] *** imaginativeone left
[18:54] <Jay_Levitt> kevlarman: oh, interesting - fetch and then "make this conform to the index, period".  I like.

[18:54] *** kevwil left
[18:54] <kevlarman> Jay_Levitt: except it's not the index

[18:54] <kevlarman> but yes

[18:54] <Jay_Levitt> er, right. I typed that and then looked up what @{u} did

[18:55] *** kevwil joined
[18:56] *** wbednars_ left
[18:56] *** imaginativeone joined
[18:56] *** Poison joined
[18:57] *** fermianyon joined
[18:57] *** tcurdt left
[18:57] *** pidus left
[18:58] *** metcalfc joined
[18:58] *** dcarper1 left
[18:59] <iheffner> theresajayne: IIRC, you can tell putty key gen to create DSA keys. But it has been a while since I've used Windows/Putty and I wasn't using git at the time.

[18:59] <iheffner> theresajayne: and I don't know that that will solve the issue you are having.

[18:59] *** unreal joined
[18:59] <iheffner> theresajayne: are you using putty's key agent?

[19:00] *** gusnan joined
[19:00] *** Cromulent joined
[19:02] *** baburdick left
[19:02] *** theRoUS joined
[19:02] *** theRoUS left
[19:02] *** theRoUS joined
[19:02] *** ccushing joined
[19:03] *** kevwil left
[19:04] *** baburdick joined
[19:04] *** OOPMan left
[19:04] *** DofLeFou left
[19:05] *** glennpratt left
[19:05] *** RaceCondition_ left
[19:06] *** alex__c2022 joined
[19:06] *** steveoliver left
[19:06] *** syphar joined
[19:06] *** bandroidx left
[19:07] *** Lukosanthropos joined
[19:10] <theresajayne> ok guys can someone please tell me how to force a push master... I did git push origin master and it said error failed to push some refs to remote repository

[19:10] <theresajayne> I have the master local

[19:10] <FauxFaux> You basically typed the answer in the question..

[19:10] <diverdude> installing gitolite seems not possible :(

[19:11] <gitinfo> theresajayne: Rewriting public history is a very bad idea.  Anyone else who may have pulled the old history will have to `git pull --rebase` and even worse things if they have tagged or branched, so you must publish your humiliation so they know what to do.  You will need to `git push -f` to force the push.  The server may not allow this.  See receive.denyNonFastForwards (git-config)

[19:11] *** codebeaker left
[19:11] *** bandroidx joined
[19:11] <theresajayne> gitolite was causing problems

[19:11] <jast> theresajayne: keeping in mind the warning from the bot, use --force

[19:11] <theresajayne> i just did on the server mkdir .... git init

[19:11] <jast> you need 'RW+' in gitolite, I think

[19:11] <diverdude> theresajayne: do you have gitolite installed?

[19:11] *** petisnnake left
[19:11] <theresajayne> i tried but it refused to config

[19:12] <theresajayne> kept saying it couldnt find gl-install but it was in the current directory

[19:12] <theresajayne> also it wouldnt accept my putty key

[19:12] <FauxFaux> Welcome to linux.

[19:13] * theresajayne pokes FauxFaux : wat you doin in ere then....

[19:13] <theresajayne> :)

[19:13] <FauxFaux> I know everything about eveyrthing, you may have notices.  My speciality is modesty.

[19:13] <jast> putty generates keys in a different format than openssh accepts

[19:13] <FauxFaux> Noticed.  Shut-up.

[19:14] *** glennpratt joined
[19:14] *** yshh joined
[19:14] <FauxFaux> We should find someone who knows their way around the Putty code (¬_¬) and force them to make it clear what's going on.

[19:14] <theresajayne> even force isnt allowing it

[19:15] <jast> we're going to need the full error message

[19:15] <theresajayne> all i want to do is upload my current work to the new server

[19:16] <theresajayne> https://gist.github.com/1584436

[19:16] *** troyt joined
[19:16] *** John2496 left
[19:17] <iheffner> --> refusing to update checked out branch: refs/heads/master

[19:17] <FauxFaux> theresajayne: !faq non-bare

[19:17] <gitinfo> theresajayne: Pushing to non-bare repositories is discouraged; more details available at http://jk.gs/gitfaq#non-bare

[19:17] <theresajayne> when i try to do git reset --hard on the server i get Fatal: Failed to resolve 'HEAD' as a valid ref

[19:17] <theresajayne> its a bare one

[19:18] <jast> sounds like corruption

[19:18] <theresajayne> all i have done on it is git init

[19:18] <jast> oh

[19:18] <FauxFaux> git init or git init --bare?

[19:18] <iheffner> theresajayne: on the server did you do git --bare init?

[19:18] <jast> well, of course... if there's nothing there, reset can't do anything

[19:18] <jast> "bare" isn't the same as "empty", mind you

[19:19] *** OOPMan joined
[19:19] <theresajayne> --bare

[19:19] <theresajayne> so how do i get it up there?

[19:19] *** vdv joined
[19:19] <theresajayne> if i didnt have the repository at all on the server and did a push will that create a new one?

[19:19] <jast> no

[19:19] *** robotmay joined
[19:19] *** h0bbit joined
[19:20] <cbreak> it will tell you that it can't find a repository

[19:20] <cbreak> make one :)

[19:20] <theresajayne> so a bare one cannot be pushed to and a non existant one will not work

[19:20] *** mishok13 left
[19:21] * theresajayne 's head is spinning at the fail logic here

[19:21] <iheffner> theresajayne: no; a pushing to a non-bare repo is discouraged. you have a non-bare repo

[19:21] *** troyt left
[19:21] *** delight left
[19:21] *** n8o-mba joined
[19:21] <theresajayne> how do i have a non bare when i have done git --bare init

[19:22] *** luxurymo_ joined
[19:22] <jast> well it wouldn't have done anything if, for instance, a non-bare repository already existed in the place where you ran that

[19:22] <iheffner> theresajayne: are you sure that's what you did first in that directory?

[19:22] <luxurymo_> git reset wont affect my working dir at all, right?

[19:22] <FauxFaux> Depends on the arguments.

[19:23] *** t4nkd left
[19:23] <theresajayne> ok deleted folder off server and recreated

[19:23] <theresajayne> this time it worked

[19:23] <FauxFaux> Shocking.

[19:23] <theresajayne> FauxFaux the SVN repo and the server crashed big time over Xmas, 2 drives out of a raid 5 failed

[19:23] <cbreak> git init won't clobber existing repositories

[19:24] *** detaer joined
[19:24] <theresajayne> cd ..

[19:25] <EugeneKay> theresajayne - if only you had used RAID 6!

[19:25] <cbreak> ouch

[19:25] <cbreak> at the same time?

[19:25] *** troyt joined
[19:25] *** John2496 joined
[19:25] <cbreak> I read about that: a failing disk causes more load on other disks (during restore) which causes additional failure

[19:25] <theresajayne> we had bad weather 100+ mph winds and it caused serious power issues

[19:25] <cbreak> UPS?

[19:25] <cbreak> or what ever it is called

[19:25] <theresajayne> one drive had corrupted partition table the other failed completely

[19:25] <cbreak> battery power supply

[19:26] <cbreak> what filesystem?

[19:26] <theresajayne> yes we had UPS but that only lasts 1 hour

[19:26] *** joshsmith left
[19:26] <theresajayne> raid 5 = stripe with parity

[19:26] <theresajayne> ext4

[19:26] <EugeneKay> cbreak - I lost my home 5-drive 2TB RAID5 array to that exact problem a few months back. I rebuilt it as RAID6.

[19:26] <theresajayne> so now i have reloaded with the remaining drives

[19:27] <theresajayne> installed esxi 4.1 and set up multiple servers

[19:27] *** TrineLocke left
[19:27] <EugeneKay> The filesystem was mostly fine, but they're the eco-drives that mdadm doesn't like. One pops out occasionally on boot and has to be resynced. Two did that, and I buggered up reassembling it. Bad ju-ju.

[19:27] <cbreak> I only use single disks

[19:27] <cbreak> no raid

[19:27] <cbreak> but at least backups

[19:27] <cbreak> ... maybe I should get more hard disks :)

[19:27] <EugeneKay> I backup daily off-site, weekly to DVD.

[19:28] <luxurymo_> how can i add a rule to to my gitignore to ignore any case where ".svn" is a folder

[19:28] <luxurymo_> so like anywhere in the path

[19:28] *** canton7 joined
[19:28] <luxurymo_> if it finds a .svn then ignore that recursively...

[19:28] <cbreak> luxurymo_: just add .svn

[19:28] <luxurymo_> hmm

[19:28] <luxurymo_> tried that

[19:28] <EugeneKay> luxurymo_ '.svn/'

[19:28] <luxurymo_> lemme see.

[19:28] <luxurymo_> ah /

[19:28] <jast> all non-binary RAIDs suck

[19:28] <cbreak> the trailing / will just make it not match files

[19:28] *** Mrono joined
[19:28] <EugeneKay> cbreak - He did say "is a folder".....

[19:29] <cbreak> jason237: non-binary?

[19:29] <jast> only 0, 1, 10 are aceeptable

[19:29] <cbreak> raid0 is acceptable? :)

[19:29] <EugeneKay> I prefer RAID6+1

[19:29] <luxurymo_> cbreak, + EugeneKay , not workibg

[19:29] <cbreak> if I would use a raid, it'd probably be 3 disks with 50% redundancy (parity)

[19:29] <luxurymo_> git status still shows all .svn files...

[19:29] <cbreak> luxurymo_: it works :)

[19:30] <cbreak> does it show them as untracked?

[19:30] <luxurymo_> cbreak, actually my bad its cuz i alread committed them

[19:30] <jast> cbreak: sure is. it's for a different purpose, obviously.

[19:30] <luxurymo_> should i just reset?

[19:30] <cbreak> luxurymo_: you can't ignore committed things

[19:30] *** harshpb joined
[19:30] <luxurymo_> right so can i just remove from index?

[19:30] <cbreak> git rm --cached

[19:30] <cbreak> or if not committed

[19:30] <cbreak> with git reset

[19:31] <luxurymo_> cant do git rm --cached

[19:31] <luxurymo_> could do git rm -r --cached

[19:31] <luxurymo_> but still didnt do the trick

[19:31] <Mrono> I'm lookig for a guide on how to simply set up a git server on ubuntu

[19:31] *** petisnnake joined
[19:32] *** sako joined
[19:32] <EugeneKay> !gitolite

[19:32] <gitinfo> gitolite allows you to host any number of repositories with extensive access control options for any number of users, using just one system account: http://github.com/sitaramc/gitolite

[19:32] <EugeneKay> Which Ubuntu, Mrono ?

[19:32] <sako> hey guys is there a way to sync up all branches to origin?

[19:32] *** TrineLocke joined
[19:32] <canton7> Mrono, if it's just for personal use, you don't even need gitolite. Just ssh

[19:32] <sako> we did a bunch of cleanup, wondering what the easiest way for devs to sync up now

[19:32] <cbreak> luxurymo_: as said, if it's committed, then you have to remove the things from history

[19:32] <theresajayne> i just did that - ubuntu + git

[19:32] *** rpg joined
[19:32] <luxurymo_> right, i get that. and im asking how?

[19:32] <cbreak> luxurymo_: gitignore only ignores stuff that is listed as untracked

[19:32] <luxurymo_> i understand that

[19:33] <cbreak> git rm --cached and then commit

[19:33] *** baburdick left
[19:33] <theresajayne> well i installed ubuntu then did sudo apt-get install git-core

[19:33] <theresajayne> then created my git user and made the repository as git

[19:34] <theresajayne> we dont need multi user here at the moment but i will try to get gitolite working at some point

[19:34] *** cilly left
[19:34] *** vdv left
[19:34] *** baburdick joined
[19:35] *** lonewulftp left
[19:36] <luxurymo_> cbreak, thanks. got a lil confused bc when i did git rm --cached it responded with usage showing me args, etc

[19:36] *** Goplat left
[19:36] *** Drol^ joined
[19:36] <cbreak> luxurymo_: you have to specify the thing you want to remove of course, and -r if you want to do it recursively :/

[19:36] *** lonewulftp joined
[19:37] *** flijten joined
[19:37] *** brainbox1100 joined
[19:38] *** txomon joined
[19:38] *** txomon left
[19:39] *** troyt left
[19:40] *** macRover joined
[19:41] <luxurymo_> i wanted to remove everything that was staged

[19:41] <luxurymo_> i think i just needed a reset

[19:41] <luxurymo_> figured it out

[19:41] <luxurymo_> thanks for your help

[19:42] *** alvaro_o joined
[19:42] *** _iron joined
[19:42] *** dp joined
[19:42] <dp> is there a way to find out what commit removed a line matching a regex from a file?

[19:43] *** alvaro_o left
[19:43] <iheffner> dp: look at git log -S

[19:44] *** astrostl left
[19:44] <theRoUS> crap, fell off the network.  cbreak, sitaram, did you see my question ?

[19:45] <cbreak> luxurymo_: yeah, if it's not committed, reset is the way

[19:45] <cbreak> theRoUS: what question? :)

[19:45] <dp> iheffner: forgive me, I'm new to git still. how can I use that to determine the actual changes?

[19:46] <jast> dp: -p

[19:46] *** dcarper1 joined
[19:46] *** flavius left
[19:46] *** glennpratt left
[19:47] <iheffner> dp: git log -S'string to find' ; will give you commits that introduce/remove that string; you can then git show the commit(s)

[19:47] <theRoUS> sitaram, cbreak: not solved yet.  ~gitolite/.gitolite is what is being used for the keys and gitolite.conf file -- but it is *not* a repo, nor is it getting updated when i change gitolite.conf and push it

[19:47] <theRoUS> sitaram, cbreak: there is also ~gitolite/gitolite-admin/ which is also not getting updated on pushes

[19:47] <iheffner> dp: or use -p to see the patchset for the commit.

[19:47] <theRoUS> here's from .gitolite.rc: http://pastie.org/3155729

[19:47] *** Sonderblade joined
[19:47] <theRoUS> cbreak, sitaram: shouldn't ~gitolite/.gitolite be a clone of the /repository/gitrepo/gitolite-admin.git repo ?

[19:47] *** Sonderblade left
[19:48] <cbreak> theRoUS: that's ok

[19:48] *** Sonderblade joined
[19:48] <cbreak> no

[19:48] *** sward_ joined
[19:48] <cbreak> why do you care?

[19:48] <theRoUS> cbreak: because i'm updating perms but they're not taking effect.

[19:49] *** khmarbaise joined
[19:49] <theRoUS> i update gitolite.conf and push it, but it doesn't change my access.

[19:49] *** bauruine joined
[19:49] *** robde left
[19:50] *** sward_ left
[19:51] <cbreak> theRoUS: git doesn't track permissions

[19:51] <theRoUS> cbreak: i'm talking about access to the repos

[19:51] *** t4nkd joined
[19:51] <cbreak> so ssh git@server info doesn't list anything new?

[19:51] *** jeffisabelle joined
[19:51] <theRoUS> as defined in gitolite.conf

[19:51] <theRoUS> correct

[19:51] <cbreak> you do push via ssh?

[19:52] <cbreak> (how did you clone the repository? how did you push?)

[19:52] *** glennpratt joined
[19:52] <theRoUS> 'git clone git@host:repo'  'git push origin'

[19:52] <theRoUS> 'git remote' shows origin as 'git@host:repo'

[19:53] <cbreak> hmm... that should be ssh transport

[19:53] <Mrono> canton7: gitolite?

[19:53] <cbreak> gitolite has a hook in its own repository that applies permissions

[19:53] <cbreak> when you push, it should show up in the output when ever it creates new repositories or adds new identities

[19:54] *** jeffisabelle left
[19:54] * canton7 tries to remember what Mrono might be referring to

[19:54] *** jeffisabelle joined
[19:54] <Mrono> canton7: I'm lookig for a guide on how to simply set up a git server on ubuntu

[19:54] <canton7> aah that's the one

[19:54] <canton7> Depends... Do you need multi-user support? Advanced control of permissions?

[19:54] <Mrono> nope

[19:54] <Mrono> just single user full access

[19:55] <cbreak> there's no need to set up anything for that

[19:55] <cbreak> if you have ssh access, that's all you need

[19:55] <canton7> very simpel way is to just create a bare git repo somewhere in your home folder, and access it over ssh (ie you@yourserver:path/to/repo.git)

[19:55] <cbreak> (and git installed of course)

[19:55] <canton7> if you want to keep things cleaner, you can create a 'git' user, and use its home folder

[19:55] <theRoUS> cbreak: if i add a user for a repo, should pushing it say something about it?

[19:56] *** Jay_Levitt left
[19:56] <jast> _ikke_: feature added

[19:57] <_ikke_> jast: Thanks

[19:57] *** drizzd joined
[19:58] *** glcrazy left
[19:59] *** conradev joined
[19:59] <cbreak> theRoUS: yes

[19:59] <cbreak> in particular, if you don't add a key for the user gitolite will complain

[20:00] *** jeppy joined
[20:00] *** jeppy left
[20:00] <cbreak> theRoUS: have you created a new repository?

[20:00] *** jeppy joined
[20:00] <theRoUS> cbreak: i'm just adding myself to existing repositories

[20:00] <cbreak> (by adding a repo line to the config file)

[20:00] <theRoUS> no

[20:00] <cbreak> try it

[20:01] *** fayimora left
[20:02] *** fermianyon left
[20:03] <theRoUS> cbreak: no message about creating a new repo.

[20:03] *** baburdick left
[20:03] <cbreak> sounds as if the hook isn't run

[20:03] *** kmurph79 left
[20:04] <cbreak> does the history arrive in the gitolite-admin repo?

[20:04] *** baburdick joined
[20:04] <theRoUS> cbreak: how do you mean?  how to verify?

[20:05] *** ericmuyser joined
[20:05] <cbreak> cd into it and git log

[20:05] <cbreak> do your commits show up?

[20:05] <theRoUS> into the bare repo?

[20:05] <cbreak> ~git/repository/gitolite-admin.git or something like that

[20:05] <cbreak> yes

[20:05] *** kmurph79 joined
[20:05] <theRoUS> yup

[20:06] <theRoUS> they're there.

[20:06] <cbreak> sounds as if the hook isn't run.

[20:06] <theRoUS> so the hook is borked

[20:06] *** Jay_Levitt joined
[20:06] <cbreak> maybe. take a look at ~git/.ssh/authorized_keys

[20:06] <cbreak> which keys are listed?

[20:06] *** tblamer left
[20:06] <theRoUS> i have two hooks: update and <mumble>mirrorpush.  the others are all still '<mumble>.sample'

[20:07] <theRoUS> cbreak: all of 'em.

[20:07] <cbreak> all?

[20:08] <theRoUS> all the ones from the keydir tree, yes

[20:08] <cbreak> so the new keys were added?

[20:08] *** Akufen left
[20:08] <theRoUS> i'm not adding any users.  the users are there.  i'm giving them access to repos.

[20:08] <cbreak> no

[20:08] *** scientes joined
[20:08] <cbreak> the authorized keys list

[20:09] <cbreak> it is empty at the start

[20:09] <theRoUS> cbreak: and it didn't create the new repo, or course.

[20:09] <scientes> how do i set a git repo to be pushable into so it automaticall git reset --hard 's

[20:09] <cbreak> gitolite then adds keys

[20:09] *** przemoc joined
[20:09] *** maartenv left
[20:09] <cbreak> so you must have added new keys to the gitolite repo

[20:09] *** dp left
[20:09] <cbreak> and gitolite must have added them to the file

[20:09] <cbreak> is there any line that does not start with either # or command?

[20:09] <theRoUS> cbreak: in that case, yes.  all the keys that were added are in there.  unless there's some bizarre leftover from the last install

[20:10] <cbreak> that's a suspicion that lingers around in my head

[20:10] <theRoUS> nope, all start correctly.

[20:10] <cbreak> only keys that start with command="/usr/local/bin/gl-auth-command are from gitolite

[20:10] <theRoUS> what hook is involved and what should it be?

[20:10] *** tblamer joined
[20:10] <scientes> how do i do a hook that reset --hard on push to it?

[20:10] <theRoUS> cbreak: those are the only ones in there.

[20:11] <cbreak> gitolite uses the update hook

[20:11] *** Araxia_ left
[20:11] <cbreak> well, the admin repo has a whole bunch of hooks

[20:12] *** Lukosanthropos left
[20:12] <theRoUS> not this one..

[20:12] *** khmarbaise left
[20:12] <canton7> theRoUS, this might have already been checked, but what URL are you using to access the gitolite-admin repo?

[20:12] <theRoUS> the update hook is there, it links to an executable script.  running the script interactively says 'ENV GL_RC not set' (not surprisingly)

[20:13] <cbreak> the gitolite-admin repo should have at least update, post-update

[20:13] *** Chillance left
[20:13] <theRoUS> canton7: 'git@host:gitolite-admin'

[20:13] <cbreak> post-update -> /var/gitolite/hooks/gitolite-admin/post-update

[20:13] *** mkg7 joined
[20:13] *** Chillance joined
[20:13] <canton7> theRoUS, cool

[20:13] <theRoUS> no post-update hook

[20:14] <cbreak> weird.

[20:14] <cbreak> wonder what went wrong during your installation.

[20:15] <theRoUS> adding the link and trying a change

[20:15] *** Lukosanthropos joined
[20:15] <v0n> hi

[20:15] <theRoUS> that appears to have done it.

[20:16] <v0n> I'd like to create patches for every commits related to a given folder (those shown by `git log <folder>`)

[20:17] <theRoUS> weird shit.

[20:17] <theRoUS> cbreak: anyway, that seems to have fixed my problem.  at least so far..

[20:17] <cbreak> I am suspicious

[20:17] *** wbednarski joined
[20:17] *** brian_g left
[20:17] <cbreak> maybe you screwing with the repo location broke something :)

[20:18] *** sureaint joined
[20:18] <cbreak> v0n: maybe you can instrumentalize git format-patch

[20:18] *** sureaint left
[20:18] <v0n> I was thinking about creating patches with `git format-patch -1` then send them as attachment, but they need to be numbered well, in order to be applied in the chronological order with `git am`

[20:19] *** jesteracer left
[20:19] *** sureaint joined
[20:19] *** m0ck joined
[20:19] <theRoUS> cbreak: oh, i'm sure it broke because of some bone in my head

[20:20] *** shurane left
[20:20] *** wbednarski left
[20:20] *** m0ck left
[20:22] <v0n> cbreak, I think I'll have to count patches number by myself then do git format-patch --stdout > $i.patch

[20:23] <cbreak> v0n: you could just format all patches and delete the ones you don't care about?

[20:24] *** t0mmyvyo left
[20:24] <cbreak> or you could use git filter-branch --subdirectory-filter and format-patch that filtered branch

[20:24] <cbreak> (make a backup branch to filter)

[20:24] <cbreak> that has the side effect of not including files that are outside that directory in the patch

[20:24] <cbreak> which might or might not be what you wish

[20:25] *** chris-_ joined
[20:25] *** harshpb left
[20:25] *** t4nkd left
[20:25] *** psoo joined
[20:28] *** steffo joined
[20:28] *** aspotashev left
[20:30] *** nevyn joined
[20:31] *** kmurph79 left
[20:32] *** Cromulent left
[20:32] <theRoUS> cbreak, sitaram: you guys rock.

[20:32] <theRoUS> or gals

[20:32] <cbreak> :)

[20:32] * theRoUS goes gender-neutral

[20:32] <theRoUS> cbreak, sitaram: you things rock.

[20:32] *** tommyvyo_ joined
[20:34] *** baburdick left
[20:34] *** baburdick joined
[20:35] *** billy_ran_away joined
[20:35] <billy_ran_away> How can I do git stash apply and tell it to override changes in the branch?

[20:37] <cbreak> billy_ran_away: for conflict resolution?

[20:37] <cbreak> git checkout --theirs -- filename

[20:37] <billy_ran_away> cbreak:  Yes

[20:37] <cbreak> maybe

[20:37] <cbreak> not sure if that works with stashes

[20:37] *** zgillis joined
[20:37] <zgillis> Let's talk politics at ##nexo

[20:37] <yrlnry> It should work fine.  A merge conflict from a failed stash application is just like any other failed merge.

[20:37] *** faber left
[20:38] *** zgillis left
[20:38] *** cortana` left
[20:38] <billy_ran_away> cbreak:  That worked! Thanks so much!

[20:38] *** spearce left
[20:38] *** spearce_ joined
[20:39] *** shennyg joined
[20:39] *** Vile joined
[20:39] *** Shusshu joined
[20:42] *** maartenv joined
[20:43] *** Heisenmink_ left
[20:44] *** mirage335 left
[20:44] *** akosikeno left
[20:45] *** valtih_ left
[20:46] *** t4nkd joined
[20:46] *** duckxx joined
[20:46] <duckxx> hello all!

[20:46] *** giallu joined
[20:47] <danols_work> anyone using EGIT here ??? my "Merge Tool" is disabled here and I don't know why

[20:47] <duckxx> so i started editing a file and made some changes and an hour passes. I save the file.. but i want to know what to view what I changed... how do i do a DIFF without commiting my changes?

[20:47] *** theRoUS left
[20:47] <canton7> "git diff"

[20:47] *** wbednarski joined
[20:47] <canton7> (assuming that the file is unstaged)

[20:47] <duckxx> did a 'git diff all.css'

[20:47] <duckxx> nothing returns

[20:48] <iheffner> duckxx: new file?

[20:48] <duckxx> no existing file

[20:48] <duckxx> i havent commited yet

[20:48] <iheffner> duckxx: did you do a git add at some point? try git status

[20:48] <duckxx> yes its already added.. i pulled from a repo

[20:48] *** cccaldas joined
[20:49] <iheffner> git add is not the same as svn add or cvs add

[20:49] <iheffner> git add means "stage these changes for commit"

[20:49] *** tomislater left
[20:49] <duckxx> see: http://prntscr.com/57bhu

[20:50] <canton7> ah, no, that hasn't been added

[20:50] <duckxx> its a modified file

[20:50] *** ipalaus_ joined
[20:50] <duckxx> i just did a git add .

[20:50] <duckxx> returns nothing

[20:50] <duckxx> see here: http://prntscr.com/57bj7

[20:51] *** spearce_ left
[20:51] <canton7> now, you see the file's moved to "Changes to be committed"

[20:51] <canton7> to diff staged files, use git diff --cached

[20:52] <iheffner> I'm thinking that the modification may only be permissions. an earlier git diff returned no changes.

[20:52] *** giallu left
[20:53] *** ericmuyser left
[20:54] *** mirage335 joined
[20:54] *** Werring joined
[20:54] *** tewecske left
[20:55] *** apok left
[20:55] *** sebrock left
[20:56] <cYmen> gitosis or gitolite?

[20:56] <mhi^> !gitolite

[20:56] <gitinfo> gitolite allows you to host any number of repositories with extensive access control options for any number of users, using just one system account: http://github.com/sitaramc/gitolite

[20:56] <mhi^> !gitosis

[20:56] <gitinfo> gitosis is no longer maintained and supported by the author; we usually recommend gitolite instead which has much better documentation and more features: http://github.com/sitaramc/gitolite

[20:58] *** cschneid_ is now known as cschneid

[20:58] *** spearce joined
[20:59] *** dcarper1 left
[20:59] *** Poison left
[20:59] *** Raging_Hog left
[21:00] *** jceb_ joined
[21:00] *** fisted_ left
[21:00] *** _dave_h_d joined
[21:01] <_dave_h_d> hi all, can someone remind me how refresh list of remote branches

[21:01] *** fisted joined
[21:01] <canton7> git fetch

[21:01] <_dave_h_d> thanks cantoma

[21:01] <_dave_h_d> canton7

[21:02] *** ISF_ left
[21:03] <cYmen> mhi^: Thank you!

[21:03] *** mishok13 joined
[21:03] *** ISF_ joined
[21:04] *** joshsmith joined
[21:04] *** baburdick left
[21:05] *** alex__c2022 left
[21:05] *** rpg left
[21:06] <duckxx> i got disconnected... same issue  as im not sure how to diff even with --cached... see here: http://prntscr.com/57bxv

[21:06] *** baburdick joined
[21:07] *** alex__c2022 joined
[21:09] *** ypcat_ joined
[21:09] *** h0bbit left
[21:11] *** umren left
[21:11] <canton7> duckxx, have you done anything else? Moved the repo? Changes permissions on the file?

[21:11] *** Biopandemic left
[21:11] <duckxx> no

[21:11] <canton7> is your pager working ok? how about 'git log'?

[21:11] <duckxx> all i did was just edit 1 line

[21:11] <duckxx> in the file

[21:12] *** marthinal left
[21:13] <duckxx> all i want to do is do a DIFF on my working copy against the HEAD version of the file.... git diff  AND git diff --cached doesnt do anything

[21:14] <duckxx> there's something odd

[21:14] *** Jay_Levitt left
[21:14] <canton7> what about git log?

[21:14] <canton7> i'm after whether it displays correctly

[21:14] <duckxx> OMG

[21:14] *** erichynds left
[21:15] <duckxx> was missing sudo

[21:15] *** VladGh left
[21:15] <duckxx> \o/

[21:15] <duckxx> thanks canton7

[21:15] *** drev1 joined
[21:15] <duckxx> now u know if someone asks the same thing

[21:15] <duckxx> sudo git diff

[21:15] *** benares_98 left
[21:15] <canton7> that's weird. Who owns the contents of .git ?

[21:15] *** chrishatton joined
[21:15] <canton7> and the rest of the css folder, come to that

[21:16] <duckxx> so is that why.. if the .git folder is owned by another user.. u cant do a diff

[21:17] *** Exodist joined
[21:17] <canton7> well if the other doesn't have permissions to read the contents of .git, then it will fail... I would have expected it to throw an error, though

[21:17] <duckxx> yea exactly. no error

[21:17] <duckxx> so confusing.. all this time...

[21:18] <canton7> and yet some of .git must be readable, as git status spotted the modification

[21:18] *** drev1_ joined
[21:18] *** tangledhelix joined
[21:19] *** drev1 left
[21:19] *** drev1_ is now known as drev1

[21:20] <duckxx> so when i use the flag --cached

[21:20] <duckxx> what is cached referring to ?

[21:20] <j416> the index

[21:20] <j416> a.k.a. the cashe

[21:20] <j416> er

[21:20] <j416> cache*

[21:20] <duckxx> what you mean by the index ?

[21:21] <j416> a.k.a. the staging area

[21:21] <duckxx> where is that stored ?

[21:21] <duckxx> in the .git folder ?

[21:21] <j416> yes

[21:21] *** kmurph79 joined
[21:21] <canton7> when you "git add" a file, it gets added to the index. When you "git commit", the contents of the index are made into a commit

[21:21] *** heptadecagram left
[21:21] <duckxx> and where is the commit stored ?

[21:21] <duckxx> not in the index right ?

[21:22] <j416> duckxx: everything goes in .git/

[21:22] <j416> in different places.

[21:22] <j416> the index is a cache.

[21:22] <canton7> !bottomup

[21:22] <gitinfo> 'Git from the bottom up' starts with explaining the building blocks of git and proceeds to tell you how they fit together. http://ftp.newartisans.com/pub/git.from.bottom.up.pdf

[21:22] <j416> you can delete it without consequences, unless you staged something you want to save.

[21:22] *** yshh left
[21:22] *** jryans left
[21:22] *** jryans joined
[21:23] <duckxx> yes exactly wat i neeed.. i need to understand how exactly git does stuff cuz im still clueless on how it works from the ground up as im using for at least 6 months already

[21:23] *** twisted` left
[21:23] <canton7> make sure you read !book cover-to-cover, if you haven't already

[21:23] <gitinfo> 'Pro Git' is a complete book about git that is available online for free (there's a print version, too): http://progit.org/book/

[21:23] *** windsurf_ joined
[21:23] <duckxx> what y mean by staged ... when u stage something u mean "git commit "

[21:23] <duckxx> ??

[21:23] <canton7> !cs is also a good read

[21:23] <gitinfo> 'Git for Computer Scientists' explains the basic structures used by git, which is very helpful for understanding its concepts. http://sitaramc.github.com/gcs/

[21:23] <j416> duckxx: read the book and you'll know

[21:23] <canton7> to stage a file, you "git add" it

[21:23] <duckxx> o ok

[21:23] <canton7> but yeah, read the book. All of the book. Then you shall become wise :)

[21:24] <windsurf_> I don't like how I merged (resolved changes) for a file. I have not committed what I've done yet. What's the right way for me to start resolving changes for the file again?

[21:24] <windsurf_> discard local changes?

[21:24] *** kmurph79 left
[21:25] <windsurf_> i guess i want the file to go back to its initial conflicted state

[21:25] *** brian_g joined
[21:25] <canton7> windsurf_, git checkout -m file, apparently, though I've not tried it

[21:26] *** t4nkd left
[21:26] *** duckxxx joined
[21:26] *** n8o-mba left
[21:26] *** duckxx left
[21:26] <canton7> as long as you haven't added it, it seems

[21:26] *** fr0sty joined
[21:27] <windsurf_> canton7: will look into it  thanks

[21:28] *** spearce left
[21:28] *** t4nkd joined
[21:29] *** spearce joined
[21:29] *** axl__ joined
[21:29] *** twisted` joined
[21:30] *** airborn left
[21:30] *** monokrome left
[21:31] *** flyz left
[21:31] *** t4nkd left
[21:32] *** axl_ left
[21:32] <diverdude> how can i on the machine which gitolite is installed on check if it has been properly installed?

[21:33] *** Xizor joined
[21:33] *** giallu joined
[21:33] *** AlexC_ joined
[21:33] *** whyking left
[21:33] <AlexC_> Morning

[21:34] *** kermit left
[21:34] *** kermit joined
[21:35] *** baburdick left
[21:35] <AlexC_> Just a little sanity check: Say I have a remote repository, "A", that I clone, make some commits to and then push that to a different remote, "B". If some new commits appear in remote "A" that I would like in my repo (and also on remote "B"), then only way I can do this is via `git merge` correct? If I did a rebase that would require a force push to remote "B", and mess other developers repos up, right?

[21:36] *** Heimidal joined
[21:36] *** baburdick joined
[21:36] <canton7> if you're developing in in your clone and/or in B, then yes

[21:37] <AlexC_> Thanks :)

[21:38] *** jceb_ left
[21:38] <iheffner> depends on the nature of the rebase, I think

[21:38] *** mloskot joined
[21:38] *** mloskot left
[21:38] *** mloskot joined
[21:39] <iheffner> oh.. re-reading... you have remotes A and B and local repo L. You've made changes in L and pushed to B. and now you want to get additions from A into L and B?

[21:41] <AlexC_> iheffner: Yes. "A" is our base repo that contains a common framework, so we clone that and then push to a project-specific repo, "B". If we do some work to the framework in "A" we would want those changes in our projects. I've always done merge, but just wanted to check there wasn't a cleaner way to do it with rebase (that doesn't require a force push)

[21:42] *** _RegEx_ joined
[21:42] *** glcrazy joined
[21:43] *** jsick3 left
[21:43] *** t4nkd joined
[21:44] <diverdude> how do i test if gitolite is installed correctly?

[21:44] *** ericmuyser joined
[21:44] <iheffner> seems like merging A into L and then pushing to B is the best way

[21:44] *** brian_g left
[21:44] *** gitinfo sets mode: +v _RegEx_

[21:44] <AlexC_> iheffner: Yep, that's what we do right now

[21:45] <AlexC_> Thanks both

[21:45] <_RegEx_> Hi all. I didn't know the terminology so I couldn't find what I'm looking for in the man pages. If I have a remote --bare --shared repo, can I somehow get the actual files out of it?

[21:45] <canton7> clone it

[21:45] *** airborn joined
[21:46] <iheffner> "The files are inside the computer!"

[21:46] *** Cromulent joined
[21:47] <_RegEx_> iheffner: :O!!!!

[21:47] *** drizzd left
[21:47] *** Roberta}{ joined
[21:47] <diverdude> any1?

[21:48] <_RegEx_> canton7: Oh, so I should just have a separate directory where I clone, duh >_>....

[21:48] <_RegEx_> canton7: THanks

[21:48] *** Roberta}{ left
[21:49] *** fujin joined
[21:50] *** _RegEx_ left
[21:52] *** zztw joined
[21:53] *** softcoder joined
[21:53] <zztw> i cant' find in `git help log` what option shows full diffs. --full-diff does nothing... hints?

[21:53] *** _iron left
[21:53] *** bindaasomatic left
[21:53] <softcoder> hi guys git question

[21:53] <softcoder> i am about to make git repos from my svn project

[21:53] *** drev1 left
[21:53] <softcoder>  i want to split into 3 repos, source, data and data-source

[21:54] <softcoder> current under trunk i have a bunch of folders (one of them is data)

[21:54] <FauxFaux> 1) get it into git.  2) man git filter-branch

[21:54] <gitinfo> the git-filter-branch manpage is available at http://jk.gs/git-filter-branch.html

[21:54] <softcoder> when creating the source git repo how can i pull in everything under trunk EXCEPT the data folder?

[21:54] *** edude03 joined
[21:54] *** Dave^|| left
[21:55] <softcoder> FauxFaux, you were talking to me?

[21:55] *** proq` joined
[21:55] <iheffner> zztw: git log -p ?

[21:56] <proq`> how do I check out by date?

[21:56] *** johnanderson left
[21:57] *** arosen joined
[21:57] *** msponge joined
[21:57] <arosen> I just did a git clone of a repo with stuff in it but when I type git log i don't see anything. Any ideas?

[21:57] <softcoder> anyone able to help me with my question?

[21:57] <zztw> iheffner: thanks!

[21:57] *** fayimora joined
[21:58] *** alester left
[21:58] <zztw> i guess i just overlooked that three times

[21:58] *** edude03 left
[21:59] *** rpg joined
[22:00] *** johnanderson joined
[22:00] <iheffner> softcoder: FauxFaux wast talking to you.

[22:00] <iheffner> *was

[22:00] *** SamB joined
[22:01] *** edude03 joined
[22:01] <softcoder> but thats not good

[22:01] <softcoder> the data folder is huge and i don't want to pull it in only toi remove it after

[22:01] *** kmurph79 joined
[22:01] <FauxFaux> arosen: Not really a supported operation; you can do something like git checkout -b temp $(git log --format=%h -1 --before='2011-07-13') # ?

[22:01] *** tommyvyo_ left
[22:02] *** Heimidal_ joined
[22:02] *** tblamer left
[22:02] <softcoder> is there a way to svn clone everything in the trunk folder except one folder?

[22:02] <arosen> FauxFaux: how do i see the commit history?

[22:02] <arosen> git log does that

[22:02] <iheffner> softcoder: you would need to pull it into a temp repo; you then split that repo into different repos and trash the origin (temp) one

[22:02] <arosen> but it doesn't seem to do it on this one box

[22:02] <FauxFaux> arosen: What kind of question is that? :/

[22:02] *** spearce left
[22:03] *** gusnan left
[22:03] <softcoder> ok how do i split after pulling the whole repo?

[22:03] *** spearce joined
[22:03] *** omenar left
[22:03] <iheffner> softcoder: man git filter-branch

[22:03] <gitinfo> softcoder: the git-filter-branch manpage is available at http://jk.gs/git-filter-branch.html

[22:03] *** Carmivore left
[22:03] <arosen> FauxFaux: git diff doesn't seem to work either.  I do a clone. change a file then git diff and it doesn't report anything.

[22:03] *** merkosh left
[22:03] *** edude03 left
[22:03] *** bartek left
[22:04] <softcoder> ok i'm new to git

[22:04] <FauxFaux> arosen: "git diff | cat"?

[22:04] *** sven^_ left
[22:04] *** Heimidal left
[22:04] *** Carmivore joined
[22:04] <softcoder> can anyone help me with the params for the filter to split?

[22:04] <arosen> FauxFaux: nope...

[22:04] <softcoder> assume i have trunk, under there i have folderA-Z

[22:05] <softcoder> i want to split out folderB to its own repo

[22:05] <FauxFaux> arosen: Have fun diagnosing that.

[22:05] *** aro left
[22:05] <softcoder> how can i do that?

[22:05] *** zztw left
[22:05] <iheffner> softcoder: to back up a bit: are you planning making a permanent move from svn to git?

[22:05] <softcoder> yes

[22:05] *** baburdick left
[22:06] *** spaceonline left
[22:06] <chrisf> softcoder: excellent

[22:06] *** spaceonline joined
[22:06] <iheffner> ok. then this is a valid path; I'm not sure you'd have been able to do what you want and keep svn history as well.

[22:07] <softcoder> so how do i do it

[22:07] *** baburdick joined
[22:07] *** Chaser joined
[22:08] <arosen> FauxFaux:  The weird thing is if i tar up this exact repo and move it to a different machine. And then run git log i see the log entries

[22:08] *** jeffisabelle left
[22:09] <chrisf> arosen: have you got some crap in your env?

[22:10] <softcoder> anyone?

[22:10] *** shruggar joined
[22:11] <chrisf> arosen: GIT_DIR etc

[22:11] *** cannonball left
[22:11] <arosen> chrisf: that is blank on the working and none working machine.

[22:12] *** lonewulf` joined
[22:12] <chrisf> GIT_WORK_TREE being set would also have those strange results

[22:13] <arosen> http://codepad.org/nbiBFT2Y

[22:13] <arosen> yea that's not set either

[22:13] <arosen> running those exact commands produce different results on different machines :/

[22:13] <chrisf> got something wild in ~/.gitconfig?

[22:13] <iheffner> softcoder: you'll want to do something like git filter-branch --tree-filter 'rm -rf folder{A,C-Z}'

[22:13] <iheffner> I think...

[22:13] *** nrichards left
[22:14] <arosen> nope..

[22:14] <arosen> don't even have one.

[22:14] <chrisf> versions are sensible?

[22:14] <iheffner> arosen: what does git status say?

[22:15] <softcoder> so this filter keeps everything but B??? looks like it rm's everything but B?

[22:15] <arosen> the weird thing is both boxes are running the same version: 1.7.3.4-r1

[22:15] <arosen> arosen@pg46 ~/sos-agent $ git status # On branch master nothing to commit (working directory clean)

[22:16] <arosen> okay so i've do echo hello world > a

[22:16] <arosen> git status now shows a file a

[22:16] <arosen> #	a

[22:16] <arosen> but git log doesn't show it

[22:16] <iheffner> softcoder: you have to make two branches; one for "just B" and one for "everything but B"; then push each branch into a repository that matches the use.

[22:16] <chrisf> i wouldnt expect it to

[22:16] <iheffner> *new repository

[22:16] * arosen ignore what i just said..

[22:16] *** duckxxx left
[22:17] *** duckxx joined
[22:17] <arosen> I changed this file. git status knows that i did #	modified:   testing/server.c

[22:17] <arosen> but git diff doesn't say i did

[22:17] <softcoder> I'm asking how to make a repo with everything but B

[22:17] <softcoder> i would like to know the proper commandline

[22:18] <softcoder> I don't have GB's of bandwidth to experiemnt with the wrong options

[22:19] *** j416 left
[22:20] *** johnanderson left
[22:20] *** mloskot left
[22:20] <v0n> is it possible to get the list of commits returned by `git log path/to/a/directory`, but with the gitrevisions syntax?

[22:21] *** cccaldas left
[22:21] <EugeneKay> If you have a git repo that measures "GBs", you need to look at !large_repos

[22:21] <gitinfo> Git can be slow in the face of large repositories.  There are git-config options which can help.  pack.threads=1; pack.deltaCacheSize=1; pack.windowMemory=512m; core.packedGitWindowSize=16m; core.packedGitLimit=128m. Other likely ones exist.

[22:21] <EugeneKay> That's not the one i was after.

[22:21] <EugeneKay> !large_files

[22:21] <gitinfo> Git isn't yet great at large files (larger than RAM).  See http://git-annex.branchable.com/ and https://github.com/schacon/git-media

[22:22] *** johnanderson joined
[22:22] *** duckxx left
[22:22] *** ericmuyser left
[22:23] <iheffner> softcoder: the first thing would be to clone the svn repo locally; then it takes 0b of bandwidth to experiment. change the --tree-filter to just 'rm -rf folderB' to keep everything but B. I'm already at load 3, so can't help determine the exact command you need to use. Read though the man page carefully. It has a lot of info, but it explains what you want to do fairly well.

[22:23] *** mloskot joined
[22:23] *** mloskot left
[22:23] *** mloskot joined
[22:24] *** duckxx joined
[22:24] <softcoder> nevermind

[22:24] *** guampa joined
[22:24] <softcoder> theres --ignore-paths

[22:24] <softcoder> that should work

[22:25] *** Textmode left
[22:25] *** t4nkd left
[22:25] *** drev1 joined
[22:26] *** codeshah left
[22:26] *** winux joined
[22:27] <winux> how do i remove multiple files from my local git directory? i need to do it so i can pull from a remote repo

[22:27] <winux> but when i do i get 'Please move or remove them before you can merge.'

[22:27] *** fermianyon joined
[22:27] <EugeneKay> man git-stash

[22:27] <gitinfo> the git-stash manpage is available at http://jk.gs/git-stash.html

[22:27] *** erichynds joined
[22:27] *** spaceonline left
[22:28] <EugeneKay> First few times you use stash, you should use apply instead of pop.

[22:28] <EugeneKay> Until you get the hang of it, it makes it harder to accidentally delete all your hard work

[22:29] <EugeneKay> If you just want to make your repository not-dirty, man git-clean

[22:29] <gitinfo> the git-clean manpage is available at http://jk.gs/git-clean.html

[22:29] <EugeneKay> (Or reset --hard)

[22:29] <winux> EugeneKay:  i just want to remove all the crap and re-git them from the remote

[22:29] *** Shusshu left
[22:29] *** codeshah joined
[22:29] <winux> EugeneKay: all of the files are just files affected somehow by a rake

[22:30] *** drev1 left
[22:30] <EugeneKay> git fetch <remote>; git reset --hard FETCH_HEAD

[22:30] *** rrrreimer joined
[22:31] *** psoo left
[22:31] <winux> EugeneKay: ah great, thanks

[22:31] *** mishok13 left
[22:31] *** brian_g joined
[22:31] *** dAnjou joined
[22:31] *** d0k left
[22:32] <dAnjou> hi, how cat i have git status in a pager?

[22:32] <dAnjou> *can

[22:33] <wereHamster> git status | $PAGER ?

[22:33] <EugeneKay> git status | less

[22:33] *** gusnan joined
[22:33] *** davidfetter_vmw joined
[22:33] <davidfetter_vmw> hello

[22:33] <wereHamster> or more general: <any command> | <your pager>

[22:33] <davidfetter_vmw> i got a patch. i'd like to review it as i apply it

[22:33] <wereHamster> davidfetter_vmw: !hello

[22:33] <gitinfo> davidfetter_vmw: [!welcome] Welcome to this channel. Go ahead and ask your question. Very few people are responding to greetings, but will respond if a question is asked.

[22:33] *** slackorama joined
[22:33] <davidfetter_vmw> how do i do that?

[22:34] <wereHamster> davidfetter_vmw: how do you review patches usually?

[22:34] <davidfetter_vmw> there's something in perforce i'd rather not describe here :P

[22:34] <wereHamster> davidfetter_vmw: is the patch big?

[22:34] <davidfetter_vmw> basically, i'm looking to make sure i don't get gratuitous white space changes

[22:34] <davidfetter_vmw> fairly good-sized

[22:35] <wereHamster> davidfetter_vmw: there's one problem. Tell the person who created the patch to make small, incremental patches instead one big blob.

[22:35] *** ISF_ left
[22:35] *** billy_ran_away left
[22:35] <davidfetter_vmw> that's not something i control. isn't there some way to look at what the patch will do before applying it?

[22:35] <EugeneKay> davidfetter_vmw - apply the patch to your work-tree, git add -i <paths>

[22:36] <davidfetter_vmw> <paths> ?

[22:36] *** baburdick left
[22:36] <wereHamster> as for reviewing, for each hunk; do review $hunk; if good then next else write comment; end

[22:36] <EugeneKay> Whatever was affected by the patch.

[22:36] *** flijten left
[22:36] <wereHamster> davidfetter_vmw: you can apply it and then look at the result. Don't be afraid applying it

[22:36] <EugeneKay> Or, git diff it to see what was applied, THEN add -i to apply in hunks.

[22:36] *** nax__ joined
[22:37] *** baburdick joined
[22:37] *** nax__ left
[22:38] *** fayimora left
[22:38] *** Chillance left
[22:39] <davidfetter_vmw> git reset --hard unapplies everything?

[22:39] <EugeneKay> It moves you to the point specified.

[22:39] <EugeneKay> man git-reset

[22:39] <gitinfo> the git-reset manpage is available at http://jk.gs/git-reset.html

[22:40] *** luxurymo_ left
[22:40] *** saberman_1 joined
[22:41] <diverdude> how do i test if gitolite is set up properly?

[22:41] <EugeneKay> ssh git@hostname info

[22:41] <Sigma> davidfetter_vmw: our reviewboard can also accept git repositories ;) Otherwise you can just create a branch to apply your patch, and delete or merge it afterwards

[22:42] <davidfetter_vmw> Sigma, do tell :)

[22:44] *** timonia joined
[22:44] *** saberman_1 left
[22:44] *** icwiener left
[22:45] *** thorbjornDX joined
[22:45] *** nicxvan joined
[22:46] *** p3rror joined
[22:46] *** neurodrone left
[22:47] *** canton7 left
[22:47] <dAnjou> wereHamster, EugeneKay: with color. -R doesn't work here

[22:48] <dAnjou> and it would be really nice if i don't have to pipe it

[22:48] *** softcoder left
[22:48] *** wbednarski left
[22:49] *** TrineLocke left
[22:50] *** matsebc left
[22:50] *** digitalfiz left
[22:50] *** matsebc joined
[22:50] *** ThomasLocke left
[22:51] *** p3rror is now known as UnicornS

[22:51] *** monk12 left
[22:52] *** softcoder joined
[22:52] <softcoder> can someone help me with --ignore-paths

[22:52] <softcoder> my svn repo is here: http://megaglest.svn.sourceforge.net/viewvc/megaglest/

[22:52] <softcoder> i'm trying to NOT clone the folders in the ignore list using this command:

[22:52] <softcoder> git svn clone --stdlayout --ignore-paths="^[^/]+/(?:tags|branches|trunk/data|trunk-data-source)" https://megaglest.svn.sourceforge.net/svnroot/megaglest megaglest

[22:53] <fr0sty> dAnjou: GIT_PAGER=less git status

[22:53] <softcoder> but when the command runs it seems to be pulling in stuff in the ignore path list

[22:54] *** afief joined
[22:54] <dAnjou> fr0sty: unfortunatly not

[22:54] <softcoder> example first output of the command:

[22:54] <softcoder> Initialized empty Git repository in /home/softcoder/Code/megaglest-git/megaglest/.git/

[22:54] <softcoder> Found possible branch point: https://megaglest.svn.sourceforge.net/svnroot/megaglest/ => https://megaglest.svn.sourceforge.net/svnroot/megaglest/tags/release-3.2.3, 14

[22:55] <dAnjou> fr0sty: git -p ... :)

[22:55] *** dv310p3r left
[22:56] *** glennpratt left
[22:57] *** mloskot left
[22:59] *** Anxi80 joined
[22:59] *** ZGirl joined
[23:00] *** txomon|home left
[23:00] <ZGirl> Hello. I have a fork of a repository for a software that recently released a new version. Is there a way to pull all commits up to the certain commit where they did the release? Thanks

[23:01] *** dcarper joined
[23:01] *** aro joined
[23:02] *** LongBeach left
[23:02] *** bauruine left
[23:02] *** Heimidal_ left
[23:02] *** Heimidal joined
[23:03] <nevyn> ZGirl: was the release tagged?

[23:03] <nevyn> so there's no easy way to filter commits on push/pull

[23:04] <ZGirl> Yes. I might have a more complex situation though because I have an extra commit in a different branch, and I'm trying to merge the new version in over that.

[23:04] <nevyn> but you can pull everything and checkout the release

[23:04] <nevyn> ZGirl: rebase your stuff onto the release may make more sense

[23:05] <nevyn> so you have A -> B -> C -> local_D -> local_E in your copy

[23:05] <nevyn> and the mainline has A -> B -> c

[23:06] *** snearch joined
[23:06] <nevyn> and the mainline has A -> B -> C -> D -> E -> F -> G   with the release being F

[23:06] *** Cromulent left
[23:06] <nevyn> rebase let's you move things around so you get

[23:06] *** alan_w left
[23:06] *** baburdick left
[23:06] <nevyn> A -> B -> C -> D -> E -> F -> local_D -> local_E

[23:07] <ZGirl> Would this work if the modification I made has already been pushed a few weeks ago? Should I rebase in that case?

[23:07] *** Goplat joined
[23:07] <ZGirl> Should I maybe use git cherry-pick?

[23:07] <nevyn> so the rule of thumb is "don't rebase public branches"

[23:08] <nevyn> but there are exceptions. particularly if the push'd tree isn't the basis for anyone's work.

[23:08] *** baburdick joined
[23:09] <nevyn> ZGirl: did it get pushed back to mainline? or to your own public repo?

[23:09] *** MANCHUCK left
[23:09] *** crash\\ left
[23:09] *** ph^ left
[23:09] *** crash\ joined
[23:09] <ZGirl> Just to my fork

[23:09] <ZGirl> But it's sort of public because we have multiple devs

[23:09] <nevyn> right.

[23:10] *** afief left
[23:10] *** afief joined
[23:10] <nevyn> so do local_D or local_E exist in the upstream you want to merge in?

[23:11] *** Godslastering left
[23:11] *** Sigma left
[23:12] <ZGirl> Let's see, I'm a bit confused, hehe. I have 'master' and 'kohana' branches. I am tracking the original repo and pulling those into master. Then I am making my modifications to 'kohana' and merging in from master. kohana doesn't exist in the original reop.

[23:12] *** rendar left
[23:12] <ZGirl> Might be a weird way to do it?

[23:13] <nevyn> no that's normal ish..

[23:13] *** swombat joined
[23:14] *** Sonderblade left
[23:14] *** Peeks joined
[23:15] *** macRover left
[23:15] *** ChanServ sets mode: +v Peeks

[23:16] <Peeks> Hi folks - i have a quick question about git. I'm at work right now and i've created a new branch this arvo .. did some work .. and now I want to go home and work on it there.

[23:16] <Peeks> does this mean I need to commit my changes (which aren't working right now)

[23:16] <Peeks> or is there another way?

[23:17] *** winux left
[23:17] *** John2496 left
[23:18] *** edude03 joined
[23:19] <Mikachu> Peeks: committing is always safe, you can uncommit later, or edit the existing commit, etc

[23:19] <Mikachu> Peeks: it's definitely easier to transfer if you commit

[23:19] <Mikachu> Peeks: just make sure nobody else starts working on that branch while you have unfinished stuff in it

[23:19] <nevyn> ZGirl: I prefer rebase based workflows where there is a definable "upstream"

[23:19] <nevyn> or mainline

[23:19] <nevyn> but it's a preference

[23:20] <Peeks> so there's no patch thingy?

[23:20] *** Agos joined
[23:20] <nevyn> in some ways what you're doing with merges is a better reflection of reality.

[23:20] <Mikachu> Peeks: i don't know exactly what you want

[23:20] *** pantsman joined
[23:20] <nevyn> Peeks: you could create a diff and just take the diff but it seems silly

[23:20] <nevyn> Peeks: just make a new scratch branch and commit it to that.

[23:21] <Peeks> Mikachu: sure. i've started a new branch. modified some files .. but i'm only half way through my change. Compiling breaks, for example. But it's time for home. So i want to pick up my 'changes' and take them home

[23:21] *** Jak_o_Shadows joined
[23:21] <Peeks> then add these changes to my home computer

[23:21] *** kennethreitz left
[23:21] <Peeks> a new scratch branch?

[23:21] <Jak_o_Shadows> I just deleted two fiels accidentally, how can I recover them without losing my changes? Do a commit, of other files, and then checkout?

[23:21] <Peeks> so i branch off my current experimental branch?

[23:22] <Mikachu> Peeks: sure, that's the easiest way to push it between computers

[23:22] <nevyn> Peeks: if the last commit of your experimental branch works and current state doesn't sure

[23:22] <cmn> Jak_o_Shadows: git checkout HEAD -- files

[23:22] *** jason237 left
[23:22] <cmn> that will checkout whatever files from the last commit

[23:22] <cmn> or had you made changes?

[23:22] <Peeks> correct guys. last commit works, current state doesn't. so what are the commands i should do in git-bash, pretty please?

[23:22] <Jak_o_Shadows> But if i've got changes, best to commit those first?

[23:22] <nevyn> Peeks: call it "experimental_broken" or  experimental_inprogress or whatever whatever.

[23:23] <Peeks> so i goto the bash. it says C;\blahhhh... (experimental)

[23:23] <cmn> Jak_o_Shadows: depends on the commands you want to run; but for a checkout in file-mode, there's no need

[23:23] <cmn> had you made changes to the files before you deleted them?

[23:24] <Peeks> then i do git checkout experimental_incomplete

[23:24] <Jak_o_Shadows> cmn no.

[23:24] *** Godslastering joined
[23:24] <nevyn> git stash git checkout -b experimental_broken git stash apply git commit -a -m "commit broken state so it's in the repo"

[23:24] *** Godslastering left
[23:24] <Peeks> whoa.

[23:24] <cmn> Jak_o_Shadows: then that command I gave you will bring back those files

[23:24] <Peeks> git stash ? (googles for that)

[23:24] <FauxFaux> man git stash

[23:24] <gitinfo> the git-stash manpage is available at http://jk.gs/git-stash.html

[23:24] <cmn> there's no need for stash there, is there?

[23:25] <nevyn> cmn: probably not.

[23:25] <cmn> just creating a new branch from the current state

[23:25] <nevyn> I worry about git checkout -b resetting to HEAD.

[23:25] <nevyn> but I don't think it does

[23:25] *** _dave_h_d left
[23:25] <Jak_o_Shadows> Thanks.

[23:25] *** Jak_o_Shadows left
[23:26] <Peeks> so if i create a second branch while i've switched into my experimental branch

[23:26] <cmn> git checkout -b something will make HEAD point to that new branch, but it'll point to the same commit as HEAD, and the workdir changes will be preserved

[23:26] <Peeks> this new second branch will include all the code (changes) from my experimental one?

[23:26] <nevyn> yep.

[23:26] <Peeks> ah kewl.

[23:26] <Peeks> so then i can commit this 2nd branch

[23:26] <Peeks> push it

[23:26] <nevyn> yep.

[23:26] <Peeks> go home

[23:26] <Peeks> pull it

[23:26] <nevyn> pull it.

[23:26] <Peeks> and continue

[23:26] <nevyn> yep.

[23:26] <Peeks> ahh

[23:27] *** Behi joined
[23:27] <nevyn> there's a tiny trick to continue

[23:27] <Behi> hi

[23:27] <Peeks> and then i can merge the 2nd into the 1st?

[23:27] <nevyn> which is you checkout experimental_incomplete

[23:27] * Peeks listens

[23:27] <nevyn> you could do that...

[23:27] <nevyn> or you could be tricky and use reset

[23:27] <nevyn> so if you git checkout experimental_incomplete

[23:27] <nevyn> and then

[23:27] <Behi> let's suppose that I have a ruby script in my git repo. Is there a way to make sure it gets executed whenever someone clones that repo?

[23:27] <nevyn> git reset experimental --soft

[23:28] <cmn> Behi: !hi

[23:28] <gitinfo> Behi: [!welcome] Welcome to this channel. Go ahead and ask your question. Very few people are responding to greetings, but will respond if a question is asked.

[23:28] <nevyn> which gives you exactly what you have now.

[23:28] *** ZGirl_ joined
[23:28] *** ZGirl left
[23:28] *** ZGirl_ is now known as ZGirl

[23:28] <nevyn> which is experimental with the code in your working dir uncommited

[23:28] <Peeks> git rest experimental --soft .. ok then. which branch do i need to be in, to run that? experimental or experimental_incomplete

[23:29] <Peeks> reset*

[23:29] <nevyn> it changes the HEAD pointer without changing the working dir.

[23:29] <nevyn> so you do it from experimental_incomplete

[23:29] *** Cromulent joined
[23:30] <Peeks> cheers :)

[23:30] <nevyn> which means that HEAD now points to experimental (so you're back on the experimental tree with the code changes you have now)

[23:30] <nevyn> does that make sense?

[23:30] <Peeks> yep

[23:30] <Peeks> cheers :)

[23:31] <nevyn> or  you could continue hacking on experimental_incomplete until you had it working then reset and commit to experimental once it works in one hit.

[23:31] *** toofar joined
[23:32] *** maartenv left
[23:32] *** TeckniX left
[23:32] *** Xizor left
[23:34] *** kmurph79 left
[23:35] *** ZGirl left
[23:36] *** madewokherd joined
[23:37] *** baburdick left
[23:37] *** brian_g left
[23:38] *** baburdick joined
[23:38] *** Fandekasp joined
[23:40] *** Biopandemic joined
[23:40] <diverdude> i am trying to clean out my machine completely for gitolite files. Is it safe to delete these files: http://bin.cakephp.org/view/1311922588 ? and are there more?

[23:40] *** chrishatton left
[23:41] <brainbox1100> If I want to un-stage all my files, is there a quick way to do this. Right now I just stash then apply the stash.

[23:41] *** mxweas joined
[23:42] *** mxweas left
[23:43] *** eijk_ left
[23:43] <cmn> you can reset the index

[23:44] *** tellone joined
[23:44] *** tellone left
[23:45] *** tellone joined
[23:45] *** airborn left
[23:46] <diverdude> cmn: me?

[23:46] *** afief left
[23:46] <cmn> no, that was to brainbox1100

[23:46] *** dAnjou left
[23:46] <diverdude> cmn: oh ok...do you know about gitolite?

[23:47] <cmn> only as a user

[23:47] *** snearch left
[23:48] *** swombat left
[23:48] <brainbox1100> cmn: thx.

[23:48] *** kennethreitz joined
[23:49] *** Phylock left
[23:49] *** txomon|home joined
[23:50] <blueyed> I have forked a project and now want to get some file into an own branch. What's the best way to create a pull request from there?

[23:50] <sitaram> diverdude: http://sitaramc.github.com/gitolite/install.html#clean (appendix b: cleaning out a botched install)

[23:51] <sitaram> diverdude: do you have root on the machine?

[23:51] *** swombat joined
[23:52] *** Morphous_ left
[23:52] *** acl_ left
[23:53] *** jryans_ joined
[23:53] *** FLeiXiuS joined
[23:53] <FLeiXiuS> error: cannot open .git/FETCH_HEAD: Permission denied - when my user has group permissions.  Do I need to own the file?

[23:55] *** koo4 left
[23:55] *** fr0sty left
[23:56] *** koo4 joined
[23:56] <Peeks> question: is there any way to the size of each commit, for my entire repo? so i can see which commit has some 'large' files in it (which might be a mistake)

[23:56] *** jryans left
[23:56] *** jryans_ is now known as jryans

[23:57] *** fr0sty joined
[23:57] *** brian_g joined
[23:57] <EugeneKay> Peeks - I found a tool called git-rev-size on the mailing list history. It's in ruby, for whatever reason. http://markmail.org/message/762zzg5zckbiq2i7

[23:58] *** cmyk_ joined
[23:58] *** giallu left
[23:59] <Peeks> cheers! (i'm on windows .. with no ruby installed. oh well)

[23:59] *** shruggar left
[23:59] *** beatak left
[23:59] <sitaram> Peeks: I have a shell version which ought to work but I can't guarantee it.  Here's some sample output: http://dpaste.org/edWEf/

